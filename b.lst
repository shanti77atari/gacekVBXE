mads 2.1.0 build 8 (23 Dec 19)
Source: b.asm
     1 				//bomb jack new version
     2
     3 						
     4 							icl 'atari.hea'
Source: atari.hea
     1
     2 				.enum	@dmactl
     3 = 0000				blank	= %00
     4 = 0001				narrow	= %01
     5 = 0002				standard= %10
     6 = 0003				wide	= %11
     7 = 0004				missiles= %100
     8 = 0008				players	= %1000
     9 = 0010				lineX1	= %10000
    10 = 0000				lineX2	= %00000
    11 = 0020				dma	= %100000
    12 				.ende
    13
    14 = 003F			scr48	= @dmactl(wide|dma|players|missiles|lineX1)		;screen 48b
    15 = 003E			scr40	= @dmactl(standard|dma|players|missiles|lineX1)		;screen 40b
    16 = 003D			scr32	= @dmactl(narrow|dma|players|missiles|lineX1)		;screen 32b
    17
    18 				.enum	@pmcntl
    19 = 0001				missiles= %1
    20 = 0002				players	= %10
    21 = 0004				trigs	= %100
    22 				.ende
    23
    24 				.enum	@gtictl
    25 = 0000				prior0	= %0
    26 = 0001				prior1	= %1
    27 = 0002				prior2	= %10
    28 = 0004				prior4	= %100
    29 = 0008				prior8	= %1000
    30 = 0010				ply5	= %10000	; Fifth Player Enable
    31 = 0020				mlc	= %100000	; Multiple Color Player Enable
    32 = 0040				mode9	= %01000000
    33 = 0080				mode10	= %10000000
    34 = 00C0				mode11	= %11000000
    35 				.ende
    36
    37
    38 				* ---------------------------------------------------------------------------------------------
    39 				* ---	OS
    40 				* ---------------------------------------------------------------------------------------------
    41
    42 = 0052			lmargin	= $52
    43 = 0053			rmargin	= $53
    44 = 0054			rowcrs	= $54
    45 = 0055			colcrs	= $55
    46
    47 				* ---------------------------------------------------------------------------------------------
    48 				* ---	KEY ($d209)
    49 				* ---------------------------------------------------------------------------------------------
    50 = 001C			key_esc		= 28
    51 = 0021			key_space	= 33
    52 = 0010			key_v		= 16
    53 = 0015			key_b		= 21
    54 = 0023			key_n		= 35
    55 = 0025			key_m		= 37
    56
    57 				* ---------------------------------------------------------------------------------------------
    58 				* ---	GTIA
    59 				* ---------------------------------------------------------------------------------------------
    60 = D000			hposp0	=	$D000		; pozioma pozycja gracza 0 (Z)
    61 = D001			hposp1	=	$D001		; pozioma pozycja gracza 1 (Z)
    62 = D002			hposp2	=	$D002		; pozioma pozycja gracza 2 (Z)
    63 = D003			hposp3	=	$D003		; pozioma pozycja gracza 3 (Z)
    64 = D004			hposm0	=	$D004		; pozioma pozycja pocisku 0 (Z)
    65 = D005			hposm1	=	$D005		; pozioma pozycja pocisku 1 (Z)
    66 = D006			hposm2	=	$D006		; pozioma pozycja pocisku 2 (Z)
    67 = D007			hposm3	=	$D007		; pozioma pozycja pocisku 3 (Z)
    68 = D008			sizep0	=	$D008		; poziomy rozmiar gracza 0 (Z)
    69 = D009			sizep1	=	$D009		; poziomy rozmiar gracza 1 (Z)
    70 = D00A			sizep2	=	$D00A		; poziomy rozmiar gracza 2 (Z)
    71 = D00B			sizep3	=	$D00B		; poziomy rozmiar gracza 3 (Z)
    72 = D00C			sizem	=	$D00C		; poziomy rozmiar pocisków (Z)
    73 = D00D			grafp0	=	$D00D		; rejestr grafiki gracza 0 (Z)
    74 = D00E			grafp1	=	$D00E		; rejestr grafiki gracza 1 (Z)
    75 = D00F			grafp2	=	$D00F		; rejestr grafiki gracza 2 (Z)
    76 = D010			grafp3	=	$D010		; rejestr grafiki gracza 3 (Z)
    77 = D011			grafm	=	$D011		; rejestr grafiki pocisków (Z)
    78 = D012			colpm0	=	$D012		; rejestr koloru gracza i pocisku 0 (Z)
    79 = D013			colpm1	=	$D013		; rejestr koloru gracza i pocisku 1 (Z)
    80 = D014			colpm2	=	$D014		; rejestr koloru gracza i pocisku 2 (Z)
    81 = D015			colpm3	=	$D015		; rejestr koloru gracza i pocisku 3 (Z)
    82 = D016			colpf0	=	$D016		; rejestr koloru pola gry 0 (Z)
    83 = D017			colpf1	=	$D017		; rejestr koloru pola gry 1 (Z)
    84 = D018			colpf2	=	$D018		; rejestr koloru pola gry 2 (Z)
    85 = D019			colpf3	=	$D019		; rejestr koloru pola gry 3 (Z)
    86 = D01A			colbak	=	$D01A		; rejestr koloru t³a (Z)
    87
    88 = D016			color0	=	colpf0
    89 = D017			color1	=	colpf1
    90 = D018			color2	=	colpf2
    91 = D019			color3	=	colpf3
    92
    93 = D000			kolm0pf	=	$D000		; kolizja pocisku 0 z polem gry (O)
    94 = D001			kolm1pf	=	$D001		; kolizja pocisku 1 z polem gry (O)
    95 = D002			kolm2pf	=	$D002		; kolizja pocisku 2 z polem gry (O)
    96 = D003			kolm3pf	=	$D003		; kolizja pocisku 3 z polem gry (O)
    97 = D004			kolp0pf	=	$D004		; kolizja gracza 0 z polem gry (O)
    98 = D005			kolp1pf	=	$D005		; kolizja gracza 1 z polem gry (O)
    99 = D006			kolp2pf	=	$D006		; kolizja gracza 2 z polem gry (O)
   100 = D007			kolp3pf	=	$D007		; kolizja gracza 3 z polem gry (O)
   101 = D008			kolm0p	=	$D008		; kolizja pocisku 0 z graczem (O)
   102 = D009			kolm1p	=	$D009		; kolizja pocisku 1 z graczem (O)
   103 = D00A			kolm2p	=	$D00A		; kolizja pocisku 2 z graczem (O)
   104 = D00B			kolm3p	=	$D00B		; kolizja pocisku 3 z graczem (O)
   105 = D00C			kolp0p	=	$D00C		; kolizja gracza 0 z innym graczem (O)
   106 = D00D			kolp1p	=	$D00D		; kolizja gracza 1 z innym graczem (O)
   107 = D00E			kolp2p	=	$D00E		; kolizja gracza 2 z innym graczem (O)
   108 = D00F			kolp3p	=	$D00F		; kolizja gracza 3 z innym graczem (O)
   109 = D010			trig0	=	$D010		; stan przycisku joysticka 0 (O)
   110 = D011			trig1	=	$D011		; stan przycisku joysticka 1 (O)
   111 = D013			trig3	=	$D013		; znacznik do³¹czenia cartridge-a (O)
   112 = D014			pal	=	$D014		; znacznik systemu TV (O)
   113
   114 = D01B			gtictl	=	$D01B		; rejestr kontroli uk³adu GTIA
   115 = D01B			gtiactl	=	gtictl
   116
   117 = D01C			vdelay	=	$D01C		; licznik opóŸnienia pionowego P/MG
   118 = D01D			pmcntl	=	$D01D		; rejestr kontroli graczy i pocisków
   119 = D01E			hitclr	=	$D01E		; rejestr kasowania rejestrów kolizji
   120 = D01F			consol	=	$D01F		; rejestr stanu klawiszy konsoli
   121
   122 				* ---------------------------------------------------------------------------------------------
   123 				* ---	POKEY
   124 				* ---------------------------------------------------------------------------------------------
   125
   126 = 0010			irqens	=	$0010		; rejestr-cieñ IRQEN
   127 = 0011			irqstat	=	$0011		; rejestr-cieñ IRQST
   128
   129 = D200			audf1	=	$d200		; czêstotliwoœæ pracy generatora 1 (Z)
   130 = D201			audc1	=	$d201		; rejestr kontroli dŸwiêku generatora 1 (Z)
   131 = D202			audf2	=	$d202		; czêstotliwoœæ pracy generatora 2 (Z)
   132 = D203			audc2	=	$d203		; rejestr kontroli dŸwiêku generatora 2 (Z)
   133 = D204			audf3	=	$d204		; czêstotliwoœæ pracy generatora 3 (Z)
   134 = D205			audc3	=	$d205		; rejestr kontroli dŸwiêku generatora 3 (Z)
   135 = D206			audf4	=	$d206		; czêstotliwoœæ pracy generatora 4 (Z)
   136 = D207			audc4	=	$d207		; rejestr kontroli dŸwiêku generatora 4 (Z)
   137
   138 = D208			audctl	=	$D208		; rejestr kontroli generatorów dŸwiêku (Z)
   139 = D209			stimer	=	$D209		; rejestr zerowania liczników (Z)
   140 = D209			kbcode	=	$D209		; kod ostatnio naciœniêtego klawisza (O)
   141 = D20A			skstres	=	$D20A		; rejestr statusu z³¹cza szeregowego (Z)
   142 = D20A			random	=	$D20A		; rejestr liczby losowej (O)
   143 = D20D			serout	=	$D20D		; szeregowy rejestr wyjœciowy (Z)
   144 = D20D			serin	=	$D20D		; szeregowy rejestr wejœciowy (O)
   145 = D20E			irqen	=	$D20E		; zezwolenie przerwañ IRQ (Z)
   146 = D20E			irqst	=	$D20E		; status przerwañ IRQ (O)
   147 = D20F			skctl	=	$D20F		; rejestr kontroli z³¹cza szeregowego (Z)
   148 = D20F			skstat	=	$D20F		; rejestr statusu z³¹cza szeregowego (O)
   149
   150 = D200			pot0	=	$D200		;wiose³ko 0
   151 = D20B			potg0	=	$D20B		;zerowanie wiose³ek
   152
   153 				* ---------------------------------------------------------------------------------------------
   154 				* ---	PIA
   155 				* ---------------------------------------------------------------------------------------------
   156 = D300			porta	=	$D300		; port A uk³adu PIA
   157 = D301			portb	=	$D301		; port B uk³adu PIA
   158 = D302			pactl	=	$D302		; rejestr kontroli portu A
   159 = D303			pbctl	=	$D303		; rejestr kontroli portu B
   160
   161 				* ---------------------------------------------------------------------------------------------
   162 				* ---	ANTIC
   163 				* ---------------------------------------------------------------------------------------------
   164 = D400			dmactl	=	$D400		; rejestr kontroli dostêpu do pamiêci
   165 = D401			chrctl	=	$D401		; rejestr kontroli wyœwietlania znaków
   166 = D402			dlptr	=	$D402		; adres programu ANTIC-a
   167 = D404			hscrol	=	$D404		; znacznik poziomego przesuwu obrazu
   168 = D405			vscrol	=	$D405		; znacznik pionowego przesuwu obrazu
   169 = D407			pmbase	=	$D407		; adres pamiêci graczy i pocisków
   170 = D409			chbase	=	$D409		; adres zestawu znaków
   171 = D40A			wsync	=	$D40A		; znacznik oczekiwania na synchronizacjê poziom¹
   172 = D40B			vcount	=	$D40B		; licznik linii obrazu
   173 = D40C			lpenh	=	$D40C		; poziome po³o¿enie pióra œwietlengo
   174 = D40D			lpenv	=	$D40D		; pionowe po³o¿enie pióra œwietlnego
   175 = D40E			nmien	=	$D40E		; rejestr zezwoleñ na przerwania NMI
   176 = D40F			nmist	=	$D40F		; rejestr statusu przerwañ NMI
   177
   178 				* ---------------------------------------------------------------------------------------------
   179 				* ---	OS
   180 				* ---------------------------------------------------------------------------------------------
   181
   182 = 02C4			colpf0s	=	$02C4		; rejestr-cieñ COLPF0
   183 = 02C5			colpf1s	=	$02C5		; rejestr-cieñ COLPF1
   184 = 02C6			colpf2s	=	$02C6		; rejestr-cieñ COLPF2
   185 = 02C7			colpf3s	=	$02C7		; rejestr-cieñ COLPF3
   186 = 02C8			colbaks	=	$02C8		; rejestr-cieñ COLBAK
   187 = 0222			vbiv	=   $0222		; systemowy wektor przerwania VBI
   188 = 0200			dliv	=	$0200		;systemowy wektor przerwania DLI
   189 = 0216			vimirq	=	$0216
   190
   191 				* ---------------------------------------------------------------------------------------------
   192 				* ---	HARDWARE
   193 				* ---------------------------------------------------------------------------------------------
   194
   195 = FFFA			nmivec	=	$FFFA		; wektor przerwania NMI
   196 = FFFC			resetvec=	$FFFC		; wektor przerwania RESET
   197 = FFFE			irqvec	=	$FFFE		; wektor przerwania IRQ
     5
     6 = D014			NTSCGTIA=$d014
     7
     8 				//stale
     9
    10 				;znaki
    11 = 0040			ch_rampa=64
    12 = 0042			ch_bomb0=64+2		;niebieskie tlo
    13 = 0052			ch_bomb1=64+18		;brazowe tlo
    14 = 0062			ch_bomb2=64+34		;biala+niebieskie tlo
    15 = 0066			ch_bomb3=64+38		;biala+brazowe tlo
    16
    17 = 006A			ch_bonus=64+42		;znaki z bonusem
    18
    19 				//ksztalty
    20 = 0000			shp_ptak_lewo=0
    21 = 0004			shp_ptak_pion=4
    22 = 0008			shp_ptak_prawo=8
    23 = 0018			shp_jgora_srodek=24
    24 = 0019			shp_jgora_prawo=25
    25 = 001A			shp_jgora_lewo=26
    26 = 0015			shp_jdol_srodek=21
    27 = 0016			shp_jdol_prawo=22
    28 = 0017			shp_jdol_lewo=23
    29 = 000C			shp_jlewo=12
    30 = 0010			shp_jprawo=16
    31 = 0014			shp_jstoi=20
    32 = 001C			shp_jspada=28
    33 = 001E			shp_jupada=30
    34
    35 = 0070			shp_czapka=112
    36 = 0074			shp_czapka1=116
    37 = 002C			shp_radar=44	;36
    38 = 0060			shp_ufo=96	;40
    39 = 0020			shp_globus=32	;44
    40 = 0030			shp_explo=48
    41 = 0034			shp_mumia_spada=52
    42 = 0038			shp_mumia_lewo=56
    43 = 003C			shp_mumia_prawo=60
    44 = 0040			shp_przemiana=64
    45 = 0044			shp_bonus=68
    46 = 0048			shp_extra=72
    47 = 004C			shp_paraliz=76
    48 = 0050			shp_buzka=80
    49 = 0058			shp_oko=88	;84	
    50
    51 = 0068			shp_jtanczy=104		;4 fazy
    52
    53 				//BANKI
    54 = 00FE			BANK_off	equ %11111110
    55 = 00C2			BANK0		equ %11000010
    56 = 00C6			BANK1		equ %11000110
    57 = 00CA			BANK2		equ %11001010
    58 = 00CE			BANK3		equ %11001110
    59
    60 				//STALE
    61 = 000A			LICZNIK_EXTRA_START=10
    62
    63
    64 				//tablice
    65 = E000			znaki		equ $e000		;6 zestawÃ³w
    66 = DA00			obraz		equ $da00		;pamiec obrazu 48x26=$600
    67 = F800			sprites		equ $f800
    68 = C000			znaki1		equ $c000		;znaki w panelu
    69
    70 				.rept		6,#
    71 				ZN:1		EQU >(ZNAKI+:1*$400)			
    72 				.ENDR
    72 				.endr
Source: REPT
    71 = 00E0			ZN0		EQU >(ZNAKI+0*$400)			
    71 = 00E4			ZN1		EQU >(ZNAKI+1*$400)			
    71 = 00E8			ZN2		EQU >(ZNAKI+2*$400)			
    71 = 00EC			ZN3		EQU >(ZNAKI+3*$400)			
    71 = 00F0			ZN4		EQU >(ZNAKI+4*$400)			
    71 = 00F4			ZN5		EQU >(ZNAKI+5*$400)			
Source: b.asm
    73
    74
    75
    76 							opt h-
    77 							org $80			
    78
    79 = 0014			zegar		equ $14		;zegar systemowy	
    80
    81 				regA		org *+1
    82 				regX		org *+1
    83 				licznik		org *+1
    84 				bit12		org *+1
    85 				bit0		org *+1
    86 				bit1		org *+1
    87 				bit2		org *+1
    88 				bit3		org *+1
    89 				bit4		org *+1
    90 				bit5		org *+1
    91 				bit6		org *+1
    92 				bit7		org *+1
    93 					
    94 				pom			org *+2
    95 				pom1		org *+2
    96 				pom2		org *+2
    97 				pom3		org *+2
    98 				pom4		org *+2
    99 				pom0		org *+1
   100 				pom0a		org *+1
   101 				pom0b		org *+1
   102 				pom0c		org *+1
   103 				pom0d		org *+1
   104 				pom0e		org *+1
   105 				pom0f		org *+1
   106 				pom0g		org *+1
   107 				pom0h		org *+1
   108
   109 				gracz_y1	org *+1		;poprzednia pozycja Y gracza
   110 				ile_enemy	org *+1
   111 				max_enemy	org *+1
   112 				ile_ptakow	org *+1
   113 				licznik_ptak org *+1
   114 				max_ptakow	org *+1
   115 				musicNTSC	org *+1
   116
   117 				kanal_audf1			org *+2	
   118 				kanal_audf2			org *+2	
   119 				kanal_audf3			org *+2	
   120 				kanal_audf4			org *+2
   121 				kanal_audc1			org *+2	
   122 				kanal_audc2			org *+2	
   123 				kanal_audc3			org *+2					
   124 				kanal_audc4			org *+2
   125 				ile_score			org *+1		;ile jest wyÅ›wietlanych punktÃ³w na planszy
   126
   127 				prio		org *+1
   128 				death		org *+1
   129
   130 				fx_ptr		org *+2
   131 				level_melody org *+1
   132 				muza0		org *+1
   133 				last_bomba	org *+1
   134 				czy_zapalona	org *+1
   135 				ile_zapalonych	org *+1
   136 				kolor_P			org *+1
   137 				score1		org *+1
   138 				bonus_flag	org *+1
   139 				paraliz_flag	org *+1
   140 				licznik1_paraliz	org *+1
   141 				licznik_extra		org *+1
   142 				ile_paraliz		org *+1		;ile zebrano przeciwnikÃ³w
   143 				random_extra	org *+1
   144
   145
   146
   147 							org $d800
   148 							
   149 				level		org *+1	
   150 				kolor_tlo	org *+1	
   151 				kolor0		org *+1
   152 				kolor1		org *+1
   153 				kolor2		org *+1
   154 				kolor3		org *+1
   155 				trig0s		org *+1
   156 				last_shape	org *+1
   157 				ile_bomb	org *+1
   158 				predkosc_spadanie	org *+1
   159 				ramka		org *+1
   160 				poziom		org *+1
   161 				ruch_poziom	org *+1
   162 				round		org *+1
   163 				score		org *+3
   164 				ile_ramp	org *+1
   165 				spadanie	org *+1
   166 				wysokosc_lotu	org *+1
   167 				bonus		org *+1
   168 				licznik_bonus	org *+1
   169 				lives		org *+1
   170
   171 				kanal1			org *+1
   172 				petla1			org *+1
   173 				kanal2			org *+1
   174 				petla2			org *+1
   175 				kanal3			org *+1
   176 				petla3			org *+1
   177 				kanal4			org *+1
   178 				petla4			org *+1
   179
   180 				kanal1s			org *+2		;2 bajty , uzywamy tylko 1
   181 				kanal2s			org *+2
   182 				kanal3s			org *+2
   183 				kanal4s			org *+2
   184
   185 				hscore			org *+3
   186 				licznik_death	org *+1
   187 				licznik_paraliz	org *+2
   188 				after_paraliz	org *+1
   189 				czy_extra		org *+1
   190
   191
   192
   193
   194 						
   195 							opt h+
   196 							
   197 							org $2001
   198 							icl './init_vbxe.asm'
Source: init_vbxe.asm
     1 				//inicjalizacja vbxe
     2 = 0000			shape_vbxe=$00000
     3 = 070800			xdl_vbxe=$70800
     4 = 070880			bcb_vbxe=$70880
     5 = 070900			bcb1_vbxe=$70900
     6 = 070980			bcb2_vbxe=$70980
     7 = 070A00			bcb3_vbxe=$70a00
     8 = 070A80			bcb4_vbxe=$70a80
     9 = 070B00			bcb5_vbxe=$70b00
    10 = 070B80			bcb6_vbxe=$70b80
    11 = 070C00			bcb7_vbxe=$70c00
    12 = 070C80			bcb8_vbxe=$70c80
    13 = 070D00			bcb9_vbxe=$70d00
    14 = 070D80			bcb10_vbxe=$70d80
    15 = 070E00			bcb11_vbxe=$70e00
    16 = 070E80			bcb12_vbxe=$70e80
    17 = 010000			scr_vbxe=$10000
    18 = 030000			bufor_vbxe=$30000		;do rozpakowania tÅ‚a
    19
    20
    21 = 0010			shape_WIDTH=16
    22 = 0010			shape_HEIGHT=16
    23
    24 							
    25 				_init				
    26 FFFF> 2001-2AE3> 20 72 + 			jsr fx_detect
    27 2004 F0 03					beq @+
    28 2006 6C 0A 00					jmp (10)
    29 = 2009			@			equ *			
    30
    31
    32 				//clear VBXE		
    33 2009 A0 40					ldy	#$40	; VIDEO_CONTROL			blokujemy vbxe
    34 200B A9 00 91 B9					mva	#0	(fx_ptr),y	; xdl_disabled
    35
    36 200F A0 5D					ldy	#$5d	; MEMB		
    37 2011 A9 9C 91 B9					mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
    38 2015 A9 B1 85 90 A9 29 + 			mwa	#cls_bcb	pom2
    39 201D 20 91 29					jsr	blit							;skopiuj procedure i wyczysc ekran
    40 							
    41 				//WAIT for BLITTER
    42 2020 A0 53					ldy	#$53	; BLITTER_BUSY
    43 2022 B1 B9		@			lda (fx_ptr),y
    44 2024 D0 FC					bne @-	
    45 							
    46 				//COPY SHAPE		
    47 2026 A0 5D					ldy #$5d
    48 2028 A9 80 91 B9					mva #$80+[shape_vbxe>>14] (fx_ptr),y
    49
    50 202C A9 4C 85 96 A9 00 + 			mwa #76 pom0
    51 2034 A9 00 85 8E A9 40 + 			mwa #$4000 pom1				;jack right 4 klatki;0
    52 203C A9 74 85 8C A9 84 + 			mwa #$8000+[15*76] pom
    53 2044 20 68 28					jsr copy_shape			
    54 2047 A9 88 85 8C A9 84 + 			mwa #$8000+[15*76]+20 pom
    55 204F 20 68 28					jsr copy_shape			
    56 2052 A9 9C 85 8C A9 84 + 			mwa #$8000+[15*76]+40 pom
    57 205A 20 68 28					jsr copy_shape		
    58 205D A9 B0 85 8C A9 84 + 			mwa #$8000+[15*76]+60 pom
    59 2065 20 68 28					jsr copy_shape
    60 							
    61 							
    62 							
    63 2068 A9 34 85 8C A9 89 + 			mwa #jack_left+[15*76] pom		;jack left 4 klatki;4
    64 2070 20 68 28					jsr copy_shape
    65 2073 A9 48 85 8C A9 89 + 			mwa #jack_left+[15*76]+20 pom		
    66 207B 20 68 28					jsr copy_shape
    67 207E A9 5C 85 8C A9 89 + 			mwa #jack_left+[15*76]+40 pom		
    68 2086 20 68 28					jsr copy_shape
    69 2089 A9 70 85 8C A9 89 + 			mwa #jack_left+[15*76]+60 pom		
    70 2091 20 68 28					jsr copy_shape
    71 							
    72 2094 A9 A0 85 96 A9 00 + 			mwa #160 pom0
    73 209C A9 E0 85 8C A9 92 + 			mwa #jack_lata+[15*160] pom		;jack gora_srodek	;8
    74 20A4 20 68 28					jsr copy_shape
    75 20A7 A9 30 85 8C A9 93 + 			mwa #jack_lata+[15*160]+80 pom		;jack gora_prawo;9	
    76 20AF 20 68 28					jsr copy_shape
    77 20B2 A9 58 85 8C A9 93 + 			mwa #jack_lata+[15*160]+120 pom		;jack gora_lewo;10
    78 20BA 20 68 28					jsr copy_shape
    79 20BD A9 F4 85 8C A9 92 + 			mwa #jack_lata+[15*160]+20 pom		;jack dol_srodek;11
    80 20C5 20 68 28					jsr copy_shape
    81 20C8 A9 44 85 8C A9 93 + 			mwa #jack_lata+[15*160]+100 pom		;jack dol_prawo;12
    82 20D0 20 68 28					jsr copy_shape
    83 20D3 A9 6C 85 8C A9 93 + 			mwa #jack_lata+[15*160]+140 pom		;jack dol_lewo;13
    84 20DB 20 68 28					jsr copy_shape
    85 							
    86 20DE A9 24 85 96 A9 00 + 			mwa #36 pom0
    87 20E6 A9 9C 85 8C A9 95 + 			mwa #jack_spada+[15*36] pom		;jack_spada0	;14
    88 20EE 20 68 28					jsr copy_shape			
    89 20F1 A9 B0 85 8C A9 95 + 			mwa #jack_spada+[15*36]+20 pom		;jack_spada1	;15
    90 20F9 20 68 28					jsr copy_shape
    91 							
    92 20FC A9 2C 85 96 A9 00 + 			mwa #44 pom0
    93 2104 A9 54 85 8C A9 98 + 			mwa #jack_upada+[15*44] pom		;jack_upada0	;16
    94 210C 20 68 28					jsr copy_shape			
    95 210F A9 6C 85 8C A9 98 + 			mwa #jack_upada+[15*44]+24 pom		;jack_upada1	;17
    96 2117 20 68 28					jsr copy_shape
    97 							
    98 211A A9 10 85 96 A9 00 + 			mwa #16 pom0
    99 2122 A9 70 85 8C A9 99 + 			mwa #jack_stoi+[15*16] pom		;jack_stoi	;18
   100 212A 20 68 28					jsr copy_shape		
   101
   102 212D A9 70 85 8C A9 9A + 			mwa #empty+[15*16] pom		;pusty klocek ;19
   103 2135 20 68 28					jsr copy_shape
   104 							
   105 2138 A9 5C 85 96 A9 01 + 			mwa #348 pom0
   106 2140 A9 E4 85 8C A9 AE + 			mwa #mumia0+[348*15] pom	;	mumia_spada0		;20
   107 2148 20 68 28					jsr copy_shape		
   108 214B A9 F8 85 8C A9 AE + 			mwa #mumia0+[348*15]+20 pom	;	mumia_spada1	;21
   109 2153 20 68 28					jsr copy_shape		
   110 2156 A9 0B 85 8C A9 AF + 			mwa #mumia0+[348*15]+38+1 pom	;	mumia_prawo0	;22
   111 215E 20 68 28					jsr copy_shape		
   112 2161 A9 1B 85 8C A9 AF + 			mwa #mumia0+[348*15]+55 pom	;	mumia_prawo1	;23
   113 2169 20 68 28					jsr copy_shape	
   114 216C A9 2B 85 8C A9 AF + 			mwa #mumia0+[348*15]+71 pom	;	mumia_prawo2	;24
   115 2174 20 68 28					jsr copy_shape	
   116 2177 A9 39 85 8C A9 AF + 			mwa #mumia0+[348*15]+85 pom	;	mumia_lewo0	;25
   117 217F 20 68 28					jsr copy_shape	
   118 2182 A9 49 85 8C A9 AF + 			mwa #mumia0+[348*15]+101 pom	;	mumia_lewo1	;26
   119 218A 20 68 28					jsr copy_shape	
   120 218D A9 59 85 8C A9 AF + 			mwa #mumia0+[348*15]+117 pom	;	mumia_lewo2	;27
   121 2195 20 68 28					jsr copy_shape	
   122 2198 A9 6C 85 8C A9 AF + 			mwa #mumia0+[348*15]+136 pom	;	ptak_lewo0		;28
   123 21A0 20 68 28					jsr copy_shape	
   124 21A3 A9 80 85 8C A9 AF + 			mwa #mumia0+[348*15]+156 pom	;	ptak_lewo1		;29
   125 21AB 20 68 28					jsr copy_shape	
   126 21AE A9 94 85 8C A9 AF + 			mwa #mumia0+[348*15]+176 pom	;	ptak_lewo2		;30
   127 21B6 20 68 28					jsr copy_shape	
   128 21B9 A9 A9 85 8C A9 AF + 			mwa #mumia0+[348*15]+197 pom	;	ptak_srodek0	;31
   129 21C1 20 68 28					jsr copy_shape	
   130 21C4 A9 BD 85 8C A9 AF + 			mwa #mumia0+[348*15]+217 pom	;	ptak_srodek1	;32
   131 21CC 20 68 28					jsr copy_shape
   132 21CF A9 D1 85 8C A9 AF + 			mwa #mumia0+[348*15]+237 pom	;	ptak_srodek2	;33
   133 21D7 20 68 28					jsr copy_shape
   134 21DA A9 6C 85 8C A9 AF + 			mwa #mumia0+[348*15]+136 pom	;	ptak_prawo0	;34
   135 21E2 20 39 28					jsr copy_shape1	
   136 21E5 A9 80 85 8C A9 AF + 			mwa #mumia0+[348*15]+156 pom	;	ptak_prawo1	;35
   137 21ED 20 39 28					jsr copy_shape1	
   138 21F0 A9 94 85 8C A9 AF + 			mwa #mumia0+[348*15]+176 pom	;	ptak_prawo2	;36
   139 21F8 20 39 28					jsr copy_shape1
   140 21FB A9 F8 85 8C A9 AF + 			mwa #mumia0+[348*15]+276 pom	;	radar0			;37
   141 2203 20 68 28					jsr copy_shape	
   142 2206 A9 0C 85 8C A9 B0 + 			mwa #mumia0+[348*15]+296 pom	;	radar1			;38
   143 220E 20 68 28					jsr copy_shape	
   144 2211 A9 1C 85 8C A9 B0 + 			mwa #mumia0+[348*15]+312 pom	;	radar2			;39
   145 2219 20 68 28					jsr copy_shape	
   146 221C A9 2C 85 8C A9 B0 + 			mwa #mumia0+[348*15]+328 pom	;	radar0			;40
   147 2224 20 68 28					jsr copy_shape	
   148 							
   149 							
   150 				//xdlist	
   151 2227 A0 5D					ldy	#$5d	; MEMB
   152 2229 A9 9C 91 B9					mva	#$80+[xdl_vbxe>>14]	(fx_ptr),y	; mbce
   153 						
   154 222D A0 0C					ldy	#xdl_len-1
   155 222F B9 D7 2A		@			lda xdl,y
   156 2232 99 00 48					sta $4000+[xdl_vbxe&$3fff],y		;przygotuj do skopiowania do vbxe
   157 2235 88						dey
   158 2236 10 F7					bpl @-
   159 							
   160 2238 A0 40					ldy	#$40	; VIDEO_CONTROL
   161 223A A9 01 91 B9					mva	#1	(fx_ptr),y	; xdl_enabled
   162 223E C8						iny
   163 223F A9 00 91 B9					mva	#xdl_vbxe&$ff	(fx_ptr),y	; XDL_ADR0			podaj adres 24bitowy
   164 2243 C8						iny
   165 2244 A9 08 91 B9					mva	#[xdl_vbxe>>8]&$ff	(fx_ptr),y	; XDL_ADR1
   166 2248 C8						iny
   167 2249 A9 07 91 B9					mva	#xdl_vbxe>>16	(fx_ptr),y	; XDL_ADR2
   168 							
   169 				//paleta	, losowe wartosci	
   170 224D 20 BA 28					jsr set_colors
   171 							
   172 2250 A0 5D					ldy	#$5d	; MEMB		
   173 2252 A9 9C 91 B9					mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   174 2256 A9 C6 85 90 A9 29 + 			mwa	#bcb	pom2
   175 							
   176 225E A0 14					ldy	#bcb_len-1
   177 2260 B1 90		@			lda (pom2),y
   178 2262 99 80 48					sta $4000+[bcb_vbxe&$3fff],y
   179 2265 88						dey
   180 2266 10 F8					bpl @-		
   181
   182 2268 A9 DB 85 90 A9 29 + 			mwa #bcb1 pom2
   183 2270 A0 14					ldy	#bcb1_len-1
   184 2272 B1 90		@			lda (pom2),y
   185 2274 99 00 49					sta $4000+[bcb1_vbxe&$3fff],y
   186 2277 88						dey
   187 2278 10 F8					bpl @-	
   188
   189 227A A9 F0 85 90 A9 29 + 			mwa #bcb2 pom2
   190 2282 A0 14					ldy	#bcb2_len-1
   191 2284 B1 90		@			lda (pom2),y
   192 2286 99 80 49					sta $4000+[bcb2_vbxe&$3fff],y
   193 2289 88						dey
   194 228A 10 F8					bpl @-	
   195
   196 228C A9 05 85 90 A9 2A + 			mwa #bcb3 pom2
   197 2294 A0 14					ldy	#bcb3_len-1
   198 2296 B1 90		@			lda (pom2),y
   199 2298 99 00 4A					sta $4000+[bcb3_vbxe&$3fff],y
   200 229B 88						dey
   201 229C 10 F8					bpl @-		
   202
   203 229E A9 1A 85 90 A9 2A + 			mwa #bcb4 pom2
   204 22A6 A0 14					ldy	#bcb4_len-1
   205 22A8 B1 90		@			lda (pom2),y
   206 22AA 99 80 4A					sta $4000+[bcb4_vbxe&$3fff],y
   207 22AD 88						dey
   208 22AE 10 F8					bpl @-	
   209
   210 22B0 A9 2F 85 90 A9 2A + 			mwa #bcb5 pom2
   211 22B8 A0 14					ldy	#bcb5_len-1
   212 22BA B1 90		@			lda (pom2),y
   213 22BC 99 00 4B					sta $4000+[bcb5_vbxe&$3fff],y
   214 22BF 88						dey
   215 22C0 10 F8					bpl @-	
   216
   217 22C2 A9 44 85 90 A9 2A + 			mwa #bcb6 pom2
   218 22CA A0 14					ldy	#bcb6_len-1
   219 22CC B1 90		@			lda (pom2),y
   220 22CE 99 80 4B					sta $4000+[bcb6_vbxe&$3fff],y
   221 22D1 88						dey
   222 22D2 10 F8					bpl @-	
   223
   224 22D4 A9 59 85 90 A9 2A + 			mwa #bcb7 pom2
   225 22DC A0 14					ldy	#bcb7_len-1
   226 22DE B1 90		@			lda (pom2),y
   227 22E0 99 00 4C					sta $4000+[bcb7_vbxe&$3fff],y
   228 22E3 88						dey
   229 22E4 10 F8					bpl @-				
   230 							
   231 22E6 A9 6E 85 90 A9 2A + 			mwa #bcb8 pom2
   232 22EE A0 14					ldy	#bcb8_len-1
   233 22F0 B1 90		@			lda (pom2),y
   234 22F2 99 80 4C					sta $4000+[bcb8_vbxe&$3fff],y
   235 22F5 88						dey
   236 22F6 10 F8					bpl @-	
   237
   238 22F8 A9 83 85 90 A9 2A + 			mwa #bcb9 pom2
   239 2300 A0 14					ldy	#bcb9_len-1
   240 2302 B1 90		@			lda (pom2),y
   241 2304 99 00 4D					sta $4000+[bcb9_vbxe&$3fff],y
   242 2307 88						dey
   243 2308 10 F8					bpl @-	
   244
   245 230A A9 98 85 90 A9 2A + 			mwa #bcb10 pom2
   246 2312 A0 14					ldy	#bcb10_len-1
   247 2314 B1 90		@			lda (pom2),y
   248 2316 99 80 4D					sta $4000+[bcb10_vbxe&$3fff],y
   249 2319 88						dey
   250 231A 10 F8					bpl @-				
   251 							
   252 231C A9 AD 85 90 A9 2A + 			mwa #bcb11 pom2
   253 2324 A0 14					ldy	#bcb11_len-1
   254 2326 B1 90		@			lda (pom2),y
   255 2328 99 00 4E					sta $4000+[bcb11_vbxe&$3fff],y
   256 232B 88						dey
   257 232C 10 F8					bpl @-	
   258
   259 232E A9 C2 85 90 A9 2A + 			mwa #bcb12 pom2
   260 2336 A0 14					ldy	#bcb12_len-1
   261 2338 B1 90		@			lda (pom2),y
   262 233A 99 80 4E					sta $4000+[bcb12_vbxe&$3fff],y
   263 233D 88						dey
   264 233E 10 F8					bpl @-			
   265 							
   266 2340			end_init			
   267 2340 A0 5D					ldy #$5d
   268 2342 A9 00 91 B9					mva #0 (fx_ptr),y			;wylacz pamiec vbxe
   269
   270 2346 60						rts
   271 							
   272 2347			_init1
   273 2347 A0 5D					ldy #$5d
   274 2349 A9 80 91 B9					mva #$80+[shape_vbxe>>14] (fx_ptr),y
   275
   276 234D A9 40 85 96 A9 01 + 			mwa #320 pom0
   277 2355 A9 C1 85 8C A9 92 + 			mwa #globus0+[15*320]+1 pom	
   278 235D 20 68 28					jsr copy_shape		;globus0		;41
   279 2360 A9 D5 85 8C A9 92 + 			mwa #globus0+[15*320]+21 pom	
   280 2368 20 68 28					jsr copy_shape		;globus1		;42
   281 236B A9 E9 85 8C A9 92 + 			mwa #globus0+[15*320]+41 pom	
   282 2373 20 68 28					jsr copy_shape		;globus2		;43
   283 2376 A9 FD 85 8C A9 92 + 			mwa #globus0+[15*320]+61 pom	
   284 237E 20 68 28					jsr copy_shape		;globus3		;44
   285 2381 A9 11 85 8C A9 93 + 			mwa #globus0+[15*320]+81 pom	
   286 2389 20 68 28					jsr copy_shape		;globus4		;45
   287 238C A9 25 85 8C A9 93 + 			mwa #globus0+[15*320]+101 pom	
   288 2394 20 68 28					jsr copy_shape		;globus5		;46
   289 2397 A9 39 85 8C A9 93 + 			mwa #globus0+[15*320]+121 pom	
   290 239F 20 68 28					jsr copy_shape		;globus6		;47
   291 23A2 A9 4D 85 8C A9 93 + 			mwa #globus0+[15*320]+141 pom	
   292 23AA 20 68 28					jsr copy_shape		;globus7		;48
   293 23AD A9 61 85 8C A9 93 + 			mwa #globus0+[15*320]+161 pom	
   294 23B5 20 68 28					jsr copy_shape		;globus8		;49
   295 23B8 A9 75 85 8C A9 93 + 			mwa #globus0+[15*320]+181 pom	
   296 23C0 20 68 28					jsr copy_shape		;kula0			;50
   297 23C3 A9 89 85 8C A9 93 + 			mwa #globus0+[15*320]+201 pom	
   298 23CB 20 68 28					jsr copy_shape		;kula1			;51
   299 23CE A9 9D 85 8C A9 93 + 			mwa #globus0+[15*320]+221 pom	
   300 23D6 20 68 28					jsr copy_shape		;kula2			;52
   301 23D9 A9 B1 85 8C A9 93 + 			mwa #globus0+[15*320]+241 pom	
   302 23E1 20 68 28					jsr copy_shape		;kula3			;53
   303 23E4 A9 C5 85 8C A9 93 + 			mwa #globus0+[15*320]+261 pom	
   304 23EC 20 68 28					jsr copy_shape		;kula4			;54
   305 23EF A9 D9 85 8C A9 93 + 			mwa #globus0+[15*320]+281 pom	
   306 23F7 20 68 28					jsr copy_shape		;kula5			;55
   307 23FA A9 ED 85 8C A9 93 + 			mwa #globus0+[15*320]+301 pom	
   308 2402 20 68 28					jsr copy_shape		;kula6			;56
   309 							
   310 2405 A9 40 85 96 A9 00 + 			mwa #64 pom0
   311 240D A9 C0 85 8C A9 97 + 			mwa #buzka0+[15*64] pom	
   312 2415 20 68 28					jsr copy_shape		;buzka0			;57
   313 2418 A9 D0 85 8C A9 97 + 			mwa #buzka0+[15*64]+16 pom	
   314 2420 20 68 28					jsr copy_shape		;buzka1			;58
   315 2423 A9 E0 85 8C A9 97 + 			mwa #buzka0+[15*64]+32 pom	
   316 242B 20 68 28					jsr copy_shape		;buzka2			;59
   317 242E A9 F0 85 8C A9 97 + 			mwa #buzka0+[15*64]+48 pom	
   318 2436 20 68 28					jsr copy_shape		;buzka3			;60
   319 							
   320 2439 A9 8C 85 96 A9 00 + 			mwa #140 pom0
   321 2441 A9 34 85 8C A9 A0 + 			mwa #literki0+[15*140] pom	
   322 2449 20 68 28					jsr copy_shape		;literaB0			;61
   323 244C A9 48 85 8C A9 A0 + 			mwa #literki0+[15*140]+19+1 pom	
   324 2454 20 68 28					jsr copy_shape		;literaB1			;62
   325 2457 A9 58 85 8C A9 A0 + 			mwa #literki0+[15*140]+36 pom	
   326 245F 20 68 28					jsr copy_shape		;literaB2			;63
   327 							
   328 							
   329 2462 A0 5D					ldy #$5d
   330 2464 A9 81 91 B9					mva #$80+[shape_vbxe>>14]+1 (fx_ptr),y
   331 2468 A9 00 85 8E A9 40 + 			mwa #$4000 pom1
   332 2470 A9 68 85 8C A9 A0 + 			mwa #literki0+[15*140]+51+1 pom	
   333 2478 20 68 28					jsr copy_shape		;literaB3			;64
   334 247B A9 7C 85 8C A9 A0 + 			mwa #literki0+[15*140]+72 pom	
   335 2483 20 68 28					jsr copy_shape		;literaE0			;65
   336 2486 A9 90 85 8C A9 A0 + 			mwa #literki0+[15*140]+91+1 pom	
   337 248E 20 68 28					jsr copy_shape		;literaE1			;66
   338 2491 A9 A0 85 8C A9 A0 + 			mwa #literki0+[15*140]+108 pom	
   339 2499 20 68 28					jsr copy_shape		;literaE2			;67
   340 249C A9 B0 85 8C A9 A0 + 			mwa #literki0+[15*140]+123+1 pom	
   341 24A4 20 68 28					jsr copy_shape		;literaE3			;68
   342 							
   343 24A7 A9 40 85 96 A9 00 + 			mwa #64 pom0
   344 24AF A9 80 85 8C A9 A4 + 			mwa #paraliz0+[15*64] pom	
   345 24B7 20 68 28					jsr copy_shape		;Paraliz0			;69
   346 24BA A9 40 85 96 A9 00 + 			mwa #64 pom0
   347 24C2 A9 90 85 8C A9 A4 + 			mwa #paraliz0+[15*64]+16 pom	
   348 24CA 20 68 28					jsr copy_shape		;Paraliz1			;70
   349 24CD A9 40 85 96 A9 00 + 			mwa #64 pom0
   350 24D5 A9 A0 85 8C A9 A4 + 			mwa #paraliz0+[15*64]+32 pom	
   351 24DD 20 68 28					jsr copy_shape		;Paraliz2			;71
   352 24E0 A9 40 85 96 A9 00 + 			mwa #64 pom0
   353 24E8 A9 B0 85 8C A9 A4 + 			mwa #paraliz0+[15*64]+48 pom	
   354 24F0 20 68 28					jsr copy_shape		;Paraliz3			;72
   355 							
   356 24F3 A9 80 85 8C A9 A8 + 			mwa #przemiana0+[15*64] pom	
   357 24FB 20 68 28					jsr copy_shape		;Przemiana0		;73
   358 24FE A9 40 85 96 A9 00 + 			mwa #64 pom0
   359 2506 A9 90 85 8C A9 A8 + 			mwa #przemiana0+[15*64]+16 pom	
   360 250E 20 68 28					jsr copy_shape		;Przemiana1		;74
   361 2511 A9 40 85 96 A9 00 + 			mwa #64 pom0
   362 2519 A9 A0 85 8C A9 A8 + 			mwa #przemiana0+[15*64]+32 pom	
   363 2521 20 68 28					jsr copy_shape		;Przemiana2		;75
   364 2524 A9 40 85 96 A9 00 + 			mwa #64 pom0
   365 252C A9 B0 85 8C A9 A8 + 			mwa #przemiana0+[15*64]+48 pom	
   366 2534 20 68 28					jsr copy_shape		;Przemiana3		;76
   367 							
   368 2537 A9 80 85 8C A9 AC + 			mwa #explo0+[15*64] pom	
   369 253F 20 68 28					jsr copy_shape		;explo0			;77
   370 2542 A9 40 85 96 A9 00 + 			mwa #64 pom0
   371 254A A9 90 85 8C A9 AC + 			mwa #explo0+[15*64]+16 pom	
   372 2552 20 68 28					jsr copy_shape		;explo1			;78
   373 2555 A9 40 85 96 A9 00 + 			mwa #64 pom0
   374 255D A9 A0 85 8C A9 AC + 			mwa #explo0+[15*64]+32 pom	
   375 2565 20 68 28					jsr copy_shape		;explo2			;79
   376 2568 A9 40 85 96 A9 00 + 			mwa #64 pom0
   377 2570 A9 B0 85 8C A9 AC + 			mwa #explo0+[15*64]+48 pom	
   378 2578 20 68 28					jsr copy_shape		;explo3			;80
   379 							
   380 257B A9 78 85 96 A9 00 + 			mwa #120 pom0
   381 2583 A9 C8 85 8C A9 B3 + 			mwa #ufo0+[15*120] pom	
   382 258B 20 68 28					jsr copy_shape		;ufo0			;81
   383 258E A9 DC 85 8C A9 B3 + 			mwa #ufo0+[15*120]+20 pom	
   384 2596 20 68 28					jsr copy_shape		;ufo0			;82
   385 2599 A9 F0 85 8C A9 B3 + 			mwa #ufo0+[15*120]+40 pom	
   386 25A1 20 68 28					jsr copy_shape		;ufo0			;83
   387 25A4 A9 04 85 8C A9 B4 + 			mwa #ufo0+[15*120]+60 pom	
   388 25AC 20 68 28					jsr copy_shape		;ufo0			;84
   389 25AF A9 18 85 8C A9 B4 + 			mwa #ufo0+[15*120]+80 pom	
   390 25B7 20 68 28					jsr copy_shape		;ufo0			;85
   391 25BA A9 2C 85 8C A9 B4 + 			mwa #ufo0+[15*120]+100 pom
   392 25C2 20 68 28					jsr copy_shape		;ufo0			;86
   393 							
   394 25C5 A9 64 85 96					mva #100 pom0
   395 25C9 A9 44 85 8C A9 BA + 			mwa #bomby0+[15*100]+40 pom
   396 25D1 20 68 28					jsr copy_shape						;87
   397 25D4 A9 64 85 96					mva #100 pom0
   398 25D8 A9 58 85 8C A9 BA + 			mwa #bomby0+[15*100]+60 pom
   399 25E0 20 68 28					jsr copy_shape						;88
   400 25E3 60						rts
   401 							
   402 						
   403 25E4			_init2			
   404 25E4 A9 B4 85 96 A9 00 + 			mwa #180 pom0
   405 25EC A9 8C 85 8C A9 8A + 			mwa #punkty0+[15*180] pom	
   406 25F4 20 68 28					jsr copy_shape		;100		;89
   407 25F7 A9 9C 85 8C A9 8A + 			mwa #punkty0+[15*180]+16 pom	
   408 25FF 20 68 28					jsr copy_shape		;200		;90
   409 2602 A9 AC 85 8C A9 8A + 			mwa #punkty0+[15*180]+32 pom	
   410 260A 20 68 28					jsr copy_shape		;300		;91
   411 260D A9 BC 85 8C A9 8A + 			mwa #punkty0+[15*180]+48 pom	
   412 2615 20 68 28					jsr copy_shape		;500		;92
   413 2618 A9 CC 85 8C A9 8A + 			mwa #punkty0+[15*180]+64 pom	
   414 2620 20 68 28					jsr copy_shape		;800		;93
   415 2623 A9 DE 85 8C A9 8A + 			mwa #punkty0+[15*180]+82 pom	
   416 262B 20 68 28					jsr copy_shape		;1000		;94
   417 262E A9 F2 85 8C A9 8A + 			mwa #punkty0+[15*180]+102 pom	
   418 2636 20 68 28					jsr copy_shape		;1200		;95
   419 2639 A9 06 85 8C A9 8B + 			mwa #punkty0+[15*180]+122 pom	
   420 2641 20 68 28					jsr copy_shape		;2000		;96
   421 2644 A9 1A 85 8C A9 8B + 			mwa #punkty0+[15*180]+142 pom	
   422 264C 20 68 28					jsr copy_shape		;3000		;97
   423 264F A9 2E 85 8C A9 8B + 			mwa #punkty0+[15*180]+162 pom	
   424 2657 20 68 28					jsr copy_shape		;5000		;98
   425 							
   426 265A A9 34 85 96 A9 00 + 			mwa #52 pom0
   427 2662 A9 4C 85 8C A9 8E + 			mwa #xpunkty0+[15*52] pom	
   428 266A 20 68 28					jsr copy_shape		;x2		;99
   429 266D A9 58 85 8C A9 8E + 			mwa #xpunkty0+[15*52]+12 pom	
   430 2675 20 68 28					jsr copy_shape		;x3		;100
   431 2678 A9 64 85 8C A9 8E + 			mwa #xpunkty0+[15*52]+24 pom	
   432 2680 20 68 28					jsr copy_shape		;x4		;101
   433 2683 A9 70 85 8C A9 8E + 			mwa #xpunkty0+[15*52]+36 pom	
   434 268B 20 68 28					jsr copy_shape		;x5		;102
   435 							
   436 268E A9 38 85 96 A9 00 + 			mwa #56 pom0
   437 2696 A9 DC 85 8C A9 91 + 			mwa #jack_tanczy0+[15*56]+20 pom	
   438 269E 20 68 28					jsr copy_shape				;103
   439 26A1 A9 DC 85 8C A9 91 + 			mwa #jack_tanczy0+[15*56]+20 pom	
   440 26A9 20 39 28					jsr copy_shape1			;104
   441 26AC A9 C8 85 8C A9 91 + 			mwa #jack_tanczy0+[15*56] pom	
   442 26B4 20 68 28					jsr copy_shape				;105
   443 26B7 A9 F0 85 8C A9 91 + 			mwa #jack_tanczy0+[15*56]+40 pom	
   444 26BF 20 68 28					jsr copy_shape				;106
   445 						
   446 26C2 A9 40 85 96 A9 00 + 			mwa #64 pom0
   447 26CA A9 3F 8D 6B 28				mva #64-1 copy_shape+3
   448 26CF A9 C0 85 8C A9 95 + 			mwa #start0+[15*64] pom	;107
   449 26D7 20 68 28					jsr copy_shape
   450 26DA A9 C0 85 8C A9 99 + 			mwa #start0+[15*64]+1024 pom	;111
   451 26E2 20 68 28					jsr copy_shape
   452 							
   453 26E5 A9 08 85 96 A9 00 + 			mwa #8 pom0
   454 26ED A9 08 8D 69 28				mva #8 copy_shape+1
   455 26F2 A9 07 8D 6B 28				mva #8-1 copy_shape+3			;8x8
   456 26F7 A9 38 85 8C A9 9A + 			mwa #rampa0+[7*8] pom	
   457 26FF 20 68 28					jsr copy_shape		;rampa_poziom	;115
   458 2702 A9 78 85 8C A9 9A + 			mwa #rampa0+[7*8]+64 pom
   459 270A 20 68 28					jsr copy_shape		;rampa_pion		;115.25
   460 270D A9 B8 85 8C A9 9A + 			mwa #rampa0+[7*8]+128 pom	
   461 2715 20 68 28					jsr copy_shape		;rampa_lewo_gora	;115.50
   462 2718 A9 F8 85 8C A9 9A + 			mwa #rampa0+[7*8]+192 pom	
   463 2720 20 68 28					jsr copy_shape		;rampa_prawo_gora	;115.75
   464 2723 A9 38 85 8C A9 9B + 			mwa #rampa0+[7*8]+256 pom	
   465 272B 20 68 28					jsr copy_shape		;rampa_lewo_dol		;116.00
   466 272E A9 78 85 8C A9 9B + 			mwa #rampa0+[7*8]+320 pom	
   467 2736 20 68 28					jsr copy_shape		;rampa_prawo_dol	;116.25
   468 							
   469 2739 E6 8F					inc pom1+1
   470 273B A9 00 85 8E					mva #0 pom1		;wyrownaj do strony
   471 							
   472 273F A9 20 85 96 A9 00 + 			mwa #32 pom0		;szerokosc obrazka
   473 2747 A9 18 8D 69 28				mva #24 copy_shape+1		;liczba wierszy
   474 274C A9 1F 8D 6B 28				mva #32-1 copy_shape+3		;liczba kolumn
   475 2751 A9 60 85 8C A9 9E + 			mwa #over0+[23*32] pom
   476 2759 20 68 28					jsr copy_shape			;117 game over (zajmuje 3 strony)
   477 							
   478 275C A9 4C 85 96 A9 00 + 			mwa #76 pom0
   479 2764 A9 10 8D 69 28				mva #16	copy_shape+1
   480 2769 A9 0F 8D 6B 28				mva #16-1 copy_shape+3
   481 276E A9 F4 85 8C A9 A2 + 			mwa #czapka0+[15*76] pom
   482 2776 20 68 28					jsr copy_shape			;120	czapka0 w lewo
   483 2779 A9 08 85 8C A9 A3 + 			mwa #czapka0+[15*76]+20 pom
   484 2781 20 68 28					jsr copy_shape			;121	czapka1 w lewo
   485 2784 A9 1C 85 8C A9 A3 + 			mwa #czapka0+[15*76]+40 pom
   486 278C 20 68 28					jsr copy_shape			;122	czapka2 w lewo
   487 278F A9 30 85 8C A9 A3 + 			mwa #czapka0+[15*76]+60 pom
   488 2797 20 68 28					jsr copy_shape			;123	czapka3 w lewo
   489 279A A9 F4 85 8C A9 A2 + 			mwa #czapka0+[15*76] pom
   490 27A2 20 39 28					jsr copy_shape1			;124	czapka0 w prawo
   491 27A5 A9 08 85 8C A9 A3 + 			mwa #czapka0+[15*76]+20 pom
   492 27AD 20 39 28					jsr copy_shape1			;125	czapka1 w prawo
   493 27B0 A9 1C 85 8C A9 A3 + 			mwa #czapka0+[15*76]+40 pom
   494 27B8 20 39 28					jsr copy_shape1			;126	czapka2 w prawo
   495 27BB A9 30 85 8C A9 A3 + 			mwa #czapka0+[15*76]+60 pom
   496 27C3 20 39 28					jsr copy_shape1			;127	czapka3 w prawo
   497 						
   498 27C6 60						rts
   499 							
   500 27C7			_init2b		
   501 27C7 A0 5D					ldy #$5d
   502 27C9 A9 82 91 B9					mva #$80+[shape_vbxe>>14]+2 (fx_ptr),y
   503 27CD A9 00 85 8E A9 40 + 			mwa #$4000 pom1			;wyrownuje do 16K czyli pomijamy 8 stron
   504 27D5 A9 C0 85 96 A9 00 + 			mwa #192 pom0
   505 27DD A9 28 8D 91 28				mva #40 copy_shape2+1
   506 27E2 A9 BF 8D 93 28				mva #192-1 copy_shape2+3
   507 27E7 A9 40 85 8C A9 9D + 			mwa #title0b+[192*39] pom	;192x40
   508 27EF 20 90 28					jsr copy_shape2				;128 
   509 27F2 60						rts
   510 							
   511 27F3			_init2c		
   512 27F3 A0 5D					ldy #$5d
   513 27F5 A9 83 91 B9					mva #$80+[shape_vbxe>>14]+3 (fx_ptr),y
   514 27F9 A9 00 85 8E A9 40 + 			mwa #$4000 pom1			;wyrownuje do 16K 
   515 2801 A9 40 85 8C A9 9D + 			mwa #title0c+[192*39] pom	;192x40
   516 2809 20 90 28					jsr copy_shape2				;192
   517 							
   518 280C A0 5D					ldy #$5d
   519 280E A9 99 91 B9					mva #$99 (fx_ptr),y			;bank dla muzyki
   520 2812 60						rts
   521 							
   522 2813			_init3
   523 2813 A0 5D					ldy #$5d
   524 2815 A9 94 91 B9					mva #$80+$14 (fx_ptr),y
   525 2819 60						rts
   526 							
   527 281A			_init4
   528 281A A0 5D					ldy #$5d
   529 281C A9 95 91 B9					mva #$80+$15 (fx_ptr),y
   530 2820 60						rts			
   531
   532 2821			_init5
   533 2821 A0 5D					ldy #$5d
   534 2823 A9 96 91 B9					mva #$80+$16 (fx_ptr),y
   535 2827 60						rts	
   536 							
   537 2828			_init6
   538 2828 A0 5D					ldy #$5d
   539 282A A9 97 91 B9					mva #$80+$17 (fx_ptr),y
   540 282E 60						rts	
   541
   542 282F			_init7
   543 282F A0 5D					ldy #$5d
   544 2831 A9 98 91 B9					mva #$80+$18 (fx_ptr),y
   545 2835 60						rts				
   546
   547 2836			_init8
   548 2836 4C 40 23					jmp end_init	
   549 							
   550 				//obraca w poziomie
   551 2839			copy_shape1			
   552 2839 A2 10					ldx #16			;16 linii
   553 283B A0 0F		@			ldy #15			;16-1 kolumn
   554 283D 84 98		@			sty pom0b
   555 283F 98						tya
   556 2840 49 0F					eor #15
   557 2842 A8						tay
   558 2843 B1 8C					lda (pom),y
   559 2845 A4 98					ldy pom0b
   560 2847 91 8E					sta (pom1),y
   561 2849 88						dey
   562 284A 10 F1					bpl @-
   563 284C 18						clc
   564 284D A5 8E					lda pom1
   565 284F 69 10					adc #16
   566 2851 85 8E					sta pom1
   567 2853 90 02					bcc *+4
   568 2855 E6 8F					inc pom1+1
   569 2857 38						sec
   570 2858 A5 8C					lda pom
   571 285A E5 96					sbc pom0
   572 285C 85 8C					sta pom
   573 285E A5 8D					lda pom+1
   574 2860 E5 97					sbc pom0a
   575 2862 85 8D					sta pom+1
   576 2864 CA						dex
   577 2865 D0 D4					bne @-1
   578 2867 60						rts
   579
   580 2868			copy_shape
   581 2868 A2 10					ldx #16			;16 linii
   582 286A A0 0F		@			ldy #15			;16-1 kolumn
   583 286C B1 8C		@			lda (pom),y
   584 286E 91 8E					sta (pom1),y
   585 2870 88						dey
   586 2871 10 F9					bpl @-
   587 2873 38						sec			;+1
   588 2874 A5 8E					lda pom1
   589 2876 6D 6B 28					adc copy_shape+3
   590 2879 85 8E					sta pom1
   591 287B 90 02					bcc *+4
   592 287D E6 8F					inc pom1+1
   593 287F 38						sec
   594 2880 A5 8C					lda pom
   595 2882 E5 96					sbc pom0
   596 2884 85 8C					sta pom
   597 2886 A5 8D					lda pom+1
   598 2888 E5 97					sbc pom0a
   599 288A 85 8D					sta pom+1
   600 288C CA						dex
   601 288D D0 DB					bne @-1
   602 288F 60						rts
   603 							
   604 2890			copy_shape2	
   605 2890 A2 10					ldx #16			;16 linii
   606 2892 A0 0F		@			ldy #15			;16-1 kolumn
   607 2894 B1 8C		@			lda (pom),y
   608 2896 91 8E					sta (pom1),y
   609 2898 88						dey
   610 2899 C0 FF					cpy #255
   611 289B D0 F7					bne @-
   612 289D 38						sec			;+1
   613 289E A5 8E					lda pom1
   614 28A0 6D 93 28					adc copy_shape2+3
   615 28A3 85 8E					sta pom1
   616 28A5 90 02					bcc *+4
   617 28A7 E6 8F					inc pom1+1
   618 28A9 38						sec
   619 28AA A5 8C					lda pom
   620 28AC E5 96					sbc pom0
   621 28AE 85 8C					sta pom
   622 28B0 A5 8D					lda pom+1
   623 28B2 E5 97					sbc pom0a
   624 28B4 85 8D					sta pom+1
   625 28B6 CA						dex
   626 28B7 D0 D9					bne @-1
   627 28B9 60						rts
   628
   629
   630 28BA			set_colors	
   631 28BA A0 44					ldy	#$44
   632 28BC A9 01 91 B9 C8				mva	#1	(fx_ptr),y+	; CSEL ,nr koloru
   633 28C1 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety
   634 							
   635 28C5 A2 00					ldx #0
   636 28C7 A0 46		@			ldy	#$46	; CR
   637 28C9 BD E2 28					lda tab_color,x
   638 28CC 91 B9					sta	(fx_ptr),y		;RED
   639 28CE C8						iny
   640 28CF E8						inx
   641 28D0 BD E2 28					lda tab_color,x
   642 28D3 91 B9					sta	(fx_ptr),y		;GREEN
   643 28D5 C8						iny
   644 28D6 E8						inx
   645 28D7 BD E2 28					lda tab_color,x
   646 28DA 91 B9					sta	(fx_ptr),y		;BLUE, nr_koloru++
   647 28DC E8						inx
   648 28DD E0 90					cpx #$30*3
   649 28DF 90 E6					bcc @-
   650 28E1 60						rts
   651
   652 28E2			tab_color
   653 28E2 00 00 00					.he 00,00,00		;1
   654 28E5 FF FF FF					.he ff,ff,ff		;2
   655 28E8 FF 00 00					.he ff,00,00		;3
   656 28EB 00 A0 C0					.he 00,a0,c0		;4
   657 28EE FF FF 00					.he ff,ff,00		;5
   658 28F1 E0 C0 80					.he e0,c0,80		;6
   659 28F4 2A 2A 2A					.he 2a,2a,2a		;7
   660 28F7 88 88 88					.he 88,88,88		;8
   661 28FA BB BB BB					.he bb,bb,bb		;9
   662 28FD DD DD DD					.he dd,dd,dd		;0a
   663 2900 A0 A0 00					.he a0,a0,00		;0b
   664 2903 C0 C0 00					.he c0,c0,00		;0c
   665 2906 E0 E0 00					.he e0,e0,00		;0d
   666 2909 FF FF 00					.he ff,ff,00		;0e
   667 290C AA AA AA					.he aa,aa,aa		;0f
   668 290F 44 44 44					.he 44,44,44		;10
   669 2912 66 66 66					.he 66,66,66		;11
   670 2915 88 88 88					.he 88,88,88		;12
   671 2918 00 00 FF					.he 00,00,ff		;13		kolor litery
   672 291B CC CC CC					.he cc,cc,cc		;14
   673 291E FF 00 33					.he ff,00,33		;15		kolor_paraliz0
   674 2921 CC 00 FF					.he cc,00,ff		;16		kolor_paraliz1
   675 2924 80 00 00					.he 80,00,00		;17
   676 2927 E0 20 40					.he e0,20,40		;18
   677 292A FF FF 00					.he ff,ff,00		;19
   678 292D C0 80 40					.he c0,80,40		;1a
   679 2930 80 00 00					.he 80,00,00		;1b		czerwony0	; bomba
   680 2933 C0 20 00					.he c0,20,00		;1c		czerwony1
   681 2936 A0 20 00					.he a0,20,00		;1d		zapalona0
   682 2939 FF FF 00					.he ff,ff,00		;1e		zapalona1	
   683 							
   684 293C 00 00 00					.he 00,00,00		;game_over $1f
   685 							
   686 							
   687 293F FF 33 00					.he ff,33,00		;20 rampa
   688 2942 FF 55 00					.he ff,55,00
   689 2945 FF 77 00					.he ff,77,00
   690 2948 FF 99 00					.he ff,99,00
   691 							
   692 294B FF BB 00					.he ff,bb,00
   693 294E FF CC 00					.he ff,cc,00
   694 2951 FF DD 00					.he ff,dd,00
   695 2954 FF FF 00					.he ff,ff,00		;27
   696 							
   697 2957 FF 00 00					.he ff,00,00		;start0	;28
   698 295A 00 FF 00					.he 00,ff,00		;start1	;29
   699 							
   700 295D FF 00 88					.he ff,00,88		;title 2a
   701 2960 00 88 FF					.he 00,88,ff		;sredni niebieski 2b
   702 2963 FF AA 00					.he ff,aa,00		;2c
   703 2966 00 BB FF					.he 00,bb,ff		;najjaÅ›niejszy biebieski 2d
   704 2969 00 55 FF					.he 00,55,ff		;najciemniejszy niebieski 2e
   705 296C FF FF FF					.he ff,ff,ff		;2f
   706 296F FF 00 00					.he ff,00,00		;30			ostatni kolor title
   707
   708 				; Detect VBXE
   709 2972			fx_detect
   710 2972 A9 00 85 B9 A9 D6 + 	mwa	#$d600	fx_ptr
   711 297A 20 81 29			jsr	fx_detect_1
   712 297D F0 11			beq	fx_detect_exit
   713 297F E6 BA			inc	fx_ptr+1
   714 2981			fx_detect_1
   715 2981 A0 40			ldy	#$40	; CORE_VERSION
   716 2983 B1 B9			lda	(fx_ptr),y
   717 2985 C9 10			cmp	#$10	; FX 1.xx
   718 2987 D0 07			bne	fx_detect_exit
   719 2989 C8				iny	; MINOR_VERSION
   720 298A B1 B9			lda	(fx_ptr),y
   721 298C 29 70			and	#$70
   722 298E C9 20			cmp	#$20	; 1.2x
   723 2990			fx_detect_exit
   724 2990 60				rts
   725
   726 					
   727
   728 2991			blit
   729 2991 A0 14			ldy	#bcb_len-1
   730 2993 B1 90		@	lda (pom2),y
   731 2995 99 80 48			sta $4000+[bcb_vbxe&$3fff],y
   732 2998 88				dey
   733 2999 10 F8			bpl @-
   734 					
   735 299B A0 50			ldy	#$50	; BL_ADR0
   736 299D A9 80 91 B9 C8		mva	#bcb_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   737 29A2 A9 08 91 B9 C8		mva	#[bcb_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   738 29A7 A9 07 91 B9 C8		mva	#bcb_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   739 29AC A9 01 91 B9			mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   740 29B0 60				rts
   741
   742
   743 29B1			cls_bcb
   744 29B1 00 00 00			dta	0,0,0				;adres=000000 nie zmienia siÄ™
   745 29B4 00 00 00			dta	a(0),0
   746 29B7 00 00 01			dta	a(scr_vbxe&$ffff),1		;adres docelowy=poczatek pamieci obrazu
   747 29BA 00 08 01			dta	a(256*8),1			;odleglosc w pamieci miedzy liniami=2048,skok=1
   748 29BD FF 00 FD			dta	a(256-1),254-1		;szerokosc obiektu=256,wysokosc=254
   749 29C0 00 00 00			dta	0,0,0				;wypeÅ‚niaj zerami
   750 29C3 07 00 00			dta	7,0,0				;X=X*8
   751 					
   752
   753 29C6			bcb
   754 29C6 00 00 00			dta	a(shape_vbxe),0			;adres danych Å¼rÃ³dÅ‚owych w pamiÄ™ci vbxe 24bity
   755 29C9 10 00 01			dta	a(shape_WIDTH),1		;odstÄ™p w pamiÄ™ci pomiÄ™dzy kolejnymi liniami <-4096..4095>, kolejnoÅ›Ä‡ pobierania danych (1,-1)
   756 29CC			bcb_dest
   757 29CC 00 00			dta	a(scr_vbxe&$ffff)						;adres docelowy dla operacji blittera 24bity
   758 29CE			bcb_frame
   759 29CE 01				dta	1
   760 29CF 00 01 01			dta	a(256),1				;odlegloÅ›Ä‡ w pamiÄ™ci pomiÄ™dzy kolejnymi liniami <-4096..4095>,skok pomiÄ™dzy danymi (-1,1)
   761 29D2 0F 00 0F			dta	a(shape_WIDTH-1),shape_HEIGHT-1	;szerokosÄ‡ obiektu-1(0,511),wysokosÄ‡ obiektu-1(0,255)
   762 29D5 FF 00 00			dta	$ff,0,0				;maska AND ÅºrÃ³dÅ‚a,maska XOR ÅºrÃ³dÅ‚a,maska AND wykrywania kolizji	
   763 29D8 00 00 01			dta	0,0,1				;zoom X i Y,sterowanie wypeÅ‚nianiem wzorkiem, dodatkowe informacje 1=kopiuje jesli zrodlo>0
   764 = 0015			bcb_len	equ	*-bcb	
   765
   766 29DB			bcb1
   767 29DB 00 00 01			dta a(scr_vbxe&$ffff),1
   768 29DE 00 01 01			dta a(256),1
   769 29E1			bcb1_dest	
   770 29E1 00 00 02			dta a(0),2			
   771 29E4 10 00 01			dta a(shape_WIDTH),1
   772 29E7 0F 00 0F			dta a(shape_WIDTH-1),shape_HEIGHT-1
   773 29EA FF 00 00			dta $ff,0,0
   774 29ED 00 00 00			dta 0,0,0
   775 = 0015			bcb1_len equ *-bcb1
   776
   777 29F0			bcb2
   778 29F0 00 00 03			dta a(bufor_vbxe&$ffff),3
   779 29F3 00 02 01			dta a(512),1	
   780 29F6 00 00 01			dta a(0),1			
   781 29F9 00 02 01			dta a(512),1
   782 29FC FF 01 67			dta a(511),103
   783 29FF FF 00 00			dta $ff,0,0
   784 2A02 00 00 00			dta 0,0,0
   785 = 0015			bcb2_len equ *-bcb2
   786
   787 2A05			bcb3
   788 2A05 00 00 03			dta a(0),3
   789 2A08 00 01 01			dta a(256),1
   790 2A0B			bcb3_dest	
   791 2A0B 00 00 01			dta a(0),1			
   792 2A0E 00 01 01			dta a(256),1
   793 2A11 0F 00 0F			dta a(15),15
   794 2A14 FF 00 00			dta $ff,0,0
   795 2A17 00 00 00			dta 0,0,0
   796 = 0015			bcb3_len equ *-bcb3
   797
   798 				//rysuje obiekty 8x8
   799 2A1A			bcb4
   800 2A1A 00 73 00			dta b(0),b(115),0
   801 2A1D 08 00 01			dta a(8),1	
   802 2A20 00 00 03			dta a(0),3			
   803 2A23 00 01 01			dta a(256),1
   804 2A26 07 00 07			dta a(7),7
   805 2A29 FF 00 00			dta $ff,0,0
   806 2A2C 00 00 00			dta 0,0,0
   807 = 0015			bcb4_len equ *-bcb4
   808 				//cls screen
   809 2A2F			bcb5
   810 2A2F 00 13 00			dta b(0),b(19),0
   811 2A32 00 00 00			dta a(0),0
   812 2A35 00 00 01			dta a(0),1
   813 2A38 00 01 01			dta a(256),1
   814 2A3B FF 00 CF			dta a(256-1),b(208-1)
   815 2A3E FF 00 00			dta $ff,0,0
   816 2A41 00 00 00			dta 0,0,0
   817 = 0015			bcb5_len equ *-bcb5
   818 				//rysuje start
   819 2A44			bcb6
   820 2A44 00 00 00			dta a(0),0
   821 2A47 40 00 01			dta a(64),1
   822 2A4A 00 60 01			dta b(0),b(96),1
   823 2A4D 00 01 01			dta a(256),1
   824 2A50 3F 00 0F			dta a(64-1),b(16-1)
   825 2A53 FF 00 00			dta $ff,0,0
   826 2A56 00 00 01			dta 0,0,1
   827 = 0015			bcb6_len equ *-bcb6
   828 				//zapamietuje pod startem
   829 2A59			bcb7
   830 2A59 00 60 01			dta b(0),b(96),1		;bufor
   831 2A5C 00 01 01			dta a(256),1
   832 2A5F 00 60 02			dta b(0),b(96),2
   833 2A62 00 01 01			dta a(256),1
   834 2A65 FF 00 0F			dta a(256-1),b(16-1)
   835 2A68 FF 00 00			dta $ff,0,0
   836 2A6B 00 00 00			dta 0,0,0
   837 = 0015			bcb7_len equ *-bcb7
   838
   839 				//zapamietuje pod game_over
   840 2A6E			bcb8
   841 2A6E 00 00 01			dta a(0),1		;zrodlo =ekran
   842 2A71 00 01 01			dta a(256),1
   843 2A74 00 60 02			dta b(0),b(96),2
   844 2A77 20 00 01			dta a(32),1
   845 2A7A 1F 00 17			dta a(32-1),b(24-1)
   846 2A7D FF 00 00			dta $ff,0,0
   847 2A80 00 00 00			dta 0,0,0
   848 = 0015			bcb8_len equ *-bcb8
   849
   850 				//przywroc po game over
   851 2A83			bcb9
   852 2A83 00 60 02			dta b(0),b(96),2		;zrodlo bufor
   853 2A86 20 00 01			dta a(32),1
   854 2A89 00 00 01			dta a(0),1				;cel=ekran
   855 2A8C 00 01 01			dta a(256),1
   856 2A8F 1F 00 17			dta a(32-1),b(24-1)
   857 2A92 FF 00 00			dta $ff,0,0
   858 2A95 00 00 00			dta 0,0,0
   859 = 0015			bcb9_len equ *-bcb9
   860
   861 				//rysuj game over
   862 2A98			bcb10
   863 2A98 00 75 00			dta b(0),b(117),0		;zrodlo shape
   864 2A9B 20 00 01			dta a(32),1
   865 2A9E 00 00 01			dta a(0),1				;cel=ekran
   866 2AA1 00 01 01			dta a(256),1
   867 2AA4 1F 00 17			dta a(32-1),b(24-1)
   868 2AA7 FF 00 00			dta $ff,0,0
   869 2AAA 00 00 01			dta 0,0,1				;z maska
   870 = 0015			bcb10_len equ *-bcb10
   871
   872 				//rysuj title
   873 2AAD			bcb11
   874 2AAD 00 80 00			dta b(0),b(128),0		;zrodlo shape
   875 2AB0 C0 00 01			dta a(192),1
   876 2AB3 20 04 01			dta 32,4,1				;cel=ekran 
   877 2AB6 00 01 01			dta a(256),1
   878 2AB9 BF 00 27			dta a(192-1),b(40-1)
   879 2ABC FF 00 00			dta $ff,0,0
   880 2ABF 00 00 00			dta 0,0,0				;z kopiuj
   881 = 0015			bcb11_len equ *-bcb11
   882
   883 2AC2			bcb12
   884 2AC2 00 C0 00			dta b(0),b(192),0		;zrodlo shape
   885 2AC5 C0 00 01			dta a(192),1
   886 2AC8 20 2C 01			dta 32,44,1				;cel=ekran 
   887 2ACB 00 01 01			dta a(256),1
   888 2ACE BF 00 27			dta a(192-1),b(40-1)
   889 2AD1 FF 00 00			dta $ff,0,0
   890 2AD4 00 00 00			dta 0,0,0				;z kopiuj
   891 = 0015			bcb12_len equ *-bcb12
   892
   893 2AD7			xdl
   894 2AD7 24 00 07			dta	a($24),b(23-16)	; XDLC_OVOFF|XDLC_RTPL  ;24 puste linie
   895 2ADA 62 88 CF			dta	a($8862),b(191+16) ; XDLC_GMON|XDLC_RTPL|XDLC_OVADR|XDLC_END|XDLC_ATT  ; 192 linie w hires
   896 2ADD 00 00			dta	a(scr_vbxe&$ffff)		;adres pamieci obrazu dla tych linii	
   897 2ADF			xdl_frame
   898 2ADF 01 00 01			dta	b(1),a(256)		;3 bajt adresu obrazu=0,256=o ile bajtÃ³w skaczemy co linie
   899 2AE2 10 FF			dta a($ff10)			;paleta1+szerokosc 256 bajtÃ³w=$10, prio_default=$ff
   900 					
   901 = 000D			xdl_len	equ	*-xdl
   902
   903
   904
   905 2AE4						org $8000
   906 8000			jack_right			
   907 8000-B03F> 00 00 00 00 + 			ins './sprites1/right.spr'	;76x16
   908 84C0			jack_left
   909 84C0 00 01 01 01 01 00 + 			ins './sprites1/left.spr'	;76x16
   910 8980			jack_lata
   911 8980 00 00 00 00 01 01 + 			ins './sprites1/jack_lata.spr' ;160x16
   912 9380			jack_spada
   913 9380 00 00 04 00 00 04 + 			ins './sprites1/jack_spada.spr' ;36x16
   914 95C0			jack_upada
   915 95C0 00 04 04 04 04 04 + 			ins './sprites1/jack_upada.spr' ;44x16
   916 9880			jack_stoi
   917 9880 00 00 00 00 01 01 + 			ins './sprites1/jack_stoi.spr' ;16x16
   918 9980			empty
   919 9980 00 00 00 00 00 00 + 			:256 dta b(0)			
   920 9A80			mumia0
   921 9A80 00 00 00 01 01 01 + 			ins './sprites1/mumia.spr'		;348x16		
   922
   923 02E2-02E3> 01 20					ini	_init
   924 							
   925 B040						org $8000
   926 8000			globus0			
   927 8000-BA7F> 00 00 00 00 + 			ins './sprites1/globus.spr'		;320x16
   928 9400			buzka0	
   929 9400 00 00 00 00 00 00 + 			ins './sprites1/buzka.spr'		;64x16	
   930 9800			literki0
   931 9800 00 00 00 00 00 00 + 			ins './sprites1/literki.spr'		;140x16	
   932 A0C0			paraliz0
   933 A0C0 00 00 00 00 00 00 + 			ins './sprites1/paraliz.spr'		;64x16	
   934 A4C0			przemiana0
   935 A4C0 00 00 00 00 00 00 + 			ins './sprites1/przemiana.spr'	;64x16		
   936 A8C0			explo0
   937 A8C0 00 00 00 00 00 00 + 			ins './sprites1/explo.spr'		;64x16	
   938 ACC0			ufo0	
   939 ACC0 00 00 00 00 00 00 + 			ins './sprites1/ufo.spr'			;120x16	
   940 B440			bomby0
   941 B440 00 00 00 00 00 00 + 			ins './sprites1/bomby.spr'		;100x16	
   942 							
   943 							
   944 										
   945 02E2-02E3> 47 23					ini _init1
   946 							
   947 BA80						org $8000			
   948 8000			punkty0		
   949 8000-A33F> 00 00 00 00 + 			ins './sprites1/punkty.spr'		;180x16
   950 8B40			xpunkty0	
   951 8B40 00 00 00 00 00 00 + 			ins './sprites1/xpunkty.spr'		;52x16
   952 8E80			jack_tanczy0
   953 8E80 00 00 00 00 01 01 + 			ins './sprites1/jack_tanczy.spr'	;56x16
   954 							
   955 9200			start0
   956 9200 00 00 00 00 00 00 + 			ins './sprites1/start0.spr'	;64x16		
   957 9600 00 00 00 00 00 00 + 			ins './sprites1/start1.spr'	;64x16	
   958 							
   959 9A00			rampa0	
   960 9A00 20 20 20 20 20 20 + 			ins './sprites1/rampa_poziom.spr'	;8x8	
   961 9A40 27 26 25 24 23 22 + 			ins './sprites1/rampa_pion.spr'
   962 9A80 27 26 25 24 23 22 + 			ins './sprites1/rampa_lg.spr'
   963 9AC0 20 26 25 24 23 22 + 			ins './sprites1/rampa_pg.spr'
   964 9B00 27 20 20 20 20 20 + 			ins './sprites1/rampa_ld.spr'
   965 9B40 20 20 20 20 20 20 + 			ins './sprites1/rampa_pd.spr'
   966 9B80			over0			
   967 9B80 00 00 00 00 00 00 + 			ins './sprites1/gameover.spr'		;32x64
   968 9E80			czapka0			
   969 9E80 00 00 00 00 01 01 + 			ins './sprites1/czapka.spr'		;76x16
   970 							
   971 02E2-02E3> E4 25					ini _init2
   972 							
   973
   974 A340						org $8000
   975 8000			title0b			
   976 8000-9DFF> 2C 2A 00 2B + 			ins './sprites1/title0.spr'			;192x80
   977 							
   978 02E2-02E3> C7 27					ini _init2b
   979 							
   980 9E00						org $8000
   981 8000			title0c			
   982 8000-9DFF> 00 00 00 00 + 			ins './sprites1/title1.spr'			;192x80
   983 							
   984 02E2-02E3> F3 27					ini _init2c
   985 							
   986 							
   987 9E00						org $4000
   988 4000-705C> 52 4D 54 34 + 			ins 'ingame1.rmt'
   989 							
   990 02E2-02E3> 13 28					ini _init3
   991 							
   992 705D						org $4000
   993 4000-678C> 00 00 CC DD + 			ins './levels1/kolory_sfinks.dat'
   994 4030 0F FF FF FF FF FF + 			ins './levels1/sfinks.dat'
   995 							
   996 02E2-02E3> 1A 28					ini _init4
   997 							
   998 678D						org $4000
   999 4000-7434> 88 55 BB DD + 			ins './levels1/kolory_akropol.dat'
  1000 4030 0F FF FF FF FF FF + 			ins './levels1/akropol.dat'
  1001 							
  1002 02E2-02E3> 21 28					ini _init5
  1003 							
  1004 7435						org $4000
  1005 4000-6FE7> 88 88 CC 44 + 			ins './levels1/kolory_zamek.dat'
  1006 4030 0F FF FF FF FF FF + 			ins './levels1/zamek.dat'
  1007 							
  1008 02E2-02E3> 28 28					ini _init6
  1009 							
  1010 6FE8						org $4000
  1011 4000-6703> 00 66 CC BB + 			ins './levels1/kolory_miasto.dat'
  1012 4030 0F FF FF FF FF FF + 			ins './levels1/miasto.dat'
  1013 							
  1014 02E2-02E3> 2F 28					ini _init7
  1015 							
  1016 6704						org $4000
  1017 4000-679F> 00 00 BB 00 + 			ins './levels1/kolory_droga.dat'
  1018 4030 0F FF FF FF FF FF + 			ins './levels1/droga.dat'
  1019 							
  1020 02E2-02E3> 36 28					ini _init8
  1021 							
  1022 							
   199 							
   200 							
   201 67A0						org $2000
   202 							
   203 2000-2230> 00 02 02 12 + 			ins './gfx/game_font.fnt'
   204
   205 2100			cyfry		
   206 2100 00 3C 66 66 66 66 + 			dta 0,60,102,102,102,102,60,0	;0 maÅ‚e
   207 2108 00 18 38 18 18 18 + 			dta 0,24,56,24,24,24,126,0
   208 2110 00 3C 66 0C 18 30 + 			dta 0,60,102,12,24,48,126,0
   209 2118 00 7E 0C 18 0C 66 + 			dta 0,126,12,24,12,102,60,0
   210 2120 00 0C 1C 3C 6C 7E + 			dta 0,12,28,60,108,126,12,0
   211 2128 00 7E 60 7C 06 66 + 			dta 0,126,96,124,6,102,60,0
   212 2130 00 3C 60 7C 66 66 + 			dta 0,60,96,124,102,102,60,0
   213 2138 00 7E 06 0C 18 30 + 			dta 0,126,6,12,24,48,48,0
   214 2140 00 3C 66 3C 66 66 + 			dta 0,60,102,60,102,102,60,0
   215 2148 00 3C 66 3E 06 0C + 			dta 0,60,102,62,6,12,56,0		;9  
   216 							
   217 2150 18 18 30 30 00 00 + 			dta 24,24,48,48,0,0,0,0			;'
   218 							
   219 2158			_z_bonus	
   220 2158 00 00 00 00 00 00 + 			dta 0,0,0,0,0,0,0,0			;pusty znak
   221 							
   222 2160 00 00 00 00 00 00				dta 0,0,0,0,0,0
   223 2166 66						dta b(%01100110)
   224 2167 3C						dta b(%00111100)
   225 2168 18						dta b(%00011000)
   226 2169 3C						dta b(%00111100)
   227 216A 66						dta b(%01100110)
   228 216B 00 00 00 00 00 00 + 			:9 dta 0
   229 2174 18 38 78 18 18 18 + 			.he 18,38,78,18,18,18,18,18,7e	;1
   230 217D 00 00 00 00 00 00 + 			:7 dta 0
   231 2184 3C 66 06 06 1C 30 + 			.he 3c,66,06,06,1c,30,60,62,7e		;2
   232 218D 00 00 00 00 00 00 + 			:7 dta 0
   233 2194 3C 66 06 06 18 06 + 			.he 3c,66,06,06,18,06,06,66,3c	;3
   234 219D 00 00 00 00 00 00 + 			:7 dta 0
   235 21A4 0E 1E 36 66 66 7F + 			.he 0e,1e,36,66,66,7f,06,06,06		;4
   236 21AD 00 00 00 00 00 00 + 			:7 dta 0
   237 21B4 7E 60 60 7C 06 06 + 			.he 7e,60,60,7c,06,06,06,66,3c	;5
   238 21BD 00 00 00					:3 dta 0
   239 							
   240 							
   241 							;:8 dta b(0)
   242 21C0 00 18 18 7E 7E 18 + 			.he 00,18,18,7e,7e,18,18,00
   243 21C8 00 00 00 00 00 30 + 			.he 00,00,00,00,00,30,30,00
   244 21D0 00 3C 3C 18 18 00 + 			.he 00,3c,3c,18,18,00,18,00
   245 							
   246 21D8			init
   247 							
   248 21D8 A5 14					lda 20
   249 21DA C5 14		@			cmp 20
   250 21DC F0 FC					beq @-
   251 							
   252 21DE 78						sei
   253 21DF A9 00 8D 0E D4				mva #0 nmien
   254 21E4 8D 00 D4					sta dmactl
   255 21E7 8D 2F 02					sta 559
   256 21EA A9 FE 8D 01 D3				mva #$fe portb
   257 							
   258 21EF A2 00					ldx #0
   259 21F1 AD 0B D4					lda vcount
   260 21F4 F0 FB					beq *-3
   261 21F6 A8			@			tay
   262 21F7 AD 0B D4					lda vcount
   263 21FA D0 FA					bne @-
   264 21FC C0 84					cpy #$84
   265 21FE B0 02					bcs *+4
   266 2200 A2 04					ldx #4
   267 2202 86 A5					stx musicNTSC	;=0 ->PAL,=4 -> NTSC
   268 							
   269 							
   270 2204 A2 00					ldx #0
   271 2206 BD 00 20		@			lda $2000,x
   272 2209 9D 00 C1					sta $c100,x
   273 220C CA						dex
   274 220D D0 F7					bne @-
   275 							
   276 220F A2 57					ldx #11*8-1
   277 2211 BD 00 21		@			lda cyfry,x
   278 2214 9D 80 C0					sta $c080,x
   279 2217 CA						dex
   280 2218 10 F7					bpl @-
   281 							
   282 221A A2 7F					ldx #127	;#103
   283 221C BD 58 21		@			lda _z_bonus,x
   284 221F 9D 00 C0					sta $c000,x		;pusty znak
   285 2222 CA						dex
   286 2223 10 F7					bpl @-
   287 							
   288 2225 A9 FF 8D 01 D3				mva #$ff portb
   289 222A A9 40 8D 0E D4				mva #64 nmien
   290 222F 58						cli
   291 							
   292 2230 60						rts
   293 							
   294 02E2-02E3> D8 21					ini init
   295 							
   296 							;org portb
   297 							;dta (BANK0+1)
   298 							
   299 							;icl 'shapes.asm'
   300 							
   301 							;org portb
   302 							;dta (BANK1+1)
   303 							
   304 							;icl 'shapes1.asm'
   305 							
   306 							;org portb
   307 							;dta (BANK_off+1)
   308 							
   309 						
   310 2231						org $2000
   311 2000-239F> F0 F0		dlist0		dta $70+$80,$70+$80
   312 2002 F0 F0 F0 F0 F0 F0 + 			:25 .he f0	
   313 201B 10 42 5F 21 02				dta $10,$42,a(panel_adr),$02			;dolny panel
   314 2020 41 00 20					dta $41,a(dlist0)
   315
   316 2023			dlist1		
   317 2023 70 70 70 70 70 70 + 			:10 dta $70
   318 202D 42 00 DA					dta $42,a(obraz)
   319 2030 70 02 70 70 02 70 + 			.he 70,02,70,70,02,70,02
   320 2037 70 70 70 70 70 70 + 			:8 dta $70
   321 203F F0						dta $70+$80
   322 2040 10 42 5F 21 02				dta $10,$42,a(panel_adr),$02			;dolny panel
   323 2045 41 23 20					dta $41,a(dlist1)
   324 							
   325 2048			dlist_title
   326 2048 70 70 70 70					.he 70,70,70,70
   327 							;dta $42,a(title0)	;hscore
   328 204C 70 F0					.he 70,f0
   329 204E 70 70 70 70 60				.he 70,70,70,70,60
   330 							;dta $4a+$10,a(title1)	;tytuÅ‚
   331 							;:7 .he 0,1a
   332 							
   333 2053 70						dta $70
   334 2054 F0						dta $F0
   335 2055 42 DF 21					dta $42,a(title1a)
   336 2058 90						dta $90
   337 				.rept 8,#
   338 							:3 DTA $4F,A(TITLE1B+:1*32)		
   339 							DTA B(0)
   340 				.ENDR			
   340 				.endr			
Source: REPT
   338 2059 4F 00 06 4F 00 06 + 			:3 DTA $4F,A(TITLE1B+0*32)		
   338 2062 00						DTA B(0)
   338 2063 4F 20 06 4F 20 06 + 			:3 DTA $4F,A(TITLE1B+1*32)		
   338 206C 00						DTA B(0)
   338 206D 4F 40 06 4F 40 06 + 			:3 DTA $4F,A(TITLE1B+2*32)		
   338 2076 00						DTA B(0)
   338 2077 4F 60 06 4F 60 06 + 			:3 DTA $4F,A(TITLE1B+3*32)		
   338 2080 00						DTA B(0)
   338 2081 4F 80 06 4F 80 06 + 			:3 DTA $4F,A(TITLE1B+4*32)		
   338 208A 00						DTA B(0)
   338 208B 4F A0 06 4F A0 06 + 			:3 DTA $4F,A(TITLE1B+5*32)		
   338 2094 00						DTA B(0)
   338 2095 4F C0 06 4F C0 06 + 			:3 DTA $4F,A(TITLE1B+6*32)		
   338 209E 00						DTA B(0)
   338 209F 4F E0 06 4F E0 06 + 			:3 DTA $4F,A(TITLE1B+7*32)		
   338 20A8 00						DTA B(0)
Source: b.asm
   341 							;:7 .he 00,0f
   342 							
   343 20A9 B0						dta $80+$30
   344 20AA 42 2F 22					dta $42,a(best5)
   345 							
   346 20AD A0						dta $20+$80
   347 20AE 42 B7 22					dta $42,a(highscore)
   348 20B1 00 02 00 02 00 02 + 			dta $00,$02,$00,$02,$00,$02,$00,$02,$00
   349 							
   350 							
   351 20BA 30 F0 00					dta $30,$f0,$00
   352 20BD C2 FF 21					dta $42+$80,a(title2)
   353 20C0 41 48 20					dta $41,a(dlist_title)	;ABBUC
   354 							
   355 							
   356 20C3			dlist_highscore
   357 20C3 70 70 F0					dta $70,$70,$70+$80
   358 20C6 42 2F 21					dta $42,a(great_result)
   359 20C9 70 F0 47 7F 23				dta $70,$70+$80,$47,a(wpis)
   360 20CE 70 70 F0					dta $70,$70,$70+$80
   361 20D1 42 B7 22					dta $42,a(highscore)
   362 20D4 A0 02 A0 02 A0 02 + 			.he a0,02,a0,02,a0,02,a0,02
   363 20DC 41 C3 20					dta b($41),a(dlist_highscore)
   364 							
   365 20DF			dlist_congrat
   366 20DF 70 70 70 70 70 70 + 			.he 70,70,70,70,70,70,70
   367 20E6 47 F4 20					dta $47,a(congrat0)
   368 20E9 70 70 70					.he 70,70,70
   369 20EC 46 07 21					dta $46,a(congrat1)
   370 20EF 70 06					.he 70,06
   371 20F1 41 DF 20					dta b($41),a(dlist_congrat)
   372 							
   373 20F4			congrat0	
   374 20F4 80 80					:2 dta b($80)
   375 20F6 A3 AF AE A7 B2 A1 + 			dta d'CONGRATULATIONS'*	;14
   376 2105 80 80					:2 dta b($80)
   377 2107 80 39 2F 35 80 80 + congrat1	dta b($80),d'YOU',b($80,$80),d'HAVE',b($80),d'COMPLETE',b($80)
   378 211B 80 80 80 80 80				:5 dta b($80)
   379 2120 21 2C 2C 80 32 2F + 			dta d'ALL',b($80),d'ROUNDS'
   380 212A 80 80 80 80 80				:5 dta b($80)
   381 							
   382 212F			great_result
   383 212F 80 80 80 80 80 80 + 			:15 dta b($80)
   384 213E A7 B2 A5 A1 B4 80 + 			dta d'GREAT'*,B($80,$80),d'RESULT'*,b($80,$80,$8f,$8f,$8f)
   385 2150 80 80 80 80 80 80 + 			:15 dta b($80)
   386 							
   387 						
   388 215F 80 80 80 80 80 B3 + panel_adr	dta d'     SCORE    '*,b($81,$83),d'    ROUND   LIVES   HISCORE     '*
   389 218F 80 80 80 80 80 90 + 			dta d'     0000000  '*,b($82,$84),d'                    0000000     '*
   390 							
   391 							
   392 21BF			title0		
   393 21BF 80 80 80 80 80 80 + 			:7 .he 80
   394 21C6 A8 A9 B3 A3 AF B2 + 			dta d'HISCORE'*,b($80,$80,$80,$80,$80),d'0000000'*
   395 21D9 80 80 80 80 80 80				:6 .he 80			
   396
   397 = 0400			title1=$400		;tytuÅ‚ gry , pamiec obrazu
   398 = 0600			title1b=$600 	;shanti77 , pamiec obrazu
   399 							
   400 21DF			title1a		
   401 21DF 80 80 80 80 80 80 + 			:14 .he 80
   402 21ED A3 AF A4 A5					dta d'CODE'*			
   403 21F1 80 80 80 80 80 80 + 			:14 .he 80
   404 							
   405 21FF			title2		
   406 21FF 80 80 80 80 80 80 + 			:14 dta d' '*
   407 220D A6 A9 AE A1 AC 8D + 			dta d'FINAL-  VBXE VERSION'*	
   408 2221 80 80 80 80 80 80 + 			:14 dta d' '*
   409 							
   410 222F 80 80 80 80 80 80 + best5		:13 dta b($80)
   411 223C A2 A5 B3 B4 80 95				dta d'BEST 5'*
   412 2242 80 80 80 80 80 80 + 			:13 dta b($80)
   413 							
   414 224F 08 38 68 98 C8 F8 + obr_m		:28 dta b(<[obraz+8+#*48])
   415 226B DA DA DA DA DA DA + obr_s		:28 dta b(>[obraz+8+#*48])	
   416
   417 2287 FF FF FF FF FF FF + pusta_linia	:48 dta b(255)	
   418
   419 22B7			highscore	
   420 22B7 80 80 80 80 91 8E + 			dta d'    1.  ...    0000000   R00    '*
   421 22D7 80 80 80 80 92 8E + 			dta d'    2.  ...    0000000   R00    '*
   422 22F7 80 80 80 80 93 8E + 			dta d'    3.  ...    0000000   R00    '*
   423 2317 80 80 80 80 94 8E + 			dta d'    4.  ...    0000000   R00    '*
   424 2337 80 80 80 80 95 8E + 			dta d'    5.  ...    0000000   R00    '*
   425
   426 2357 FF FF FF 00 00 00 + wyniki		:5 .he ff,ff,ff,00,00,00,00,00
   427
   428 237F 00 00 00 00 00 00 + wpis		:32 dta 0
   429 					
   430
   431 239F 1E			next_bonus	dta b(30)
   432
   433 						
   434 23A0						icl 'przerwania.asm'
Source: przerwania.asm
     1 				//przerwania
     2 23A0			zestaw		org *+32
     3 23C0			level_cn	
     4 23C0-23DF> 1E 1E 1E 1E + 			:32 .he 1e
     5 23E0			level_cv	org *+32
     6 							
     7 2400						.align
     8 2400-2689> 85 80		dli			sta regA
     9 2402 86 81					stx regX
    10
    11 2404 A6 82					ldx licznik
    12 2406 E0 1C					cpx #28
    13 2408 90 6D					bcc @+
    14 							
    15
    16 240A A9 00					lda #0
    17 240C 8D 1A D0					sta colbak
    18 240F 8D 0A D4					sta wsync
    19 							
    20 2412 8D 17 D0					sta colpf1
    21 2415 A9 C0					lda #>znaki1
    22 							;sta wsync
    23 2417 8D 09 D4					sta chbase
    24 							;mva #0 colpf1			;kolory belki
    25 241A A9 31 8D 1B D0				mva #1+32+16 gtiactl
    26 241F A9 0F 8D 18 D0				mva #$0f colpf2
    27 2424 A9 58 8D 01 D0				mva #$58 hposp1
    28 2429 A9 70 8D 00 D0	_posp0		mva #$70 hposp0
    29 242E A9 90 8D 02 D0	_posp2		mva #$90 hposp2
    30 2433 A9 B0 8D 03 D0				mva #$b0 hposp3
    31 2438 A9 30 8D 04 D0				mva #$30 hposm0
    32 243D A9 38 8D 05 D0				mva #$38 hposm1
    33 2442 A9 40 8D 06 D0				mva #$40 hposm2
    34 2447 A9 03 8D 08 D0				mva #3 sizep0
    35 244C 8D 0A D0					sta sizep2
    36 244F 8D 0B D0					sta sizep3
    37 2452 A9 FF 8D 0C D0				mva #$ff sizem
    38 2457 A5 14					lda zegar
    39 2459 29 F4					and #$f4
    40 245B 09 08					ora #$08
    41 245D 8D 13 D0					sta colpm1
    42 2460 A9 36 8D 12 D0	_colpm0		mva #$36 colpm0
    43 2465 A9 E6 8D 14 D0	_colpm2		mva #$e6 colpm2
    44 246A A9 86 8D 15 D0				mva #$86 colpm3
    45 246F A9 98 8D 19 D0	_colscore	mva #$98 colpf3
    46 2474 4C 7E 24					jmp dli_end	
    47 							
    48 2477			@			
    49 2477 A9 E0					lda #>znaki
    50 2479 8D 09 D4					sta chbase			
    51 				;_dl0		lda #$ff
    52 				;_dl1		sta colpf0
    53 									
    54 				/*			
    55 				@			lda blok_x01,x			;player 0 i 1
    56 							beq @+
    57 							sta hposp1
    58 							sta hposp0
    59 							lsr
    60 							beq @+
    61 							lda blok_c1,x
    62 							sta colpm1
    63 							lda blok_c0,x
    64 							sta colpm0
    65 							
    66 							
    67 							
    68 				@			lda blok_x23,x			;player 2 i 3
    69 							beq @+
    70 							sta hposp3
    71 							sta hposp2
    72 							lsr
    73 							beq @+
    74 							lda blok_c3,x
    75 							sta colpm3	
    76 							lda blok_c2,x
    77 							sta colpm2
    78 										
    79
    80 				@			lda #0	
    81 							sta blok_x01,x
    82 							sta blok_x23,x
    83 							;sta blok_status,x  */
    83
    84 						
    85 247C E6 82					inc licznik
    86 				;			lda level_cn-2,x
    87 				;			sta _dl1+1
    88 				;			lda level_cv-2,x
    89 				;			sta _dl0+1  
    90 							
    91 247E			dli_end	
    92 247E A6 81					ldx regX
    93 2480 A5 80					lda regA
    94 2482 40			irq			rti
    95
    96 2483 2C 0F D4		nmi			bit nmist
    97 2486 10 03					bpl *+5
    98 2488 6C 00 02					jmp (dliv)
    99 248B 6C 22 02					jmp (vbiv)
   100
   101 248E 48			vblk		pha
   102
   103 248F A9 E0					lda #>znaki
   104 2491 8D 09 D4					sta chbase
   105 2494			licznik_start			
   106 2494 A9 02 85 82					mva #2 licznik
   107 2498 AD 01 D8 8D 1A D0				mva kolor_tlo colbak
   108 249E AD 02 D8 8D 16 D0	 			mva kolor0 colpf0
   109 24A4 AD 03 D8 8D 17 D0				mva kolor1 colpf1
   110 24AA AD 04 D8 8D 18 D0				mva kolor2 colpf2
   111 24B0 AD 05 D8 8D 19 D0				mva kolor3 colpf3		;#$0f colpf3
   112 							;lda #$1e
   113 							;sta _dl1+1
   114 							
   115 							
   116 24B6 A9 00 8D 01 D0				mva #0 hposp1
   117 = 24BC			sizep0s		equ *+1
   118 24BB A9 00					lda #0
   119 24BD 8D 08 D0					sta sizep0
   120 = 24C1			sizep1s		equ *+1
   121 24C0 A9 00					lda #0
   122 24C2 8D 09 D0					sta sizep1			
   123 = 24C6			sizep2s		equ *+1
   124 24C5 A9 00					lda #0
   125 24C7 8D 0A D0					sta sizep2
   126 = 24CB			sizep3s		equ *+1
   127 24CA A9 00					lda #0
   128 24CC 8D 0B D0					sta sizep3	
   129 = 24D0			sizems		equ *+1			
   130 24CF A9 00 8D 0C D0				mva #0 sizem
   131 							
   132 = 24D5			hposp0s		equ *+1			
   133 24D4 A9 00 8D 00 D0				mva #0 hposp0
   134 = 24DA			hposp1s		equ *+1			
   135 24D9 A9 00 8D 01 D0				mva #0 hposp1						
   136 = 24DF			hposp2s		equ *+1
   137 24DE A9 00 8D 02 D0				mva #0 hposp2
   138 = 24E4			hposp3s		equ *+1
   139 24E3 A9 00 8D 03 D0				mva #0 hposp3
   140 							
   141 = 24E9			colpm0s		equ *+1			
   142 24E8 A9 00					lda #0
   143 24EA 8D 12 D0					sta colpm0
   144 = 24EE			colpm1s		equ *+1			
   145 24ED A9 00					lda #0
   146 24EF 8D 13 D0					sta colpm1			
   147 = 24F3			colpm2s		equ *+1			
   148 24F2 A9 00					lda #0
   149 24F4 8D 14 D0					sta colpm2
   150 = 24F8			colpm3s		equ *+1
   151 24F7 A9 00					lda #0
   152 24F9 8D 15 D0					sta colpm3
   153 							
   154 = 24FD			hposm0s		equ *+1
   155 24FC A9 00					lda #0
   156 24FE 8D 04 D0					sta hposm0
   157 = 2502			hposm1s		equ *+1
   158 2501 A9 00					lda #0
   159 2503 8D 05 D0					sta hposm1
   160 = 2507			hposm2s		equ *+1
   161 2506 A9 00					lda #0
   162 2508 8D 06 D0					sta hposm2
   163 = 250C			hposm3s		equ *+1
   164 250B A9 00					lda #0
   165 250D 8D 07 D0					sta hposm3			
   166 							
   167 							
   168 = 2511			gtiactls	equ *+1
   169 2510 A9 00					lda #0
   170 2512 8D 1B D0					sta gtiactl
   171 									
   172 2515 E6 14					inc zegar
   173 							
   174 2517 A5 14					lda zegar
   175 2519 4A						lsr
   176 251A F0 58					beq @+1
   177 							
   178 251C 98						tya
   179 251D 48						pha
   180 251E A0 44					ldy	#$44
   181 2520 A9 1D 91 B9 C8				mva	#$1d	(fx_ptr),y+	; CSEL ,nr koloru
   182 2525 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety
   183 							
   184 2529 AD 0A D8					lda ramka
   185 252C 29 03					and #3
   186 252E F0 2A					beq @+
   187
   188 2530 A0 46					ldy	#$46	; CR
   189 2532 AD 0A D2					lda random
   190 2535 91 B9 C8					sta	(fx_ptr),y+		;RED
   191 2538 AD 0A D2					lda random
   192 253B 91 B9 C8					sta (fx_ptr),y+	;GREEN
   193 253E AD 0A D2					lda random
   194 2541 91 B9					sta (fx_ptr),y		;BLUE
   195 2543 A0 46					ldy #$46
   196 2545 AD 0A D2					lda random
   197 2548 91 B9 C8					sta	(fx_ptr),y+		;RED
   198 254B AD 0A D2					lda random
   199 254E 91 B9 C8					sta (fx_ptr),y+	;GREEN
   200 2551 AD 0A D2					lda random
   201 2554 91 B9					sta (fx_ptr),y		;BLUE	
   202 							
   203 								
   204 2556 68						pla
   205 2557 A8						tay
   206 2558 68						pla
   207 2559 40						rti
   208 							
   209
   210 255A A0 46		@			ldy	#$46	; CR
   211 255C A9 00					lda #0
   212 255E 91 B9 C8					sta	(fx_ptr),y+		;RED
   213 2561 91 B9 C8					sta (fx_ptr),y+	;GREEN
   214 2564 91 B9					sta (fx_ptr),y		;BLUE
   215 2566 A0 46					ldy #$46
   216 2568 A9 00					lda #0
   217 256A 91 B9 C8					sta	(fx_ptr),y+		;RED
   218 256D 91 B9 C8					sta (fx_ptr),y+	;GREEN
   219 2570 91 B9					sta (fx_ptr),y		;BLUE	
   220 							
   221 2572 68						pla
   222 2573 A8						tay
   223 							
   224 							
   225 2574 68			@			pla
   226 2575 40						rti
   227 							
   228 2576 85 80		dli1		sta regA
   229 2578 86 81					stx regX
   230 							
   231 257A E6 82					inc licznik
   232 257C A6 82					ldx licznik
   233 257E D0 1D					bne @+
   234
   235 2580 A5 14					lda zegar
   236 2582 4A 4A					:2 lsr
   237 2584 29 07					and #7
   238 = 2587			_col0		equ *+1			
   239 2586 09 38					ora #$38
   240 2588 8D 18 D0					sta colpf2
   241 258B A5 14					lda zegar
   242 258D 29 1F					and #$1f
   243 258F D0 09					bne dl0
   244 2591 18						clc
   245 2592 AD 87 25					lda _col0
   246 2595 69 10					adc #$10
   247 2597 8D 87 25					sta _col0
   248 259A			dl0			
   249 259A 4C 7E 24					jmp dli_end
   250 							
   251 259D E0 01		@			cpx #1
   252 259F D0 08					bne @+
   253 							
   254 25A1 A9 EC 8D 18 D0				mva #$ec colpf2
   255 25A6 4C 7E 24					jmp dli_end
   256 							
   257 25A9 E0 02		@			cpx#2
   258 25AB D0 0D					bne @+
   259 25AD A9 0E 8D 18 D0				mva #$0e colpf2
   260 25B2 A9 00 8D 17 D0				mva #06-6 colpf1
   261 25B7 4C 7E 24					jmp dli_end
   262 							
   263 25BA E0 03		@			cpx #3
   264 25BC D0 0D					bne @+
   265 							
   266 25BE A9 3C 8D 18 D0				mva #$3c colpf2
   267 25C3 A9 02 8D 17 D0				mva #$02 colpf1
   268 25C8 4C 7E 24					jmp dli_end
   269 							
   270 25CB E0 04		@			cpx #4
   271 25CD D0 0D					bne @+
   272 25CF A9 04 8D 17 D0				mva #$04 colpf1
   273 25D4 A9 0E 8D 18 D0				mva #$0e colpf2
   274 25D9 4C 7E 24					jmp dli_end
   275 							
   276 							
   277 25DC E0 05		@			cpx #5
   278 25DE D0 22					bne @+
   279 25E0 8D 0A D4					sta wsync
   280 25E3 A9 00 8D 1A D0				mva #0 colbak
   281 25E8 A9 0C 8D 18 D0				mva #$0c colpf2
   282 25ED A9 00 8D 17 D0				mva #$00 colpf1
   283 25F2 8D 0A D4					sta wsync
   284 25F5 A9 3B 8D 00 D4				mva #$3b dmactl
   285 25FA A9 00 8D 1A D0				mva #0 colbak
   286 							
   287 25FF 4C 7E 24					jmp dli_end
   288 							
   289 2602			@			
   290 2602 8D 0A D4					sta wsync
   291 2605 A9 39 8D 00 D4				mva #$39 dmactl
   292 260A A9 00 8D 1A D0				mva #$00 colbak
   293 260F 8D 0A D4					sta wsync
   294 2612 A9 0E 8D 18 D0				mva #$0e colpf2
   295 2617 A9 02 8D 17 D0				mva #$02 colpf1
   296 261C 4C 7E 24					jmp dli_end
   297 							
   298 261F 85 80		dli2		sta regA
   299 2621 86 81					stx regX
   300 							
   301 2623 E6 82					inc licznik
   302 2625 A6 82					ldx licznik
   303 2627 D0 12					bne @+
   304
   305 2629 A9 3B 8D 00 D4				mva #$3b dmactl
   306 262E A9 2C 8D 18 D0				mva #$2c colpf2			;title
   307 2633 A9 00 8D 17 D0				mva #$00 colpf1
   308 							
   309 2638 4C 7E 24					jmp dli_end
   310 							
   311 263B E0 01		@			cpx #1
   312 263D D0 10					bne @+
   313
   314 263F A9 C0 8D 09 D4				mva #>(znaki1+2) chbase
   315 2644 A5 14					lda zegar
   316 2646 4A						lsr 
   317 2647 09 02					ora #2
   318 2649 8D 16 D0					sta colpf0
   319 264C 4C 7E 24					jmp dli_end
   320 							
   321 264F A9 39 8D 00 D4	@			mva #$39 dmactl
   322 2654 A9 C0 8D 09 D4				mva #>znaki1 chbase
   323 2659 BD 6B 26					lda tab_dl-1,x
   324 265C 8D 18 D0					sta colpf2
   325 265F A5 14					lda zegar
   326 2661 4A						lsr
   327 2662 29 0C					and #$0c
   328 2664 05 9B					ora pom0e
   329 2666 8D 12 D0					sta colpm0
   330 							
   331 2669 4C 7E 24					jmp dli_end			
   332 							
   333 							
   334 266C 00 5C 6C 7C 8C 9C	tab_dl		.he 00,5c,6c,7c,8c,9c			
   335 							
   336 2672 48			vblk1		pha
   337 2673 E6 14					inc zegar
   338 2675 A9 FF 85 82					mva #255 licznik
   339 2679			vblk11			
   340 2679 A5 BC					lda muza0
   341 267B F0 0B					beq @+
   342 267D 8A						txa
   343 267E 48						pha
   344 267F 98						tya
   345 2680 48						pha
   346 2681 20 4B 82					jsr rmt_play0
   347 2684 68						pla
   348 2685 A8						tay
   349 2686 68						pla
   350 2687 AA						tax
   351 = 2688			@			equ *			
   352
   353 2688 68						pla
   354 2689 40						rti
   355 							
   356 							
   357
   358 							
   359 							
   435 268A						icl 'bomby.asm'
Source: bomby.asm
     1 				//obsÅ‚uguje bomby
     2 268A			bomba_x				org *+24
     3 26A2			bomba_y				org *+24
     4 26BA			bomba_anim_licznik	org *+24
     5 26D2			bomba_anim_licznik1	org *+24
     6 26EA			bomba_m_scr			org *+24
     7 2702			bomba_s_scr			org *+24
     8 271A			bomba_anim_faza		org *+24
     9 2732			bomba_anim_typ		org *+24
    10 274A			bomba_zapalona		org *+24
    11 2762			bomba_ch0			org *+24
    12 277A			bomba_ch1			org *+24
    13 2792			bomba_ch2			org *+24
    14 27AA			bomba_ch3			org *+24
    15 27C2			bomba_score_licznik	org *+24
    16
    17 27DA			bomba_ad0			org *+24
    18 27F2			bomba_ad1			org *+24
    19 280A			bomba_zmiana		org *+24
    20
    21
    22 = 0002			BOMBA_ANIM_SPEED=2
    23 = 0017			MAX_BOMB=24-1
    24
    25 				//tablica z nr znakÃ³w, po 4 na kazda faze animacji
    26 2822			tab_anim0		
    27 2822-2A3C> 42 43 44 45 + 				dta ch_bomb0,ch_bomb0+1,ch_bomb0+2,ch_bomb0+3,ch_bomb0+4,ch_bomb0+5,ch_bomb0+6,ch_bomb0+7,ch_bomb0+8,ch_bomb0+9,ch_bomb0+10,ch_bomb0+11,ch_bomb0+12,ch_bomb0+13,ch_bomb0+14,ch_bomb0+15		;zwykÅ‚a bomba 4fazy x 4znaki na niebieskim tle
    28 2832 52 53 54 55 56 57 + 				dta ch_bomb1,ch_bomb1+1,ch_bomb1+2,ch_bomb1+3,ch_bomb1+4,ch_bomb1+5,ch_bomb1+6,ch_bomb1+7,ch_bomb1+8,ch_bomb1+9,ch_bomb1+10,ch_bomb1+11,ch_bomb1+12,ch_bomb1+13,ch_bomb1+14,ch_bomb1+15		;zwykÅ‚a bomba 4fazy x 4znaki na brazowym tle
    29 2842 42 43 44 45 62 63 + 				dta ch_bomb0,ch_bomb0+1,ch_bomb0+2,ch_bomb0+3,ch_bomb2,ch_bomb2+1,ch_bomb2+2,ch_bomb2+3,ch_bomb0,ch_bomb0+1,ch_bomb0+2,ch_bomb0+3,ch_bomb0,ch_bomb0+1,ch_bomb0+2,ch_bomb0+3					;biala bomba na niebieskim tle
    30 2852 52 53 54 55 66 67 + 				dta ch_bomb1,ch_bomb1+1,ch_bomb1+2,ch_bomb1+3,ch_bomb3,ch_bomb3+1,ch_bomb3+2,ch_bomb3+3,ch_bomb1,ch_bomb1+1,ch_bomb1+2,ch_bomb1+3,ch_bomb1,ch_bomb1+1,ch_bomb1+2,ch_bomb1+3					;biala bomba na brazowym tle
    31 								
    32 							
    33
    34 2862			.local bomb			
    35
    36
    37 2862			zgas_bonus
    38 				//zmazuje bonus rysowane na duszkach				
    39 2862 A2 07						ldx #7
    40 2864 BD 88 2B		@				lda sprite_score_licznik,x
    41 2867 F0 0F						beq @+
    42 2869 DE 88 2B						dec sprite_score_licznik,x
    43 286C D0 0A						bne @+
    44 								
    45 286E A9 00 9D 00 2B					mva #0 sprite_x,x
    46 2873 9D 58 2B						sta sprite_typ,x
    47 2876 C6 B6						dec ile_score
    48 								
    49 2878 CA			@				dex
    50 2879 D0 E9						bne @-1
    51
    52
    53 				//gasi bonus po pewnym czasie
    54 287B A2 17						ldx #MAX_BOMB
    55 287D BD C2 27		@				lda bomba_score_licznik,x
    56 2880 F0 11						beq @+
    57 2882 DE C2 27						dec bomba_score_licznik,x
    58 2885 D0 0C						bne @+
    59 2887 A9 FF 9D 1A 27					mva #-1 bomba_anim_faza,x
    60 288C A9 01 9D 0A 28					mva #1 bomba_zmiana,x
    61 											
    62 								;jsr zmaz_bombe
    63 2891 C6 B6						dec ile_score
    64 2893 CA			@				dex
    65 2894 10 E7						bpl @-1
    66 								
    67 								
    68 								
    69
    70 										
    71 2896 60							rts
    72 												
    73 								
    74 2897			zgas_bombe
    75 2897 A2 17						ldx #MAX_BOMB
    76 2899 BD 8A 26		@				lda bomba_x,x
    77 289C F0 15						beq @+
    78 289E BD 4A 27						lda bomba_zapalona,x
    79 28A1 F0 10						beq @+
    80 								
    81 28A3 A9 00 9D 4A 27					mva #0 bomba_zapalona,x
    82 28A8 A9 01 9D 0A 28					mva #1 bomba_zmiana,x
    83 28AD A9 57 9D 1A 27					mva #87 bomba_anim_faza,x
    84
    85 28B2 60							rts
    86 								
    87 28B3 CA			@				dex
    88 28B4 10 E3						bpl @-1
    89 28B6 60							rts
    90 								
    91 28B7			animuj_bomby	
    92 28B7 AD 0A D8						lda ramka
    93 28BA 4A							lsr
    94 28BB B0 31						bcs @+
    95 28BD A0 44						ldy	#$44
    96 28BF A9 1D 91 B9 C8					mva	#$1d	(fx_ptr),y+	; CSEL ,nr koloru
    97 28C4 A9 01 91 B9						mva	#1	(fx_ptr),y	; PSEL	,nr palety
    98
    99 28C8 A0 46						ldy	#$46	; CR
   100 28CA AD 0A D2						lda random
   101 28CD 91 B9 C8						sta	(fx_ptr),y+		;RED
   102 28D0 AD 0A D2						lda random
   103 28D3 91 B9 C8						sta (fx_ptr),y+	;GREEN
   104 28D6 AD 0A D2						lda random
   105 28D9 91 B9						sta (fx_ptr),y		;BLUE
   106 28DB A0 46						ldy #$46
   107 28DD AD 0A D2						lda random
   108 28E0 91 B9 C8						sta	(fx_ptr),y+		;RED
   109 28E3 AD 0A D2						lda random
   110 28E6 91 B9 C8						sta (fx_ptr),y+	;GREEN
   111 28E9 AD 0A D2						lda random
   112 28EC 91 B9						sta (fx_ptr),y		;BLUE
   113 28EE 60			@				rts
   114
   115 								
   116
   117 28EF			rysuj_bombe1
   118 28EF 48						pha
   119 28F0 98						tya
   120 28F1 48						pha
   121 							
   122 28F2 A0 5D					ldy	#$5d	; MEMB		
   123 28F4 A9 9C 91 B9					mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; wlacz bank z duszkami
   124 							
   125 28F8 A9 01 8D 94 48				mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]		;teraz rysowania
   126 							
   127 28FD 68						pla
   128 28FE A8						tay
   129 28FF 68						pla
   130 2900 0A 0A 0A					:3 asl
   131 2903 8D 86 48					sta $4006+[bcb_vbxe&$3fff]			;pozycja X
   132 2906 9D DA 27					sta bomba_ad0,x
   133 2909 98						tya
   134 290A 0A 0A 0A					:3 asl
   135 290D 8D 87 48					sta $4007+[bcb_vbxe&$3fff]     	;pozycja Y
   136 2910 9D F2 27					sta bomba_ad1,x
   137 2913 A9 57					lda #87			;BOMBA
   138 2915 8D 81 48					sta $4001+[bcb_vbxe&$3fff]
   139
   140 2918 20 2A 30					jsr multi.blit1	
   141
   142 291B A0 5D					ldy #$5d
   143 291D A9 00 91 B9					mva #0 (fx_ptr),y		;wylacz pamiec vbxe
   144 2921 9D 0A 28					sta bomba_zmiana,x
   145 2924 9D C2 27					sta bomba_score_licznik,x
   146 2927 A9 57 9D 1A 27				mva #87 bomba_anim_faza,x
   147 							
   148 292C 60						rts
   149 							
   150 292D			dec_paraliz
   151 292D 8D 47 29					sta _dp0+1
   152 2930 A5 C3					lda paraliz_flag
   153 2932 D0 18					bne @+
   154 2934 AD 5F 2B					lda sprite_typ+7			
   155 2937 C9 08					cmp #t_paraliz
   156 2939 F0 11					beq @+
   157 293B AD 2B D8					lda licznik_paraliz
   158 293E 0D 2C D8					ora licznik_paraliz+1
   159 2941 D0 09					bne @+
   160 							
   161 2943 38						sec
   162 2944 A5 C4					lda licznik1_paraliz
   163 2946 E9 01		_dp0		sbc #1
   164 2948 85 C4					sta licznik1_paraliz
   165 294A 90 01					bcc @+1
   166 294C 60			@			rts
   167
   168 294D			@			
   169 294D A9 01 85 C3					mva #1 paraliz_flag				;zezwol na paraliz
   170 2951 A9 13 85 C4					mva #19 licznik1_paraliz		;zeruj licznik
   171 2955 60						rts		
   172 											
   173 2956			nie_zapalona	
   174 2956 A9 01					lda #1
   175 2958 20 2D 29					jsr dec_paraliz
   176
   177 295B 86 BD					stx last_bomba
   178 295D A9 02					lda #2
   179 295F A0 04					ldy #fx_bomba
   180 2961 20 26 4F					jsr sfx.add_fx
   181 							
   182 2964 AC 14 D8					ldy bonus
   183 2967 B9 0C 2A					lda score_tab0,y
   184 296A 20 11 2A					jsr score_add
   185 							
   186 296D AD 08 D8					lda ile_bomb
   187 2970 F0 04					beq @+
   188 2972 A5 BE					lda czy_zapalona
   189 2974 F0 01					beq *+3
   190 2976 60			@			rts
   191 2977 E6 BE					inc czy_zapalona
   192 2979 4C ED 29					jmp zapal_bombe
   193
   194 							
   195 297C			zbieraj_bomby
   196 297C A2 17					ldx #MAX_BOMB
   197 297E BD 8A 26		@			lda bomba_x,x
   198 2981 D0 04					bne @+
   199 2983 CA			nx_bmb		dex
   200 2984 10 F8					bpl @-
   201 2986 60						rts
   202 							
   203 2987 38			@			sec
   204 2988 ED 00 2B					sbc sprite_x
   205 298B 18						clc
   206 298C 69 04					adc #4
   207 298E C9 09					cmp #9
   208 2990 B0 F1					bcs nx_bmb
   209 2992 BD A2 26					lda bomba_y,x
   210 2995 38						sec
   211 2996 ED 10 2B					sbc sprite_y
   212 2999 18						clc
   213 299A 69 09					adc #9
   214 299C C9 13					cmp #19
   215 299E B0 E3					bcs nx_bmb
   216
   217 							
   218 							
   219 29A0 CE 08 D8					dec ile_bomb
   220 29A3 A9 00 9D 8A 26				mva #0 bomba_x,x			;nie ma juz bomby
   221 29A8 A9 FF 9D 0A 28				mva #-1 bomba_zmiana,x		;zmaz
   222 29AD 9D 1A 27					sta bomba_anim_faza,x		;nie rysuj nowej	
   223 29B0 86 BD					stx last_bomba
   224 							
   225 29B2 BD 4A 27					lda bomba_zapalona,x
   226 29B5 F0 9F					beq nie_zapalona
   227 							
   228 29B7 A9 02					lda #2
   229 29B9 20 2D 29					jsr dec_paraliz	
   230 							
   231 29BC E6 BF					inc ile_zapalonych
   232 29BE AC 14 D8					ldy bonus
   233 29C1 B9 07 2A					lda score_tab,y
   234 29C4 20 11 2A					jsr score_add
   235 29C7 C0 04					cpy #4
   236 29C9 D0 05					bne *+7
   237 29CB A9 50					lda #$50					;1000=2x500
   238 29CD 20 11 2A					jsr score_add	
   239
   240 							
   241 29D0 A9 5A 9D 1A 27				mva #90 bomba_anim_faza,x			;bonus=200
   242 29D5 A9 01 9D 0A 28				mva #1 bomba_zmiana,x				;przerysuj tÄ… bombkÄ™
   243 							
   244 29DA A9 1E 9D C2 27				mva #30 bomba_score_licznik,x
   245 29DF E6 B6					inc ile_score
   246 							
   247 29E1 A9 02					lda #2
   248 29E3 A0 06					ldy #fx_bomba1
   249 29E5 20 26 4F					jsr sfx.add_fx			
   250 							
   251 29E8 AD 08 D8					lda ile_bomb
   252 29EB F0 19					beq @+1
   253 							
   254 							
   255 				;wlaczamy nastepna bombe	
   256 29ED			zapal_bombe
   257 29ED A6 BD					ldx last_bomba
   258 29EF CA			@			dex
   259 29F0 10 02					bpl *+4
   260 29F2 A2 17					ldx #23
   261 29F4 BD 8A 26					lda bomba_x,x
   262 29F7 F0 F6					beq @-
   263 							
   264 29F9 A9 01 9D 4A 27				mva #1 bomba_zapalona,x
   265 29FE 9D 0A 28					sta bomba_zmiana,x
   266 2A01 A9 58 9D 1A 27				mva #88 bomba_anim_faza,x
   267 							
   268 							
   269 2A06 60			@			rts
   270 							
   271 							
   272 							
   273
   274
   275 2A07			score_tab	
   276 2A07 20 40 60 80 50				.he 20,40,60,80,50			;punkty dla zapalonej bomby
   277 2A0C			score_tab0	
   278 2A0C 10 20 30 40 50				.he 10,20,30,40,50			;punkty dla zwykÅ‚ej bomby
   279 									
   280 				.endl		
   281
   282 2A11			score_add
   283 2A11 18						clc
   284 2A12 F8						sed
   285 2A13 6D 0E D8					adc score
   286 2A16 8D 0E D8					sta score
   287 2A19 AD 0F D8					lda score+1
   288 2A1C 69 00					adc #0
   289 2A1E 8D 0F D8					sta score+1
   290 2A21 AD 10 D8					lda score+2
   291 2A24 69 00					adc #0
   292 2A26 D8						cld
   293 2A27 8D 10 D8					sta score +2
   294 2A2A 60						rts
   295 							
   296 2A2B			score_addx100
   297 2A2B 18						clc
   298 2A2C F8						sed
   299 2A2D 6D 0F D8					adc score+1
   300 2A30 8D 0F D8					sta score+1
   301 2A33 AD 10 D8					lda score+2
   302 2A36 69 00					adc #0
   303 2A38 D8						cld
   304 2A39 8D 10 D8					sta score+2
   305 2A3C 60						rts
   306 							
   307
   308 								
   436 2A3D						icl 'multi.asm'
Source: multi.asm
     1 				//MULTI
     2 				//multiplekser
     3 = 0008			MAX_SPRITES	equ 8		
     4 = 0010			POSY_MIN		equ 16
     5 = 00D0			POSY_MAX		equ 208
     6 					
     7 = 0040			POSX_MIN		equ 64
     8 = 00B8			POSX_MAX		equ 184
     9
    10 2A3D								.align
    11 2B00			sprite_x			org *+MAX_SPRITES		;pozycja X obiektu
    12 2B08			sprite_dx			org *+MAX_SPRITES		;pozycja X po przecinku
    13 2B10			sprite_y			org *+MAX_SPRITES
    14 2B18			sprite_dy			org *+MAX_SPRITES	
    15 2B20			sprite_shape		org *+MAX_SPRITES		;ksztalt obiektu (obecny)
    16 2B28			sprite_shape0		org *+MAX_SPRITES		;  -II-         poczÄ…tkowy
    17 2B30			sprite_c0			org *+MAX_SPRITES		;kolor 0 obiektu
    18 2B38			sprite_c1			org *+MAX_SPRITES		;kolor 1 obiektu
    19 2B40			sprite_anim			org *+MAX_SPRITES		;liczba klatek animacji obiektu	(dowolna liczba)
    20 2B48			sprite_anim_speed 	org *+MAX_SPRITES		;szybkoÅ›Ä‡ animacji obiektu  (1,3,7...)
    21 2B50			sprite_mask 		org *+MAX_SPRITES		;maska potrzebna do animacji
    22 2B58			sprite_typ			org *+MAX_SPRITES
    23 2B60			tab_nr_pary			org *+MAX_SPRITES
    24 2B68			tab_duch_dy			org *+MAX_SPRITES
    25 2B70			sprite_ad0			org *+MAX_SPRITES
    26 2B78			sprite_ad1			org *+MAX_SPRITES
    27 2B80			sprite_draw		org *+MAX_SPRITES
    28 2B88			sprite_score_licznik	org *+MAX_SPRITES
    29
    30 2B90			tab_sortowanie	
    31 2B90-2B98> 00 01 02 03 + 				:8 dta b(#)
    32 2B98 08							dta b(8)
    33
    34 2B99			blok_status		org *+32	;tablica pomocnicza do ustalenia zajÄ™toÅ›ci duszkÃ³w
    35 2BB9			blok_x01		org *+32	;pozycje pary duszkÃ³w 0 i 1
    36 2BD9			blok_x23		org *+32	;pozycje pary duszkÃ³w 2 i 3
    37 2BF9			blok_c0			org *+32	;kolor duszka 0
    38
    39 2C19							.align
    40 2D00			blok_c1			org *+32
    41 2D20			blok_c2			org *+32
    42 2D40			blok_c3			org *+32	
    43 							
    44 2D60			tab_nr_bloku		
    45 2D60-31F8> FF FF FF FF + 				:9 dta b(255)
    46
    47 2D69			.local multi
    48 = 0097			spr_flag	equ pom0a
    49 = 0098			nr_duszka	equ pom0b
    50 				;poz_y		equ pom0c
    51 = 009A			duch_dy		equ pom0d
    52
    53
    54 2D69			change_letter_color
    55 2D69 A0 44				ldy	#$44
    56 2D6B A9 13 91 B9 C8			mva	#$13	(fx_ptr),y+	; CSEL ,nr koloru
    57 2D70 A9 01 91 B9				mva	#1	(fx_ptr),y	; PSEL	,nr palety
    58
    59 2D74 A0 48				ldy	#$46+2	; CB
    60 2D76 A5 14				lda zegar
    61 2D78 0A 0A 0A 0A				:4 asl
    62 2D7C 91 B9				sta (fx_ptr),y		;BLUE
    63 						
    64 2D7E 60					rts	
    65
    66 2D7F FF 80 00 33		tab_p0r	.he ff,80,00,33
    67 2D83 00 80 FF 00		tab_p0g	.he 00,80,ff,00
    68 2D87 33 80 33 FF		tab_p0b	.he 33,80,33,ff
    69
    70 2D8B CC 50 00 FF		tab_p1r	.he cc,50,00,ff
    71 2D8F 00 50 CC 00		tab_p1g	.he 00,50,cc,00
    72 2D93 FF 50 FF CC		tab_p1b	.he ff,50,ff,cc
    73
    74 2D97			animuj
    75 2D97 20 69 2D				jsr change_letter_color
    76
    77 2D9A AD 0A D8				lda ramka
    78 2D9D 8D B1 2D				sta _em2+1
    79
    80 2DA0 A2 07				ldx #MAX_SPRITES-1
    81 2DA2 BD 00 2B		@		lda sprite_x,x
    82 2DA5 D0 04				bne @+
    83 2DA7 CA			next	dex
    84 2DA8 10 F8				bpl @-
    85 2DAA 60					rts
    86 2DAB			@				
    87 2DAB BD 48 2B				lda sprite_anim_speed,x
    88 2DAE 30 F7				bmi next
    89 2DB0 29 FF		_em2	and #$ff
    90 2DB2 D0 F3				bne next
    91 						
    92 2DB4 FE 20 2B				inc sprite_shape,x
    93 2DB7 BD 20 2B				lda sprite_shape,x
    94 2DBA 3D 50 2B				and sprite_mask,x
    95 2DBD DD 40 2B				cmp sprite_anim,x
    96 2DC0 90 02				bcc *+4
    97 2DC2 A9 00				lda #0
    98 2DC4 1D 28 2B				ora sprite_shape0,x
    99 2DC7 9D 20 2B				sta sprite_shape,x
   100 2DCA 4C A7 2D				jmp next
   101 						
   102 				//inicjalizacja spritÃ³w
   103 2DCD			init_sprite
   104 2DCD A9 01				lda #1
   105 2DCF AA					tax
   106 2DD0 95 83		@		sta bit0-1,x
   107 2DD2 E8					inx
   108 2DD3 0A					asl
   109 2DD4 D0 FA				bne @-
   110 2DD6 A9 06 85 83				mva #%110 bit12
   111 						
   112 2DDA A9 20				lda #$20
   113 2DDC 8D 78 2B 8D 79 2B + 		:8 sta sprite_ad1+#
   114 						
   115 2DF4			init_sprite1	
   116
   117 						;mva #MAX_SPRITES-1 start
   118 						
   119 2DF4			init_sprite2
   120 2DF4 A2 F9				ldx #$f9
   121 2DF6 A9 00				lda #0
   122 2DF8 9D 00 FB		@		sta sprites+$300,x			;wyczysc duszki
   123 2DFB 9D 00 FC				sta sprites+$400,x
   124 2DFE 9D 00 FD				sta sprites+$500,x
   125 2E01 9D 00 FE				sta sprites+$600,x
   126 2E04 9D 00 FF				sta sprites+$700,x
   127 2E07 CA					dex
   128 2E08 D0 EE				bne @-			
   129 							
   130 2E0A 60					rts
   131 						
   132 2E0B			hide_sprite
   133 2E0B A2 07				ldx #7
   134
   135 2E0D BD 80 2B		@		lda sprite_draw,x
   136 2E10 F0 05				beq @+
   137 						
   138 				/*		ldy	#$5d	; MEMB		
   139 						mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   140
   141 						mva #19 $4001+[bcb_vbxe&$3fff]
   142 						mva sprite_ad0,x $4006+[bcb_vbxe&$3fff]			;adres ostatniego rysowania duszka
   143 						mva sprite_ad1,x $4007+[bcb_vbxe&$3fff]
   144 						
   145 						mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   146 						sta sprite_draw,x
   147 						jsr blit1  */
   147
   148 						
   149 2E12 A9 00 9D 80 2B			mva #0 sprite_draw,x
   150 						
   151 2E17 CA			@		dex
   152 2E18 10 F3				bpl @-1	
   153 						
   154 2E1A A0 5D				ldy #$5d
   155 2E1C A9 00 91 B9				mva	#0	(fx_ptr),y	; wylacz pamiec vbxe
   156 						
   157 = 2E20			@		equ *		
   158 2E20			hide_sprite1
   159 2E20 A9 00				lda #0
   160 2E22 8D D5 24				sta hposp0s
   161 2E25 8D 00 D0				sta hposp0
   162 2E28 8D DA 24				sta hposp1s
   163 2E2B 8D 01 D0				sta hposp1
   164 2E2E 8D DF 24				sta hposp2s
   165 2E31 8D 02 D0				sta hposp2
   166 2E34 8D E4 24				sta hposp3s
   167 2E37 8D 03 D0				sta hposp3
   168 2E3A 8D FD 24				sta hposm0s
   169 2E3D 8D 04 D0				sta hposm0
   170 2E40 8D 02 25				sta hposm1s
   171 2E43 8D 05 D0				sta hposm1
   172 2E46 8D 07 25				sta hposm2s
   173 2E49 8D 06 D0				sta hposm2
   174 2E4C 8D 0C 25				sta hposm3s
   175 2E4F 8D 07 D0				sta hposm3
   176 2E52 60					rts
   177
   178
   179 				/*		
   180 				zmaz_bombeX
   181 						ldy	#$5d	; MEMB		
   182 						mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   183 						
   184 						mva #19 $4001+[bcb_vbxe&$3fff]	;pusty klocek
   185 						mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   186 						sta bomba_zmiana,x
   187 						mva bomba_ad0,x $4006+[bcb_vbxe&$3fff]			;pozycja bomby
   188 						mva bomba_ad1,x $4007+[bcb_vbxe&$3fff]
   189 						jsr blit1		
   190 						
   191 						
   192 						ldy #$5d
   193 						lda #0
   194 						sta (fx_ptr),y		;wylacz pamiec vbxe
   195 						rts */
   195
   196 						
   197 2E53			zmaz_bomby
   198 2E53 A0 5D				ldy	#$5d	; MEMB		
   199 2E55 A9 9C 91 B9				mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   200 						
   201 2E59 A2 17				ldx #23
   202 2E5B BD 8A 26		@		lda bomba_x,x
   203 2E5E D0 0A				bne @+
   204 2E60 BD C2 27				lda bomba_score_licznik,x
   205 2E63 D0 05				bne @+
   206 2E65 BD 0A 28				lda bomba_zmiana,x
   207 2E68 F0 1D				beq @+1		
   208 2E6A			@		
   209 2E6A A9 00				lda #0
   210 2E6C 9D 0A 28				sta bomba_zmiana,x
   211 2E6F 9D C2 27				sta bomba_score_licznik,x
   212 2E72 BD DA 27 8D 06 4A			mva bomba_ad0,x $4006+[bcb3_vbxe&$3fff]			;pozycja bomby
   213 2E78 8D 00 4A				sta $4000+[bcb3_vbxe&$3fff]
   214 2E7B BD F2 27 8D 07 4A			mva bomba_ad1,x $4007+[bcb3_vbxe&$3fff]
   215 2E81 8D 01 4A				sta $4001+[bcb3_vbxe&$3fff]
   216 2E84 20 62 30				jsr blit3
   217
   218
   219
   220 				/*		mva #19 $4001+[bcb_vbxe&$3fff]	;pusty klocek
   221 						mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   222 						sta bomba_zmiana,x
   223 						sta bomba_score_licznik,x
   224 						
   225 						mva bomba_ad0,x $4006+[bcb_vbxe&$3fff]			;pozycja bomby
   226 						mva bomba_ad1,x $4007+[bcb_vbxe&$3fff]
   227 						jsr blit1  */
   227
   228 						
   229 2E87 CA			@		dex
   230 2E88 10 D1				bpl @-2
   231 						
   232 2E8A A0 5D				ldy #$5d
   233 2E8C A9 00				lda #0
   234 2E8E 91 B9				sta (fx_ptr),y		;wylacz pamiec vbxe
   235 2E90 60					rts
   236 						
   237 2E91			zmaz_duszki		
   238 2E91 A0 5D				ldy	#$5d	; MEMB		
   239 2E93 A9 9C 91 B9				mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   240
   241 2E97 A9 02 8D 82 48			mva #2 $4002+[bcb_vbxe&$3fff]
   242 2E9C A2 00				ldx #0
   243 2E9E BD 80 2B		@		lda sprite_draw,x
   244 2EA1 F0 1D				beq @+
   245 						
   246 2EA3 8A					txa
   247 2EA4 8D 81 48				sta $4001+[bcb_vbxe&$3fff]				;Å¼rÃ³dÅ‚o
   248
   249 2EA7 BD 70 2B 8D 86 48			mva sprite_ad0,x $4006+[bcb_vbxe&$3fff]			;adres ostatniego rysowania duszka
   250 2EAD BD 78 2B 8D 87 48			mva sprite_ad1,x $4007+[bcb_vbxe&$3fff]			;cel
   251 						
   252 2EB3 A9 00 8D 94 48			mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   253 2EB8 20 2A 30				jsr blit1						;zmaz	
   254 					
   255 2EBB A9 00 9D 80 2B			mva #0 sprite_draw,x
   256 2EC0 E8			@		inx
   257 2EC1 E0 08				cpx #8
   258 2EC3 90 D9				bcc @-1
   259 						
   260 2EC5 A0 5D				ldy #$5d
   261 2EC7 A9 00				lda #0
   262 2EC9 91 B9				sta (fx_ptr),y		;wylacz pamiec vbxe
   263 2ECB 60					rts			
   264
   265 = 2ECB			tab_bonus equ *-1
   266 2ECC 63 64 65 66				dta b(99,100,101,102)		;x2,x3,x4,x5
   267 						
   268 2ED0			show_vbxe_sprites
   269 				;zmazywanie	
   270 2ED0 A0 5D				ldy	#$5d	; MEMB		
   271 2ED2 A9 9C 91 B9				mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   272
   273 2ED6 A9 02 8D 82 48			mva #2 $4002+[bcb_vbxe&$3fff]
   274 2EDB A2 00				ldx #0
   275 2EDD BD 80 2B		@		lda sprite_draw,x
   276 2EE0 F0 1D				beq @+
   277 						
   278 				;pusty klocek
   279 2EE2 8A					txa
   280 2EE3 8D 81 48				sta $4001+[bcb_vbxe&$3fff]				;Å¼rÃ³dÅ‚o
   281
   282 2EE6 BD 70 2B 8D 86 48			mva sprite_ad0,x $4006+[bcb_vbxe&$3fff]			;adres ostatniego rysowania duszka
   283 2EEC BD 78 2B 8D 87 48			mva sprite_ad1,x $4007+[bcb_vbxe&$3fff]			;cel
   284 						
   285 2EF2 A9 00 8D 94 48			mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   286 2EF7 20 2A 30				jsr blit1						;zmaz	
   287 					
   288 2EFA A9 00 9D 80 2B			mva #0 sprite_draw,x
   289 2EFF E8			@		inx
   290 2F00 E0 08				cpx #8
   291 2F02 90 D9				bcc @-1
   292 						
   293 						
   294 2F04 A9 00 8D 82 48			mva #0 $4002+[bcb_vbxe&$3fff]
   295 						
   296 				//bomby
   297 2F09 A2 17				ldx #23
   298 2F0B BD 0A 28		@		lda bomba_zmiana,x
   299 2F0E F0 70				beq nxb
   300
   301 						
   302
   303
   304 						;mva #19 $4001+[bcb_vbxe&$3fff]	;pusty klocek
   305 						;mva #0 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;zmazywanie ,przepisuje bez sprawdzania
   306 2F10 A9 00				lda #0
   307 2F12 9D 0A 28				sta bomba_zmiana,x
   308 2F15 BD DA 27 8D 06 4A			mva bomba_ad0,x $4006+[bcb3_vbxe&$3fff]			;pozycja bomby
   309 2F1B 8D 00 4A				sta $4000+[bcb3_vbxe&$3fff]
   310 2F1E 8D 86 48				sta $4006+[bcb_vbxe&$3fff]	
   311 2F21 BD F2 27 8D 07 4A			mva bomba_ad1,x $4007+[bcb3_vbxe&$3fff]
   312 2F27 8D 01 4A				sta $4001+[bcb3_vbxe&$3fff]
   313 2F2A 8D 87 48				sta $4007+[bcb_vbxe&$3fff]
   314 2F2D 20 62 30				jsr blit3
   315 						
   316 2F30 BD 1A 27				lda bomba_anim_faza,x					;jaki ksztalt
   317 2F33 30 4B				bmi nxb									;nie ma czego rysowac
   318 						
   319 2F35 C9 5A				cmp #90				;=bonus 200
   320 2F37 D0 3C				bne normal
   321 						
   322 				;rysujemy bonus
   323 2F39 AC 14 D8				ldy bonus
   324 2F3C F0 37				beq normal					;nie ma bonusu
   325 						
   326 2F3E 8D 81 48				sta $4001+[bcb_vbxe&$3fff]				;200 punktÃ³w
   327 2F41 A9 40 8D 80 48			mva #$40 $4000+[bcb_vbxe&$3fff]		;pomiÅ„ 4 pierwsze puste linie (wyÅ¼ej)
   328 2F46 A9 05 8D 8E 48			mva #6-1 $400e+[bcb_vbxe&$3fff]		;wysokosc 6 linii
   329 2F4B A9 01 8D 94 48			mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;teraz rysujemy
   330 2F50 20 2A 30				jsr blit1
   331 2F53 AC 14 D8				ldy bonus
   332 2F56 B9 CB 2E				lda tab_bonus,y
   333 2F59 8D 81 48				sta $4001+[bcb_vbxe&$3fff]
   334 2F5C 18					clc
   335 2F5D BD F2 27				lda bomba_ad1,x
   336 2F60 69 08				adc #8
   337 2F62 8D 87 48				sta $4007+[bcb_vbxe&$3fff]		;rysuj 8 linii niÅ¼ej
   338 2F65 20 2A 30				jsr blit1
   339 2F68 A9 00 8D 80 48			mva #0 $4000+[bcb_vbxe&$3fff]		;przywrÃ³Ä‡ mlodszy bajt ÅºrÃ³dÅ‚a
   340 2F6D A9 0F 8D 8E 48			mva #16-1 $400e+[bcb_vbxe&$3fff]		;przywrÃ³Ä‡ wysokosc 16 linii	
   341 2F72 4C 80 2F				jmp nxb
   342 						
   343 2F75			normal		
   344 2F75 8D 81 48				sta $4001+[bcb_vbxe&$3fff]
   345 2F78 A9 01 8D 94 48			mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;teraz rysujemy
   346 2F7D 20 2A 30				jsr blit1
   347 						
   348 2F80 CA			nxb		dex
   349 2F81 10 88				bpl @-	
   350 						
   351 					
   352 2F83 A2 07				ldx #7	
   353 				;zapamietaj tlo pod duszkiem	
   354 2F85 BD 00 2B		@		lda sprite_x,x
   355 2F88 F0 44				beq @+
   356 							
   357 2F8A 38					sec
   358 2F8B E9 40				sbc #$40
   359 2F8D 48					pha
   360 2F8E BD 08 2B				lda sprite_dx,x
   361 2F91 0A					asl
   362 2F92 68					pla
   363 2F93 2A					rol
   364 2F94 8D 86 48				sta $4006+[bcb_vbxe&$3fff]
   365 2F97 8D 00 49				sta $4000+[bcb1_vbxe&$3fff]
   366 2F9A 9D 70 2B				sta sprite_ad0,x
   367 2F9D A9 01 9D 80 2B			mva #1 sprite_draw,x
   368 2FA2 38					sec
   369 2FA3 BD 10 2B				lda sprite_y,x
   370 2FA6 E9 10				sbc #$10
   371 2FA8 8D 87 48				sta $4007+[bcb_vbxe&$3fff]
   372 2FAB 8D 01 49				sta $4001+[bcb1_vbxe&$3fff]
   373 2FAE 9D 78 2B				sta sprite_ad1,x
   374 2FB1 8A					txa
   375 2FB2 8D 07 49				sta $4007+[bcb1_vbxe&$3fff]		;gdzie zapisac tlo pod duszkiem
   376 2FB5 20 46 30				jsr blit2
   377
   378 2FB8 20 D8 2F				jsr score_paraliz
   379 2FBB F0 11				beq @+
   380
   381 				;rysowanie		
   382 						
   383 2FBD A9 01 8D 94 48			mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]		;teraz rysowania
   384 2FC2 BC 20 2B				ldy sprite_shape,x
   385 2FC5 B9 7E 30				lda tab_vbxe_shape,y
   386 2FC8 8D 81 48				sta $4001+[bcb_vbxe&$3fff]
   387 2FCB 20 2A 30				jsr blit1
   388 						
   389 2FCE CA			@		dex
   390 2FCF 10 B4				bpl @-1
   391 					
   392 2FD1 A0 5D				ldy #$5d
   393 2FD3 A9 00				lda #0
   394 2FD5 91 B9				sta (fx_ptr),y		;wylacz pamiec vbxe
   395 2FD7 60					rts
   396
   397 2FD8			score_paraliz
   398 2FD8 BD 58 2B				lda sprite_typ,x
   399 2FDB 30 03				bmi *+5
   400 2FDD A9 01				lda #1
   401 2FDF 60					rts
   402
   403 2FE0 29 7F				and #127
   404 2FE2 AC 14 D8				ldy bonus
   405 2FE5 F0 35				beq normal1					;nie ma bonusu
   406 						
   407 2FE7 8D 81 48				sta $4001+[bcb_vbxe&$3fff]				;200 punktÃ³w
   408 2FEA A9 40 8D 80 48			mva #$40 $4000+[bcb_vbxe&$3fff]		;pomiÅ„ 4 pierwsze puste linie (wyÅ¼ej)
   409 2FEF A9 05 8D 8E 48			mva #6-1 $400e+[bcb_vbxe&$3fff]		;wysokosc 6 linii
   410 2FF4 A9 01 8D 94 48			mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;teraz rysujemy
   411 2FF9 20 2A 30				jsr blit1
   412 2FFC AC 14 D8				ldy bonus
   413 2FFF B9 CB 2E				lda tab_bonus,y
   414 3002 8D 81 48				sta $4001+[bcb_vbxe&$3fff]
   415 3005 18					clc
   416 3006 BD 78 2B				lda sprite_ad1,x
   417 3009 69 08				adc #8
   418 300B 8D 87 48				sta $4007+[bcb_vbxe&$3fff]		;rysuj 8 linii niÅ¼ej
   419 300E 20 2A 30				jsr blit1	
   420 3011 A9 0F 8D 8E 48			mva #16-1 $400e+[bcb_vbxe&$3fff]		;przywrÃ³Ä‡ wysokosc 16 linii;  z=0
   421 3016 A9 00 8D 80 48			mva #0 $4000+[bcb_vbxe&$3fff]		;przywrÃ³Ä‡ mlodszy bajt ÅºrÃ³dÅ‚a
   422 301B 60					rts
   423 						
   424 301C			normal1		
   425 301C 8D 81 48				sta $4001+[bcb_vbxe&$3fff]
   426 301F A9 01 8D 94 48			mva #1 $4000+bcb_len-1+[bcb_vbxe&$3fff]			;teraz rysujemy
   427 3024 20 2A 30				jsr blit1		;z=1
   428 3027 A9 00				lda #0
   429 3029 60					rts
   430 						
   431 						
   432 302A			blit1	
   433 302A A0 53				ldy	#$53	; BLITTER_BUSY
   434 302C B1 B9		@		lda (fx_ptr),y
   435 302E D0 FC				bne @-
   436
   437 3030 A0 50				ldy	#$50	; BL_ADR0
   438 3032 A9 80 91 B9 C8			mva	#bcb_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   439 3037 A9 08 91 B9 C8			mva	#[bcb_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   440 303C A9 07 91 B9 C8			mva	#bcb_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   441 3041 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   442 3045 60					rts
   443 						
   444 3046			blit2
   445 3046 A0 53				ldy	#$53	; BLITTER_BUSY
   446 3048 B1 B9		@		lda (fx_ptr),y
   447 304A D0 FC				bne @-
   448
   449 304C A0 50				ldy	#$50	; BL_ADR0
   450 304E A9 00 91 B9 C8			mva	#bcb1_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   451 3053 A9 09 91 B9 C8			mva	#[bcb1_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   452 3058 A9 07 91 B9 C8			mva	#bcb1_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   453 305D A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   454 3061 60					rts	
   455
   456 3062			blit3
   457 3062 A0 53				ldy	#$53	; BLITTER_BUSY
   458 3064 B1 B9		@		lda (fx_ptr),y
   459 3066 D0 FC				bne @-
   460
   461 3068 A0 50				ldy	#$50	; BL_ADR0
   462 306A A9 00 91 B9 C8			mva	#bcb3_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   463 306F A9 0A 91 B9 C8			mva	#[bcb3_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   464 3074 A9 07 91 B9 C8			mva	#bcb3_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   465 3079 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj		
   466 307D 60					rts
   467
   468 307E			tab_vbxe_shape	
   469 307E 1C 1D 1E 1D 1F 20 + 		dta b(28,29,30,29,31,32,33,32,34,35,36,35)
   470 308A 04 05 06 07 00 01 + 		dta b(4,5,6,7,0,1,2,3,18,11,12,13,8,9,10,0,14,15,16,17)		;31
   471 309E 29 2A 2B 2C 2D 2E + 		dta b(41,42,43,44,45,46,47,48,49,0,0,0,37,38,39,40)			;47
   472 30AE 4D 4E 4F 50 14 15 + 		dta b(77,78,79,80,20,21,0,0,25,26,27,0,22,23,24,0)			;63
   473 30BE 49 4A 4B 4C 3D 3E + 		dta b(73,74,75,76,61,62,63,64,65,66,67,68,69,70,71,72)		;79
   474 30CE 39 3A 3B 3C 00 00 + 		dta b(57,58,59,60,0,0,0,0,50,51,52,53,54,55,56,0)			;95
   475 30DE 51 52 53 54 55 56 + 		dta b(81,82,83,84,85,86,0,0,103,104,105,106)				;107
   476 30EA 00 00 00 00 78 79 + 		dta b(0,0,0,0,120,121,122,123,124,125,126,127)				;119  czapka=112
   477 				/*
   478 				//narysuj wszystkie duszki
   479 				show_sprites	
   480 						jsr show_vbxe_sprites
   481 						
   482 						lda #0	
   483 						sta blok_x01+1
   484 						sta blok_x23+1
   485 						sta hposp1s
   486 						sta hposp0s
   487 						sta hposp3s
   488 						sta hposp2s
   489 						
   490 						mva #-1 pom0a
   491 				@		inc pom0a
   492 						ldx pom0a
   493 						ldy tab_sortowanie,x
   494 						ldx tab_nr_bloku,y
   495 						bpl *+3
   496 						rts
   497 						lda tab_nr_pary,y
   498 						bne @+
   499 						
   500 						jsr print_sprite01
   501 						lda tab_nr_bloku,y
   502 						cmp #1
   503 						bne @-
   504 						lda blok_x01+1			;player 0 i 1
   505 						sta hposp1s
   506 						sta hposp0s
   507 						lda blok_c0+1
   508 						sta colpm0s
   509 						lda blok_c1+1
   510 						sta colpm1s		
   511 						jmp @-
   512 						
   513 						
   514 				@		jsr print_sprite23
   515 						lda tab_nr_bloku,y
   516 						cmp #1
   517 						bne @-1
   518 						
   519 						lda blok_x23+1			;player 2 i 3
   520 						sta hposp3s
   521 						sta hposp2s
   522 						lda blok_c2+1
   523 						sta colpm2s
   524 						lda blok_c3+1
   525 						sta colpm3s
   526 						jmp @-1
   527 						
   528 						
   529
   530
   531
   532
   533 				print_sprite01
   534 						tya
   535 						bne *+3
   536 						rts
   537 						lda blok_x01+3,x	
   538 						bne *+5
   539 						inc blok_x01+3,x
   540 								
   541 						lda sprite_x,y		;sprite 0 i 1
   542 						sta blok_x01,x
   543
   544 						lda sprite_c0,y
   545 						sta blok_c0,x
   546 						lda sprite_c1,y
   547 						sta blok_c1,x
   548 						
   549 						ldx sprite_shape,y
   550 						
   551 						lda shape_bank,x
   552 						sta portb
   553
   554 						lda shape_tab01,x
   555 						sta _psp1+1
   556 						lda shape_tab01+128,x
   557 						sta _psp1+2		
   558
   559 						ldx sprite_y,y
   560 				_psp1	equ *		
   561 						jsr $ffff
   562
   563 						mva #BANK_off portb
   564 						
   565 						ldx tab_duch_dy,y
   566 						lda tab_skok01,x
   567 						ldx sprite_y,y
   568 						
   569 						sta l01
   570 						lda #0
   571 				l01	equ *+1		
   572 						jmp dy0 
   573
   574 				print_sprite23
   575 						lda #2
   576 						ora blok_status,x			;zajmij wybranego duszka w statusie
   577 						sta blok_status,x
   578 						lda #2
   579 						ora blok_status+2,x		
   580 						sta blok_status+2,x
   581
   582
   583 						lda blok_x23+3,x
   584 						bne *+5
   585 						inc blok_x23+3,x
   586 										
   587 						lda sprite_x,y			;sprite 2 i 3
   588 						sta blok_x23,x
   589
   590 						lda sprite_c0,y
   591 						sta blok_c2,x
   592 						lda sprite_c1,y
   593 						sta blok_c3,x	
   594 						
   595 						ldx sprite_shape,y
   596 						
   597 						lda shape_bank,x
   598 						sta portb
   599
   600 						lda shape_tab23,x
   601 						sta _psp2+1
   602 						lda shape_tab23+128,x
   603 						sta _psp2+2
   604 						
   605
   606 						ldx sprite_y,y
   607 				_psp2	equ *		
   608 						jsr $ffff	
   609
   610 						mva #BANK_off portb
   611 						
   612
   613 						ldx tab_duch_dy,y
   614 						lda tab_skok23,x
   615 						ldx sprite_y,y
   616
   617 						
   618 						sta l23
   619 						lda #0
   620 				l23	equ *+1		
   621 						jmp dy0b
   622
   623
   624
   625 						.align	
   626 				//ksztalty dla duszkÃ³w		
   627 				shape_tab01
   628 						dta b(<bird0a,<bird1a,<bird2a,<bird1a)								;0 ptaszek w lewo
   629 						dta b(<bird3a,<bird4a,<bird5a,<bird4a)								;4 ptaszek gÃ³ra/dol
   630 						dta b(<bird6a,<bird7a,<bird8a,<bird7a)								;8 ptaszek w prawo
   631 						dta b(<jack_left0a,<jack_left1a,<jack_left2a,<jack_left3a)			;12 jack idzie w lewo
   632 						dta b(<jack_right0a,<jack_right1a,<jack_right2a,<jack_right3a)		;16 jack idzie w prawo
   633 						dta b(<jack_stoi0a,<jack_dol0a,<jack_dol1a,<jack_dol2a)				;20 jack stoi w miejscu,21 dol_srodek,22 dol_prawo,23 dol_lewo
   634 						dta b(<jack_gora0a,<jack_gora1a,<jack_gora2a,0)					;24 jack gora_srodek,25 fora_prawo,26_gora_lewo
   635 						dta b(<jack_spada0a,<jack_spada1a,<jack_upada0a,<jack_upada1a)		;28 jack spada w dol, 30 jack upada na platforme
   636 						dta b(0,0,0,0)						;32 czapka
   637 						dta b(<radar0a,<radar1a,<radar2a,<radar3a)							;36 radar
   638 						dta b(<ufo0a,<ufo1a,<ufo2a,<ufo3a)									;40 ufo
   639 						dta b(<globus0a,<globus1a,<globus2a,<globus3a)						;44 globus
   640 						dta b(<explo0a,<explo1a,<explo2a,<explo3a)							;48 explo
   641 						dta b(<mumia_spada0a,<mumia_spada1a,0,0)						;52 mumia spada
   642 						dta b(<mumia_lewo0a,<mumia_lewo1a,<mumia_lewo2a,0)				;56 mumia_lewo
   643 						dta b(<mumia_prawo0a,<mumia_prawo1a,<mumia_prawo2a,0)				;60 mumia_prawo
   644 						dta b(<przemiana0a,<przemiana1a,<przemiana2a,<przemiana3a)			;64 przemiana
   645 						dta b(<bonus0a,<bonus1a,<bonus2a,<bonus3a)							;68 bonus B
   646 						dta b(<extra0a,<extra1a,<extra2a,<extra3a)							;72 extra_life E
   647 						dta b(<paraliz0a,<paraliz1a,<paraliz2a,<paraliz3a)					;76 paraliÅ¼ P
   648 						dta b(<buzka3a,<buzka2a,<buzka1a,<buzka0a)							;80 buzki
   649 						dta b(<oko0a,<oko1a,<oko2a,<oko3a)									;84 oko			;28 oko
   650
   651 						
   652 						:40 dta b(0)  
   653
   654 						
   655 				;shape_tab
   656 						dta b(>bird0a,>bird1a,>bird2a,>bird1a)								;0 ptaszek w lewo
   657 						dta b(>bird3a,>bird4a,>bird5a,>bird4a)								;4 ptaszek gÃ³ra/dol
   658 						dta b(>bird6a,>bird7a,>bird8a,>bird7a)								;8 ptaszek w prawo
   659 						dta b(>jack_left0a,>jack_left1a,>jack_left2a,>jack_left3a)			;12 jack idzie w lewo
   660 						dta b(>jack_right0a,>jack_right1a,>jack_right2a,>jack_right3a)		;16 jack idzie w prawo
   661 						dta b(>jack_stoi0a,>jack_dol0a,>jack_dol1a,>jack_dol2a)				;20 jack stoi w miejscu,21 dol_srodek,22 dol_prawo,23 dol_lewo
   662 						dta b(>jack_gora0a,>jack_gora1a,>jack_gora2a,0)					;24 jack gora_srodek,25 fora_prawo,26_gora_lewo
   663 						dta b(>jack_spada0a,>jack_spada1a,>jack_upada0a,>jack_upada1a)		;28 jack spada w dol, 30 jack upada na platforme
   664 						dta b(0,0,0,0)						;32 czapka
   665 						dta b(>radar0a,>radar1a,>radar2a,>radar3a)							;36 radar
   666 						dta b(>ufo0a,>ufo1a,>ufo2a,>ufo3a)									;40 ufo
   667 						dta b(>globus0a,>globus1a,>globus2a,>globus3a)						;44 globus
   668 						dta b(>explo0a,>explo1a,>explo2a,>explo3a)							;48 explo
   669 						dta b(>mumia_spada0a,>mumia_spada1a,0,0)						;52 mumia spada
   670 						dta b(>mumia_lewo0a,>mumia_lewo1a,>mumia_lewo2a,0)				;56 mumia_lewo
   671 						dta b(>mumia_prawo0a,>mumia_prawo1a,>mumia_prawo2a,0)				;60 mumia_prawo
   672 						dta b(>przemiana0a,>przemiana1a,>przemiana2a,>przemiana3a)			;64 przemiana
   673 						dta b(>bonus0a,>bonus1a,>bonus2a,>bonus3a)							;68 bonus B
   674 						dta b(>extra0a,>extra1a,>extra2a,>extra3a)							;72 extra_life E
   675 						dta b(>paraliz0a,>paraliz1a,>paraliz2a,>paraliz3a)					;76 paraliÅ¼ P
   676 						dta b(>buzka3a,>buzka2a,>buzka1a,>buzka0a)							;80 buzki
   677 						dta b(>oko0a,>oko1a,>oko2a,>oko3a)	
   678 						
   679 					
   680
   681 						
   682 						:40 dta b(0) 
   683
   684 				shape_tab23
   685 						dta b(<bird0b,<bird1b,<bird2b,<bird1b)								;0 ptaszek w lewo
   686 						dta b(<bird3b,<bird4b,<bird5b,<bird4b)								;4 ptaszek gÃ³ra/dol
   687 						dta b(<bird6b,<bird7b,<bird8b,<bird7b)								;8 ptaszek w prawo
   688 						dta b(0,0,0,0)			;12 jack idzie w lewo
   689 						dta b(0,0,0,0)		;16 jack idzie w prawo
   690 						dta b(0,0,0,0)				;20 jack stoi w miejscu,21 dol_srodek,22 dol_prawo,23 dol_lewo
   691 						dta b(0,0,0,0)					;24 jack gora_srodek,25 fora_prawo,26_gora_lewo
   692 						dta b(0,0,0,0)		;28 jack spada w dol, 30 jack upada na platforme
   693 						dta b(0,0,0,0)						;32 czapka
   694 						dta b(<radar0b,<radar1b,<radar2b,<radar3b)							;36 radar
   695 						dta b(<ufo0b,<ufo1b,<ufo2b,<ufo3b)									;40 ufo
   696 						dta b(<globus0b,<globus1b,<globus2b,<globus3b)						;44 globus
   697 						dta b(<explo0b,<explo1b,<explo2b,<explo3b)							;48 explo
   698 						dta b(<mumia_spada0b,<mumia_spada1b,0,0)						;52 mumia spada
   699 						dta b(<mumia_lewo0b,<mumia_lewo1b,<mumia_lewo2b,0)				;56 mumia_lewo
   700 						dta b(<mumia_prawo0b,<mumia_prawo1b,<mumia_prawo2b,0)				;60 mumia_prawo
   701 						dta b(<przemiana0b,<przemiana1b,<przemiana2b,<przemiana3b)			;64 przemiana
   702 						dta b(<bonus0b,<bonus1b,<bonus2b,<bonus3b)							;68 bonus B
   703 						dta b(<extra0b,<extra1b,<extra2b,<extra3b)							;72 extra_life E
   704 						dta b(<paraliz0b,<paraliz1b,<paraliz2b,<paraliz3b)					;76 paraliÅ¼ P
   705 						dta b(<buzka3b,<buzka2b,<buzka1b,<buzka0b)							;80 buzki
   706 						dta b(<oko0b,<oko1b,<oko2b,<oko3b)									;84 oko			;28 oko		
   707 						:40 dta b(0) 
   708 						
   709 						
   710 						dta b(>bird0b,>bird1b,>bird2b,>bird1b)								;0 ptaszek w lewo
   711 						dta b(>bird3b,>bird4b,>bird5b,>bird4b)								;4 ptaszek gÃ³ra/dol
   712 						dta b(>bird6b,>bird7b,>bird8b,>bird7b)								;8 ptaszek w prawo
   713 						dta b(0,0,0,0)			;12 jack idzie w lewo
   714 						dta b(0,0,0,0)		;16 jack idzie w prawo
   715 						dta b(0,0,0,0)				;20 jack stoi w miejscu,21 dol_srodek,22 dol_prawo,23 dol_lewo
   716 						dta b(0,0,0,0)					;24 jack gora_srodek,25 fora_prawo,26_gora_lewo
   717 						dta b(0,0,0,0)		;28 jack spada w dol, 30 jack upada na platforme
   718 						dta b(0,0,0,0)						;32 czapka
   719 						dta b(>radar0b,>radar1b,>radar2b,>radar3b)							;36 radar
   720 						dta b(>ufo0b,>ufo1b,>ufo2b,>ufo3b)									;40 ufo
   721 						dta b(>globus0b,>globus1b,>globus2b,>globus3b)						;44 globus
   722 						dta b(>explo0b,>explo1b,>explo2b,>explo3b)							;48 explo
   723 						dta b(>mumia_spada0b,>mumia_spada1b,0,0)						;52 mumia spada
   724 						dta b(>mumia_lewo0b,>mumia_lewo1b,>mumia_lewo2b,0)				;56 mumia_lewo
   725 						dta b(>mumia_prawo0b,>mumia_prawo1b,>mumia_prawo2b,0)				;60 mumia_prawo
   726 						dta b(>przemiana0b,>przemiana1b,>przemiana2b,>przemiana3b)			;64 przemiana
   727 						dta b(>bonus0b,>bonus1b,>bonus2b,>bonus3b)							;68 bonus B
   728 						dta b(>extra0b,>extra1b,>extra2b,>extra3b)							;72 extra_life E
   729 						dta b(>paraliz0b,>paraliz1b,>paraliz2b,>paraliz3b)					;76 paraliÅ¼ P
   730 						dta b(>buzka3b,>buzka2b,>buzka1b,>buzka0b)							;80 buzki
   731 						dta b(>oko0b,>oko1b,>oko2b,>oko3b)									;84 oko			;28 oko		
   732 						:40 dta b(0)  
   733
   734 						
   735 				shape_bank
   736 						dta b(BANK0,BANK0,BANK0,BANK0)
   737 						dta b(BANK0,BANK0,BANK0,BANK0)
   738 						dta b(BANK0,BANK0,BANK0,BANK0)
   739 						dta b(BANK0,BANK0,BANK0,BANK0)
   740 						dta b(BANK0,BANK0,BANK0,BANK0)
   741 						dta b(BANK0,BANK0,BANK0,BANK0)
   742 						dta b(BANK0,BANK0,BANK0,BANK0)
   743 						dta b(BANK0,BANK0,BANK0,BANK0)
   744 						dta b(BANK1,BANK1,BANK1,BANK1)
   745 						dta b(BANK0,BANK0,BANK0,BANK0)
   746 						dta b(BANK0,BANK0,BANK0,BANK0)
   747 						dta b(BANK0,BANK0,BANK0,BANK0)
   748 						dta b(BANK0,BANK0,BANK0,BANK0)
   749 						dta b(BANK0,BANK0,BANK0,BANK0)
   750 						dta b(BANK0,BANK0,BANK0,BANK0)
   751 						dta b(BANK0,BANK0,BANK0,BANK0)
   752 						dta b(BANK0,BANK0,BANK0,BANK0)
   753 						dta b(BANK0,BANK0,BANK0,BANK0)
   754 						dta b(BANK0,BANK0,BANK0,BANK0)
   755 						dta b(BANK0,BANK0,BANK0,BANK0)
   756 						dta b(BANK1,BANK1,BANK1,BANK1)
   757 						dta b(BANK1,BANK1,BANK1,BANK1)
   758 						
   759 						.align
   760 						
   761 						
   762 				tab_skok01	dta <dy0,<dy1,<dy2,<dy3,<dy4,<dy5,<dy6,<dy7		
   763
   764 						
   765 				dy0		
   766 						sta sprites+$400+$11,x
   767 						sta sprites+$500+$11,x
   768
   769 						sta sprites+$400+$10,x
   770 						sta sprites+$500+$10,x
   771 							
   772 						sta sprites+$400-8,x
   773 						sta sprites+$400-7,x
   774 						sta sprites+$400-6,x
   775 						sta sprites+$400-5,x
   776 						sta sprites+$400-4,x
   777 						sta sprites+$400-3,x
   778 						sta sprites+$400-2,x
   779 						sta sprites+$400-1,x
   780 						
   781 						sta sprites+$500-8,x		
   782 						sta sprites+$500-7,x
   783 						sta sprites+$500-6,x
   784 						sta sprites+$500-5,x
   785 						sta sprites+$500-4,x
   786 						sta sprites+$500-3,x
   787 						sta sprites+$500-2,x
   788 						sta sprites+$500-1,x
   789 						
   790 						rts
   791 						
   792 				dy1		
   793 						sta sprites+$400-9,x
   794 						sta sprites+$500-9,x
   795 						jmp dy0+6
   796 						
   797 				dy2	
   798 						sta sprites+$400+$13,x
   799 						sta sprites+$500+$13,x
   800 						sta sprites+$400+$14,x
   801 						sta sprites+$500+$14,x
   802 						sta sprites+$400+$15,x
   803 						sta sprites+$500+$15,x
   804 						sta sprites+$400+$16,x
   805 						sta sprites+$500+$16,x
   806 						sta sprites+$400+$17,x
   807 						sta sprites+$500+$17,x
   808 						jmp dy7+30
   809 						
   810 				dy3	
   811 						sta sprites+$400+$13,x
   812 						sta sprites+$500+$13,x
   813 						sta sprites+$400+$14,x
   814 						sta sprites+$500+$14,x
   815 						sta sprites+$400+$15,x
   816 						sta sprites+$500+$15,x
   817 						sta sprites+$400+$16,x
   818 						sta sprites+$500+$16,x
   819 						jmp dy7+24
   820 						
   821 				dy4
   822 						sta sprites+$400+$13,x
   823 						sta sprites+$500+$13,x
   824 						sta sprites+$400+$14,x
   825 						sta sprites+$500+$14,x
   826 						sta sprites+$400+$15,x
   827 						sta sprites+$500+$15,x
   828 						jmp dy7+18		
   829 						
   830 						
   831 				dy5	
   832 						cpx #POSY_MAX-32
   833 						bcs dy7+12
   834 						sta sprites+$400+$13,x
   835 						sta sprites+$500+$13,x
   836 						sta sprites+$400+$14,x
   837 						sta sprites+$500+$14,x
   838 						jmp dy7+12		
   839 						
   840 				dy6		
   841 						sta sprites+$400+$13,x
   842 						sta sprites+$500+$13,x
   843 						jmp dy7+6
   844 						
   845 				dy7
   846 						sta sprites+$400-7,x
   847 						sta sprites+$500-7,x
   848 						sta sprites+$400-6,x
   849 						sta sprites+$500-6,x
   850 						sta sprites+$400-5,x
   851 						sta sprites+$500-5,x
   852 						sta sprites+$400-4,x
   853 						sta sprites+$500-4,x		
   854 						sta sprites+$400-3,x
   855 						sta sprites+$500-3,x
   856 						sta sprites+$400-2,x
   857 						sta sprites+$500-2,x
   858 						sta sprites+$400-1,x		
   859 						sta sprites+$500-1,x
   860 						
   861 						sta sprites+$400+$10,x		
   862 						sta sprites+$400+$11,x
   863 						sta sprites+$400+$12,x
   864 						sta sprites+$500+$10,x		
   865 						sta sprites+$500+$11,x
   866 						sta sprites+$500+$12,x
   867 						rts
   868
   869 						
   870 						.align
   871 						
   872 				tab_skok23	dta <dy0b,<dy1b,<dy2b,<dy3b,<dy4b,<dy5b,<dy6b,<dy7b		
   873
   874 						
   875 				dy0b	
   876 						
   877
   878 						sta sprites+$600+$11,x
   879 						sta sprites+$700+$11,x 
   880 					
   881 						sta sprites+$600+$10,x
   882 						sta sprites+$700+$10,x
   883 						
   884 						sta sprites+$600-8,x
   885 						sta sprites+$600-7,x
   886 						sta sprites+$600-6,x
   887 						sta sprites+$600-5,x
   888 						sta sprites+$600-4,x
   889 						sta sprites+$600-3,x
   890 						sta sprites+$600-2,x
   891 						sta sprites+$600-1,x
   892 						
   893 						sta sprites+$700-8,x		
   894 						sta sprites+$700-7,x
   895 						sta sprites+$700-6,x
   896 						sta sprites+$700-5,x
   897 						sta sprites+$700-4,x
   898 						sta sprites+$700-3,x
   899 						sta sprites+$700-2,x
   900 						sta sprites+$700-1,x
   901 						
   902 						rts
   903 						
   904 				dy1b		
   905 						sta sprites+$600-9,x
   906 						sta sprites+$700-9,x
   907 						jmp dy0b+6
   908 						
   909 						
   910 				dy2b	
   911 						sta sprites+$600+$13,x
   912 						sta sprites+$700+$13,x
   913 						sta sprites+$600+$14,x
   914 						sta sprites+$700+$14,x
   915 						sta sprites+$600+$15,x
   916 						sta sprites+$700+$15,x
   917 						sta sprites+$600+$16,x
   918 						sta sprites+$700+$16,x
   919 						sta sprites+$600+$17,x
   920 						sta sprites+$700+$17,x
   921 						jmp dy7b+30
   922 						
   923 				dy3b	
   924 						sta sprites+$600+$13,x
   925 						sta sprites+$700+$13,x
   926 						sta sprites+$600+$14,x
   927 						sta sprites+$700+$14,x
   928 						sta sprites+$600+$15,x
   929 						sta sprites+$700+$15,x
   930 						sta sprites+$600+$16,x
   931 						sta sprites+$700+$16,x
   932 						jmp dy7b+24
   933 						
   934 				dy4b
   935 						sta sprites+$600+$13,x
   936 						sta sprites+$700+$13,x
   937 						sta sprites+$600+$14,x
   938 						sta sprites+$700+$14,x
   939 						sta sprites+$600+$15,x
   940 						sta sprites+$700+$15,x
   941 						jmp dy7b+18
   942 						
   943 				dy5b	
   944 						sta sprites+$600+$13,x
   945 						sta sprites+$700+$13,x
   946 						sta sprites+$600+$14,x
   947 						sta sprites+$700+$14,x
   948 						jmp dy7b+12		
   949 						
   950 						
   951 				dy6b		
   952 						sta sprites+$600+$13,x
   953 						sta sprites+$700+$13,x
   954 						jmp dy7b+6
   955
   956 				dy7b
   957 						sta sprites+$600-7,x
   958 						sta sprites+$700-7,x
   959 						sta sprites+$600-6,x
   960 						sta sprites+$700-6,x
   961 						sta sprites+$600-5,x
   962 						sta sprites+$700-5,x
   963 						sta sprites+$600-4,x
   964 						sta sprites+$700-4,x		
   965 						sta sprites+$600-3,x
   966 						sta sprites+$700-3,x
   967 						sta sprites+$600-2,x
   968 						sta sprites+$700-2,x
   969 						sta sprites+$600-1,x		
   970 						sta sprites+$700-1,x
   971 						
   972 						sta sprites+$600+$10,x		
   973 						sta sprites+$600+$11,x
   974 						sta sprites+$600+$12,x
   975 						sta sprites+$700+$10,x		
   976 						sta sprites+$700+$11,x
   977 						sta sprites+$700+$12,x
   978 						rts	
   979 						*/
   979
   980 				.endl
   981 						
   437 							;icl 'sprites.asm'			
   438 30F6						icl 'panel.asm'
Source: panel.asm
     1 				//obsluga panelu
     2
     3 30F6			.local panel
     4
     5 30F6			init	
     6 30F6 A2 06				ldx #6
     7 30F8			_podkol		
     8 30F8 A9 F8		@		lda #$f8
     9 30FA 9D E2 FC				sta sprites+$4e2,x
    10 30FD 9D E2 FE				sta sprites+$6e2,x
    11 3100 A9 3D				lda #$3d
    12 3102 9D E2 FB				sta sprites+$3e2,x
    13 3105 A9 FE				lda #$fe
    14 3107 9D E2 FF				sta sprites+$7e2,x
    15 310A CA					dex
    16 310B 10 EB				bpl @-
    17 310D 60					rts
    18
    19 310E 08 11 1A 23 2C	bonus_tab	dta 8,17,26,35,44
    20
    21 3113			bonus_shape	
    22 3113 06 06 FE 66 66 66 + 		.he 06,06,fe,66,66,66,f6,06,0f		;1
    23 311C 06 0F F3 63 66 64 + 		.he 06,0f,f3,63,66,64,fc,0d,0f		;2
    24 3125 06 0F F3 63 66 63 + 		.he 06,0f,f3,63,66,63,f3,0f,06		;3
    25 312E 03 07 F7 6F 6F 6F + 		.he 03,07,f7,6f,6f,6f,f3,03,03		;4
    26 3137 0F 0C FC 6E 63 63 + 		.he 0f,0c,fc,6e,63,63,f3,0f,06		;5
    27
    28
    29 3140			print_bonus
    30 3140 AD 14 D8				lda bonus
    31 3143 0A					asl
    32 3144 09 80				ora #$80
    33 3146 69 03				adc #3
    34 3148 8D 6E 21				sta panel_adr+15
    35 314B 69 01				adc #1
    36 314D 8D 9E 21				sta panel_adr+48+15
    37 						
    38 3150 AE 14 D8				ldx bonus
    39 3153 BC 0E 31				ldy bonus_tab,x
    40 						
    41 3156 A2 08				ldx #8
    42 3158 B9 13 31		@		lda bonus_shape,y			;podkolorowanie
    43 315B 9D E6 FD		_pb0	sta sprites+$5e6,x
    44 315E 88					dey
    45 315F CA					dex
    46 3160 10 F6				bpl @-
    47 3162 60					rts		
    48 						
    49 3163 60					rts
    50
    51 3164			print_round
    52 3164 A0 15		_round	ldy #18+3
    53 3166 AD 0D D8				lda round
    54 3169 4C E4 31				jmp print
    55 						
    56 						
    57 316C			czy_bonus
    58 316C AD 0F D8				lda score+1
    59 316F C5 C1				cmp score1
    60 3171 B0 01				bcs tak
    61 3173 60					rts
    62 3174			tak	
    63 3174 E6 C2				inc bonus_flag			;moÅ¼e pokazaÄ‡ siÄ™ B
    64 3176 18					clc
    65 3177 A5 C1				lda score1
    66 3179 F8					sed
    67 317A 69 05				adc #$05				;nastÄ™pne B za kolejne 5000punktÃ³w
    68 317C 85 C1				sta score1				
    69 317E D8					cld
    70 317F 60					rts  
    71 						
    72 3180			print_score		
    73 3180 20 6C 31				jsr czy_bonus
    74 3183			print_score1
    75 3183 A0 0A				ldy #10
    76 3185 AD 0E D8				lda score
    77 3188 20 E4 31				jsr print
    78 318B AD 0F D8				lda score+1
    79 318E 20 E4 31				jsr print
    80 3191 AD 10 D8				lda score+2
    81 3194 20 E4 31				jsr print	
    82 						
    83 3197 4C A8 31				jmp czy_hscore
    84 						
    85 319A			print_lives
    86 319A A0 1D		_lives	ldy #28+1
    87 319C AD 16 D8				lda lives
    88 319F C9 0A				cmp #10
    89 31A1 90 02				bcc *+4
    90 31A3 A9 09				lda #9
    91 31A5 4C E4 31				jmp print
    92 						
    93 31A8			czy_hscore
    94 31A8 38					sec
    95 31A9 AD 27 D8				lda hscore
    96 31AC ED 0E D8				sbc score
    97 31AF AD 28 D8				lda hscore+1
    98 31B2 ED 0F D8				sbc score+1
    99 31B5 AD 29 D8				lda hscore+2
   100 31B8 ED 10 D8				sbc score+2
   101 31BB 90 01				bcc *+3
   102 31BD 60					rts	
   103 31BE AD 0E D8				lda score
   104 31C1 8D 27 D8				sta hscore
   105 31C4 AD 0F D8				lda score+1
   106 31C7 8D 28 D8				sta hscore+1
   107 31CA AD 10 D8				lda score+2
   108 31CD 8D 29 D8				sta hscore+2
   109 						
   110 31D0			print_hscore
   111 31D0 A0 29				ldy #41
   112 31D2 AD 27 D8				lda hscore
   113 31D5 20 E4 31				jsr print
   114 31D8 AD 28 D8				lda hscore+1
   115 31DB 20 E4 31				jsr print
   116 31DE AD 29 D8				lda hscore+2
   117 31E1 4C E4 31				jmp print
   118 						
   119
   120
   121 31E4			print	
   122 31E4 48					pha
   123 31E5 29 0F				and #$0f
   124 31E7 09 90				ora #$90
   125 31E9 99 8F 21				sta panel_adr+48,y
   126 31EC 68					pla
   127 31ED 4A 4A 4A 4A				:4 lsr
   128 31F1 88					dey
   129 31F2 09 90				ora #$90
   130 31F4 99 8F 21				sta panel_adr+48,y
   131 31F7 88					dey
   132 31F8 60					rts
   133
   134 				.endl
   439 31F9						icl 'poziomy.asm'
Source: poziomy.asm
     1 				//poziomy
     2
     3 31F9			rampa_x		org *+16
     4 3209			rampa_dx	org *+16
     5 3219			rampa_y		org *+16
     6 3229			rampa_dy	org *+16
     7 3239			rampa_x1	org *+16
     8 3249			rampa_dx1	org *+16
     9 3259			rampa_y1	org *+16
    10 3269			rampa_dy1	org *+16
    11
    12 3279			.local POZ
    13 				;typ planszy dla danego level'u
    14 3279			poziom_tab 
    15 3279-3EA7> 00 01 02 03 + 		.he 00,01,02,03,04,00,01,02,03,04
    16 3283 00 01 02 03 04 00 + 		.he 00,01,02,03,04,00,01,02,03,04
    17 328D 00 01 02 03 04 02 + 		.he 00,01,02,03,04,02,02,01,00,04
    18 3297 00 02 03 00 01 03 + 		.he 00,02,03,00,01,03,01,02,00,00
    19 32A1 02 02 01 03 01 02 + 		.he 02,02,01,03,01,02,02,03,01,03
    20 32AB 00 00 01 03 01 00 + 		.he 00,00,01,03,01,00,01,00,02,02
    21 32B5 02 01 03				.he 02,01,03							;63 poziomy
    22 						
    23 				;ukÅ‚ad ramp dla danego poziomu		
    24 32B8			rampa_tabx
    25 32B8 00 01 02 03 04 05 + 		.he 00,01,02,03,04,05,06,07
    26 32C0 08 04 09 0A 0B 0C + 		.he 08,04,09,0a,0b,0c,04,0d
    27 32C8 0E 0F 01 04 0A 06 + 		.he 0e,0f,01,04,0a,06,03,0b
    28 32D0 04 0F 07 0E 09 04 + 		.he 04,0f,07,0e,09,04,05,02
    29 32D8 0C 0D 06 08 0B 0E + 		.he 0c,0d,06,08,0b,0e,05,05
    30 32E0 07 0F 06 03 0A 02 + 		.he 07,0f,06,03,0a,02,0b,08
    31 32E8 01 08 09 0D 0A 0C + 		.he 01,08,09,0d,0a,0c,06,00
    32 32F0 0E 05 07 02 0F 06 + 		.he 0e,05,07,02,0f,06,03
    33 						
    34 						
    35 						
    36
    37 32F7 FF FF FF FF FF	last_char_tab	.he ff,ff,ff,ff,ff
    38
    39 32FC 00 1A 34 4E 68	level_tab0	dta 0,1*26,2*26,3*26,4*26
    40 3301			level_zestawy_tab 																												;zestawy znakÃ³w w danej linii
    41 3301 E0 E0 E0 E0 E0 E0 + 		dta zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn1,zn1,zn1,zn0,zn1,zn1,zn2,zn2,zn2,zn3,zn3,zn4,zn3			;plansza ze sfinksem poziom=0
    42 331B E0 E0 E0 E0 E0 E0 + 		dta zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn1,zn1,zn2,zn2,zn3,zn3,zn4,zn4,zn4,zn1			;akropol
    43 3335 E0 E0 E0 E0 E0 E0 + 		dta zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn1,zn1,zn1,zn2,zn2,zn3,zn3,zn4,zn4,zn5,zn5,zn2,zn3			;zamek
    44 334F E0 E0 E0 E0 E0 E0 + 		dta zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0			;plansza z miastem
    45 3369 E0 E0 E0 E0 E0 E0 + 		dta zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn0,zn1,zn1,zn2,zn2,zn3,zn3,zn4,zn4,zn2,zn4,zn4,zn4			;droga
    46 						
    47 						
    48
    49 3383			level_color_change_tab
    50 3383 1E 1E 1E 1E 1E 1E + 		.he 1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e		;sfinks
    51 339D 1E 1E 1E 1E 1E 1E + 		.he 1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,16,1a,16,1e,17,16,1e,1a,1e,1e,1e		;akropol
    52 33B7 1E 1E 1E 1E 1E 1E + 		.he 1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1a,1e,1e,18,1e,1e,1e,1e,1e,1e,1e,1e,1e		;zamek
    53 33D1 1E 1E 1E 1E 1E 1E + 		.he 1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1e,1a,1e,1e,1e,1e,1e,1e		;miasto
    54 33EB 1E 1E 1E 1A 1E 1E + 		.he 1e,1e,1e,1a,1e,1e,1e,1a,1e,1e,1e,1a,1e,1e,1e,1e,1e,16,1e,17,1a,1e,1e,1e,1e,1e		;droga
    55 						
    56 						
    57 3405			level_color_value_tab
    58 3405 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00		;sfinks
    59 341F 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,e2,34,32,00,b6,b2,00,24,00,00,00		;akropol
    60 3439 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,00,c6,00,00,24,00,00,00,00,00,00,00,00,00		;zamek
    61 3453 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,84,00,00,00,00,00,00		;miasto
    62 346D 00 00 00 76 00 00 + 		.he 00,00,00,76,00,00,00,74,00,00,00,54,00,00,00,00,00,b6,00,c2,24,00,00,00,00,00		;droga
    63 						
    64 						
    65 3487 00 05 0A 0F 14	level_tab1	dta 0,5,2*5,3*5,4*5
    66 348C			level_colors_tab						;kolory startowe
    67 348C 76 18 24 0E 00			.he 76,18,24,0e,00					;poziom=0 ze sfinksem
    68 3491 68 14 E8 1E 00			.he 68,14,e8,1e,00				;akropol
    69 3496 00 0C 06 7A 00			.he 00,0c,06,7a,00				;zamek
    70 349B 86 06 0A 0F 00			.he 86,06,0a,0f,00				;miasto
    71 34A0 78 36 EC 0F 00			.he 78,36,ec,0f,00				;droga
    72 						
    73 						
    74 34A5			level_rampa_tab 
    75 34A5 C5 34 D0 34 DD 34 + 			dta a(rampa_lev0),a(rampa_lev1),a(rampa_lev2),a(rampa_lev3),a(rampa_lev4),a(rampa_lev5),a(rampa_lev6),a(rampa_lev7) ;A,B,C,D,E,F,G,H
    76 34B5 1B 35 30 35 3D 35 + 			dta a(rampa_lev8),a(rampa_lev9),a(rampa_lev10),a(rampa_lev11),a(rampa_lev12),a(rampa_lev13),a(rampa_lev14),a(rampa_lev15)	;I,J,K,L,M,N,O,P
    77 										
    78
    79 				//1 bajt ile ramp
    80 				//2 LLKXXXXX		,LL-dwa najstarsze bity dlugosci/szerokosci rampy,K- 0=pion i 1=poziom
    81 				//3 LLLYYYYY 		,LLL- trzy mlodsz bity dlugosci/szerokosci rampy
    82 = 0000			S_2=$00
    83 = 0040			M_2=$40
    84 = 0000			S_3=$00
    85 = 0060			M_3=$60
    86 = 0000			S_4=$00
    87 = 0080			M_4=$80
    88 = 0000			S_5=$00
    89 = 00A0			M_5=$a0
    90 = 0000			S_6=$00
    91 = 00C0			M_6=$c0
    92 = 0000			S_7=$00
    93 = 00E0			M_7=$e0
    94 = 0040			S_8=$40
    95 = 0000			M_8=$00
    96 = 0040			S_9=$40
    97 = 0020			M_9=$20
    98 = 0040			S_10=$40
    99 = 0040			M_10=$40
   100 = 0040			S_11=$40
   101 = 0060			M_11=$60
   102 = 0040			S_12=$40
   103 = 0080			M_12=$80
   104 = 0040			S_13=$40
   105 = 00A0			M_13=$a0
   106 = 0040			S_14=$40
   107 = 00C0			M_14=$c0
   108 = 0040			S_15=$40
   109 = 00E0			M_15=$e0
   110 = 0020			_POZIOM=$20
   111 = 0000			_PION=$00
   112 					 
   113
   114 							
   115 34C5			rampa_lev0		;A							;opis ramp dla danego poziomu
   116 34C5 05					dta 5
   117 34C6 26 A8				dta S_5+_POZIOM+6,M_5+8
   118 34C8 32 E5				dta S_7+_POZIOM+18,M_7+5	
   119 34CA 74 37				dta S_9+_POZIOM+20,M_9+23		;poziom=0 ze sfinksem
   120 34CC 2F D0				dta S_6+_POZIOM+15,M_6+16
   121 34CE 22 B4				dta S_5+_POZIOM+2,M_5+20
   122 								
   123 34D0			rampa_lev1	;B
   124 34D0 06					dta 6
   125 34D1 20 A8				dta S_5+_POZIOM+0,M_5+8
   126 34D3 3B A8				dta S_5+_POZIOM+27,M_5+8
   127 34D5 24 AE				dta S_5+_POZIOM+4,M_5+14
   128 34D7 38 AE				dta S_5+_POZIOM+24,M_5+14
   129 34D9 29 B4				dta S_5+_POZIOM+9,M_5+20
   130 34DB 34 B4				dta S_5+_POZIOM+20,M_5+20
   131 						
   132 34DD			rampa_lev2		;C
   133 34DD 05					dta 5
   134 34DE 26 A5				dta S_5+_POZIOM+6,M_5+5
   135 34E0 35 A5				dta S_5+_POZIOM+21,M_5+5
   136 34E2 2D D2				dta S_6+_POZIOM+13,M_6+18
   137 34E4 22 95				dta S_4+_POZIOM+2,M_4+21
   138 34E6 3A 95				dta S_4+_POZIOM+26,M_4+21
   139 						
   140 						
   141 34E8			rampa_lev3		;D
   142 34E8 04					dta 4
   143 34E9 23 A5				dta S_5+_POZIOM+3,M_5+5
   144 34EB 38 A5				dta S_5+_POZIOM+24,M_5+5
   145 34ED 23 B3				dta S_5+_POZIOM+3,M_5+19
   146 34EF 38 B3				dta S_5+_POZIOM+24,M_5+19		
   147 						
   148 34F1			rampa_lev4		;E
   149 34F1 00					dta 0
   150 						
   151 34F2			rampa_lev5		;F
   152 34F2 05					dta 5
   153 34F3 60 28				dta S_9+_POZIOM+0,M_9+8
   154 34F5 32 A5				dta S_5+_POZIOM+18,M_5+5		
   155 34F7 37 CB				dta S_6+_POZIOM+23,M_6+11
   156 34F9 68 F2				dta S_15+_POZIOM+8,M_15+18
   157 34FB 17 EC				dta S_7+_PION+23,M_7+12
   158 						
   159 34FD			rampa_lev6		;G
   160 34FD 06					dta 6
   161 34FE 27 EB				dta S_7+_POZIOM+7,M_7+11
   162 3500 33 EB				dta S_7+_POZIOM+19,M_7+11
   163 3502 2E A5				dta S_5+_POZIOM+14,M_5+5
   164 3504 27 EF				dta S_7+_POZIOM+7,M_7+15
   165 3506 33 EF				dta S_7+_POZIOM+19,M_7+15
   166 3508 2E B4				dta S_5+_POZIOM+14,M_5+20
   167 						
   168 350A			rampa_lev7		;H	
   169 350A 08					dta 8
   170 350B 23 C8				dta S_6+_POZIOM+3,M_6+8
   171 350D 37 C8				dta S_6+_POZIOM+23,M_6+8
   172 350F 23 D1				dta S_6+_POZIOM+3,M_6+17
   173 3511 37 D1				dta S_6+_POZIOM+23,M_6+17		
   174 3513 09 C3				dta S_6+_PION+9,M_6+3
   175 3515 16 C3				dta S_6+_PION+22,M_6+3
   176 3517 09 D1				dta S_6+_PION+9,M_6+17
   177 3519 16 D1				dta S_6+_PION+22,M_6+17
   178 						
   179 351B			rampa_lev8	;I
   180 351B 0A					dta 10
   181 351C 2B A4				dta S_5+_POZIOM+11,M_5+4
   182 351E 6B 4E				dta S_10+_POZIOM+11,M_10+14
   183 						
   184 3520 29 A8				dta S_4+_POZIOM+11-2,M_5+8
   185 						
   186 3522 0B 49				dta S_2+_PION+11,M_2+9
   187 3524 28 CB				dta S_6+_POZIOM+8,M_6+11
   188 3526 0E 4F				dta S_2+_PION+14,M_2+15
   189 3528 2B 91				dta S_4+_POZIOM+11,M_4+17
   190 						
   191 352A 62 B4				dta S_13+_POZIOM+2,M_13+20
   192 352C 0B 55				dta S_2+_PION+11,M_2+21
   193 352E 2B 97				dta S_4+_POZIOM+11,M_4+23
   194 						
   195 3530			rampa_lev9	;J
   196 3530 06					dta 6
   197 3531 65 A5				dta S_13+_POZIOM+5,M_13+5
   198 3533 36 A5				dta S_5+_POZIOM+22,M_5+5
   199 3535 45 C6				dta S_14+_PION+5,M_14+6
   200 3537 5A C6				dta S_14+_PION+26,M_14+6
   201 3539 25 B4				dta S_5+_POZIOM+5,M_5+20
   202 353B 6E B4				dta S_13+_POZIOM+14,M_13+20
   203 						
   204 353D			rampa_lev10	;K	
   205 353D 06					dta 6
   206 353E 20 C8				dta S_6+_POZIOM+0,M_6+8
   207 3540 3A C5				dta S_6+_POZIOM+26,M_6+5
   208 3542 20 CE				dta S_6+_POZIOM+0,M_6+14
   209 3544 20 D4				dta S_6+_POZIOM+0,M_6+20
   210 3546 3A CB				dta S_6+_POZIOM+26,M_6+11
   211 3548 3A D1				dta S_6+_POZIOM+26,M_6+17
   212 						
   213 354A			rampa_lev11	;L	
   214 354A 05					dta 5
   215 354B 65 65				dta S_11+_POZIOM+5,M_11+5
   216 354D 70 65				dta S_11+_POZIOM+16,M_11+5
   217 354F 45 86				dta S_12+_PION+5,M_12+6
   218 3551 5A 86				dta S_12+_PION+26,M_12+6
   219 3553 2E 92				dta S_4+_POZIOM+14,M_4+18
   220 						
   221 3555			rampa_lev12	;M	
   222 3555 0C					dta 12
   223 3556 27 A3				dta S_5+_POZIOM+7,M_5+3
   224 3558 34 A3				dta S_5+_POZIOM+20,M_5+3
   225 355A 27 B6				dta S_5+_POZIOM+7,M_5+22
   226 355C 34 B6				dta S_5+_POZIOM+20,M_5+22
   227 						
   228 355E 2D C8				dta S_6+_POZIOM+13,M_6+8
   229 3560 2D D0				dta S_6+_POZIOM+13,M_6+16
   230 3562 09 8B				dta S_4+_PION+9,M_4+11
   231 3564 16 8B				dta S_4+_PION+22,M_4+11
   232 						
   233 3566 02 A6				dta S_5+_PION+2,M_5+6
   234 3568 02 AF				dta S_5+_PION+2,M_5+15
   235 						
   236 356A 1D A6				dta S_5+_PION+29,M_5+6
   237 356C 1D AF				dta S_5+_PION+29,M_5+15
   238 						
   239 356E			rampa_lev13	;N
   240 356E 08					dta 8
   241 356F 69 43				dta S_10+_POZIOM+9,M_10+3
   242 3571 37 EE				dta S_7+_POZIOM+23,M_7+14
   243 3573 22 EB				dta S_7+_POZIOM+2,M_7+11
   244 3575 6D 56				dta S_10+_POZIOM+13,M_10+22
   245 						
   246 3577 12 E4				dta S_7+_PION+18,M_7+4
   247 3579 5D 06				dta S_8+_PION+29,M_8+6
   248 357B 42 0C				dta S_8+_PION+2,M_8+12
   249 357D 0D EF				dta S_7+_PION+13,M_7+15
   250 						
   251 357F			rampa_lev14	;O
   252 357F 04					dta 4
   253 3580 6C 05				dta S_8+_POZIOM+12,M_8+5
   254 3582 6C 14				dta S_8+_POZIOM+12,M_8+20
   255 3584 44 49				dta S_10+_PION+4,M_10+9
   256 3586 5C 49				dta S_10+_PION+28,M_10+9
   257 						
   258 3588			rampa_lev15	;P	
   259 3588 0A					dta 10
   260 3589 22 85				dta S_4+_POZIOM+2,M_4+5
   261 358B 3A 85				dta S_4+_POZIOM+26,M_4+5
   262 358D 2E 85				dta S_4+_POZIOM+14,M_4+5
   263 						
   264 358F 28 8B				dta S_4+_POZIOM+8,M_4+11
   265 3591 34 8B				dta S_4+_POZIOM+20,M_4+11
   266 						
   267 3593 22 91				dta S_4+_POZIOM+2,M_4+17
   268 3595 2E 91				dta S_4+_POZIOM+14,M_4+17
   269 3597 3A 91				dta S_4+_POZIOM+26,M_4+17
   270 						
   271 3599 28 97				dta S_4+_POZIOM+8,M_4+23
   272 359B 34 97				dta S_4+_POZIOM+20,M_4+23
   273 					
   274 						
   275 359D			level_tab2	
   276 						//pozytyw/negatyw,rampa,bomb0,bomb1,bomb2,bomb3
   277 359D E0 E4 D4 D6 F4 F6			dta %11100000,$e4,%11010100,%11010110,%11110100,%11110110		;sfinks
   278 35A3 E0 E6 E4 E4 F4 F4			dta %11100000,%11100110,$e4,$e4,%11110100,%11110100					;akropol
   279 35A9 A0 E5 17 D6 77 66			dta %10100000,%11100101,%00010111,%11010110,%01110111,%01100110			;zamek
   280 35AF E0 E6 E4 E5 F4 F5			dta %11100000,%11100110,$e4,$e4+1,%11110100,%11110101						;miasto
   281 35B5 E0 E4 E4 D4 F4 F4			dta %11100000,$e4,%11100100,%11010100,%11110100,%11110100						;droga
   282 						
   283 						
   284 						
   285
   286
   287 35BB 39 36 47 36 69 36 + bomby_levels	dta a(bomb_levA),a(bomb_levB),a(bomb_levC),a(bomb_levD),a(bomb_levE),a(bomb_levF),a(bomb_levG),a(bomb_levH)
   288 35CB DF 36 39 36 EF 36 + 				dta a(bomb_levI),a(bomb_levA),a(bomb_levJ),a(bomb_levK),a(bomb_levL),a(bomb_levM),a(bomb_levE),a(bomb_levN)	
   289 35DB 71 37 91 37 57 36 + 				dta a(bomb_levO),a(bomb_levP),a(bomb_levB1),a(bomb_levN),a(bomb_levK1),a(bomb_levG),a(bomb_levD1),a(bomb_levL1)
   290 35EB 51 37 91 37 CF 36 + 				dta a(bomb_levM),a(bomb_levP),a(bomb_levH),a(bomb_levO),a(bomb_levJ),a(bomb_levA),a(bomb_levF),a(bomb_levC)
   291 35FB 51 37 61 37 BF 36 + 				dta a(bomb_levM),a(bomb_levN),a(bomb_levG),a(bomb_levI),a(bomb_levL),a(bomb_levO1),a(bomb_levF),a(bomb_levF)
   292 360B CF 36 91 37 BF 36 + 				dta a(bomb_levH),a(bomb_levP),a(bomb_levG),a(bomb_levD),a(bomb_levK),a(bomb_levC),a(bomb_levL),a(bomb_levI)
   293 361B 47 36 DF 36 EF 36 + 				dta a(bomb_levB),a(bomb_levI),a(bomb_levJ),a(bomb_levN),a(bomb_levK),a(bomb_levM),a(bomb_levG),a(bomb_levA)
   294 362B 71 37 AD 36 CF 36 + 				dta a(bomb_levO),a(bomb_levF),a(bomb_levH),a(bomb_levC),a(bomb_levP),a(bomb_levG),a(bomb_levD)
   295 								
   296 = 0000			_PRAWO	equ $00
   297 = 0020			_LEWO	equ $20
   298 = 0040			_DOL	equ $40
   299 = 0060			_GORA	equ $60
   300 = 0000			_TYP0	equ $00
   301 = 0080			_TYP1	equ $80
   302 = 0020			_1		equ $20
   303 = 0040			_2		equ $40
   304 = 0060			_3		equ $60
   305 = 0080			_4		equ $80
   306 = 00A0			_5		equ $a0
   307 = 00C0			_6		equ $c0
   308 = 00E0			_7		equ $e0
   309
   310
   311 				// 1=255 to koniec			
   312 				//  TKKXXXXX  T=typ tla, KK=kierunek linii, X=pozycja X		
   313 				//  IIIYYYYY  III=ile bomb w linii, Y=pozycja Y,
   314
   315 3639			bomb_levA	;15b egipt
   316 3639 18 60					dta _TYP0+_PRAWO+24,_3+0 
   317 363B 84 78					dta _TYP1+_PRAWO+4,_3+24
   318 363D 94 75					dta _TYP1+_PRAWO+20,_3+21
   319 363F 2A 60					dta _TYP0+_LEWO+10,_3+0
   320 3641 E0 92					dta _TYP1+_GORA+0,_4+18
   321 3643 7E 92					dta _TYP0+_GORA+30,_4+18
   322 3645 39 86					dta _TYP0+_LEWO+25,_4+6					
   323 							
   324 							
   325 3647			bomb_levB	;17b rome
   326 3647 39 72					dta _TYP0+_LEWO+25,_3+18
   327 3649 2C 72					dta _TYP0+_LEWO+12,_3+18
   328 364B 2A 6C					dta _TYP0+_LEWO+10,_3+12
   329 364D 26 63					dta _TYP0+_LEWO+6,_3+3
   330 364F 0C 60					dta _TYP0+_PRAWO+12,_3+0
   331 3651 0C 66					dta _TYP0+_PRAWO+12,_3+6	
   332 3653 3E 63					dta _TYP0+_LEWO+30,_3+3
   333 3655 3B 6C					dta _TYP0+_LEWO+27,_3+12	
   334 							
   335 3657			bomb_levB1	;17b new york
   336 3657 B9 72					dta _TYP1+_LEWO+25,_3+18
   337 3659 AC 72					dta _TYP1+_LEWO+12,_3+18
   338 365B 2A 2C					dta _TYP0+_LEWO+10,_1+12
   339 365D A7 4C					dta _TYP1+_LEWO+7,_2+12
   340 365F 26 63					dta _TYP0+_LEWO+6,_3+3
   341 3661 0C 60					dta _TYP0+_PRAWO+12,_3+0
   342 3663 0C 66					dta _TYP0+_PRAWO+12,_3+6	
   343 3665 3E 63					dta _TYP0+_LEWO+30,_3+3
   344 3667 BB 6C					dta _TYP1+_LEWO+27,_3+12				
   345 							
   346 3669			bomb_levC	;21b
   347 3669 A6 73					dta _TYP1+_LEWO+6,_3+19
   348 366B B8 58					dta _TYP1+_LEWO+24,_2+24
   349 366D A9 58					dta _TYP1+_LEWO+9,_2+24
   350 366F 00 40					dta _TYP0+_PRAWO+0,_2+0
   351 3671 06 43					dta _TYP0+_PRAWO+6,_2+3
   352 3673 3E 40					dta _TYP0+_LEWO+30,_2+0
   353 3675 38 43					dta _TYP0+_LEWO+24,_2+3
   354 3677 BE 73					dta _TYP1+_LEWO+30,_3+19
   355 3679 F5 6F					dta _TYP1+_GORA+21,_3+15
   356 367B C9 69					dta _TYP1+_DOL+9,_3+9
   357 										
   358 367D			bomb_levD	;17b new york
   359 367D 3E 78					dta _TYP0+_LEWO+30,_3+24	
   360 367F 26 78					dta _TYP0+_LEWO+6,_3+24
   361 3681 00 63					dta _TYP0+_PRAWO+0,_3+3
   362 3683 3E 63					dta _TYP0+_LEWO+30,_3+3
   363 3685 80 6B					dta _TYP1+_PRAWO+0,_3+11
   364 3687 BE 6B					dta _TYP1+_LEWO+30,_3+11
   365 3689 83 71					dta _TYP1+_PRAWO+3,_3+17
   366 368B BB 71					dta _TYP1+_LEWO+27,_3+17
   367 							
   368 368D			bomb_levD1	;17b germany
   369 368D BE 78					dta _TYP1+_LEWO+30,_3+24	
   370 368F A6 78					dta _TYP1+_LEWO+6,_3+24
   371 3691 00 63					dta _TYP0+_PRAWO+0,_3+3
   372 3693 3E 63					dta _TYP0+_LEWO+30,_3+3
   373 3695 00 6B					dta _TYP0+_PRAWO+0,_3+11
   374 3697 3E 6B					dta _TYP0+_LEWO+30,_3+11
   375 3699 83 71					dta _TYP1+_PRAWO+3,_3+17
   376 369B BB 71					dta _TYP1+_LEWO+27,_3+17			
   377
   378 369D			bomb_levE	;17b
   379 369D EB 75					dta _TYP1+_GORA+11,_3+21
   380 369F 64 68					dta _TYP0+_GORA+4,_3+8
   381 36A1 E4 75					dta _TYP1+_GORA+4,_3+21
   382 36A3 F3 75					dta _TYP1+_GORA+19,_3+21	
   383 36A5 6B 68					dta _TYP0+_GORA+11,_3+8
   384 36A7 7B 68					dta _TYP0+_GORA+27,_3+8
   385 36A9 FB 75					dta _TYP1+_GORA+27,_3+21
   386 36AB 73 68					dta _TYP0+_GORA+19,_3+8
   387 							
   388 36AD			bomb_levF			
   389 36AD 3E 40					dta _TYP0+_LEWO+30,_2+0
   390 36AF 00 40					dta _TYP0+_PRAWO+0,_2+0
   391 36B1 12 43					dta _TYP0+_PRAWO+18,_2+3
   392 36B3 89 53					dta _TYP1+_PRAWO+9,_2+19
   393 36B5 94 53					dta _TYP1+_PRAWO+20,_2+19
   394 36B7 18 69					dta _TYP0+_PRAWO+24,_3+9
   395 36B9 5E 8C					dta _TYP0+_DOL+30,_4+12
   396 36BB E0 95					dta _TYP1+_GORA+0,_4+21
   397 36BD 80 69					dta _TYP1+_PRAWO+0,_3+9
   398 							
   399 36BF			bomb_levG
   400 36BF EC 78					dta _TYP1+_GORA+12,_3+24
   401 36C1 B9 6D					dta _TYP1+_LEWO+25,_3+13
   402 36C3 F3 78					dta _TYP1+_GORA+19,_3+24
   403 36C5 FE 78					dta _TYP1+_GORA+30,_3+24 
   404 36C7 E0 78					dta _TYP1+_GORA+0,_3+24
   405 36C9 39 63					dta _TYP0+_LEWO+25,_3+3
   406 36CB 2C 63					dta _TYP0+_LEWO+12,_3+3
   407 36CD 86 6D					dta _TYP1+_PRAWO+6,_3+13
   408 							
   409 36CF			bomb_levH		
   410 36CF 97 6F					dta _TYP1+_PRAWO+23,_3+15
   411 36D1 D7 72					dta _TYP1+_DOL+23,_3+18
   412 36D3 74 69					dta _TYP0+_GORA+20,_3+9
   413 36D5 7B 66					dta _TYP0+_GORA+27,_3+6
   414 36D7 63 66					dta _TYP0+_GORA+3,_3+6
   415 36D9 6A 69					dta _TYP0+_GORA+10,_3+9
   416 36DB C7 72					dta _TYP1+_DOL+7,_3+18
   417 36DD 81 6F					dta _TYP1+_PRAWO+1,_3+15
   418 							
   419 36DF			bomb_levI
   420 36DF A9 72					dta _TYP1+_LEWO+9,_3+18
   421 36E1 E3 6C					dta _TYP1+_GORA+3,_3+12
   422 36E3 C6 66					dta _TYP1+_DOL+6,_3+6
   423 36E5 12 60					dta _TYP0+_PRAWO+18,_3+0
   424 36E7 FE 78					dta _TYP1+_GORA+30,_3+24
   425 36E9 18 65					dta _TYP0+_PRAWO+24,_3+5
   426 36EB F6 78					dta _TYP1+_GORA+22,_3+24
   427 36ED B8 6C					dta _TYP1+_LEWO+24,_3+12
   428 							
   429 36EF			bomb_levJ			
   430 36EF E6 6C					dta _TYP1+_GORA+6,_3+12
   431 36F1 F8 72					dta _TYP1+_GORA+24,_3+18
   432 36F3 73 69					dta _TYP0+_GORA+19,_3+9
   433 36F5 E0 78					dta _TYP1+_GORA+0,_3+24
   434 36F7 63 66					dta _TYP0+_GORA+3,_3+6
   435 36F9 FE 78					dta _TYP1+_GORA+30,_3+24
   436 36FB 7B 66					dta _TYP0+_GORA+27,_3+6
   437 36FD EA 75					dta _TYP1+_GORA+10,_3+21
   438 							
   439 36FF			bomb_levK	;rzym
   440 36FF 63 6F					dta _TYP0+_GORA+3,_3+15
   441 3701 60 66					dta _TYP0+_GORA+0,_3+6
   442 3703 0C 66					dta _TYP0+_PRAWO+12,_3+6
   443 3705 5E 46					dta _TYP0+_DOL+30,_2+6
   444 3707 1B 29					dta _TYP0+_PRAWO+27,_1+9
   445 3709 3E 60					dta _TYP0+_LEWO+30,_3+0
   446 370B 80 78					dta _TYP1+_PRAWO+0,_3+24
   447 370D FE 78					dta _TYP1+_GORA+30,_3+24
   448 370F BB 32					dta _TYP1+_LEWO+27,_1+18
   449 3711 FB 4F					dta _TYP1+_GORA+27,_2+15
   450 							
   451 3713			bomb_levK1	;egipt	
   452 3713 E3 6F					dta _TYP1+_GORA+3,_3+15
   453 3715 60 66					dta _TYP0+_GORA+0,_3+6
   454 3717 0C 66					dta _TYP0+_PRAWO+12,_3+6
   455 3719 5E 46					dta _TYP0+_DOL+30,_2+6
   456 371B 1B 29					dta _TYP0+_PRAWO+27,_1+9
   457 371D 3E 60					dta _TYP0+_LEWO+30,_3+0
   458 371F 80 78					dta _TYP1+_PRAWO+0,_3+24
   459 3721 FE 58					dta _TYP1+_GORA+30,_2+24
   460 3723 3E 52					dta _TYP0+_LEWO+30,_2+18
   461 3725 7B 4F					dta _TYP0+_GORA+27,_2+15			
   462 							
   463 3727			bomb_levL	;germany			
   464 3727 FB 76					dta _TYP1+_GORA+27,_3+22		
   465 3729 7E 6C					dta _TYP0+_GORA+30,_3+12
   466 372B 03 63					dta _TYP0+_PRAWO+3,_3+3
   467 372D E3 76					dta _TYP1+_GORA+3,_3+22
   468 372F 60 6C					dta _TYP0+_GORA+0,_3+12
   469 3731 3B 63					dta _TYP0+_LEWO+27,_3+3
   470 3733 EC 70					dta _TYP1+_GORA+12,_3+16
   471 3735 D2 6A					dta _TYP1+_DOL+18,_3+10
   472 							
   473 3737			bomb_levL1	;new york			
   474 3737 7B 36					dta _TYP0+_GORA+27,_1+22	
   475 3739 FB 53					dta _TYP1+_GORA+27,_2+19	
   476 							
   477 373B FE 4C					dta _TYP1+_GORA+30,_2+12
   478 373D 7E 26					dta _TYP0+_GORA+30,_1+6
   479 							
   480 							
   481 373F 03 63					dta _TYP0+_PRAWO+3,_3+3
   482 							
   483 3741 63 36					dta _TYP0+_GORA+3,_1+22
   484 3743 E3 53					dta _TYP1+_GORA+3,_2+19
   485 							
   486 3745 60 6C					dta _TYP0+_GORA+0,_3+12
   487 3747 3B 63					dta _TYP0+_LEWO+27,_3+3
   488 							
   489 							
   490 							
   491 3749 EC 30					dta _TYP1+_GORA+12,_1+16
   492 374B 6C 4D					dta _TYP0+_GORA+12,_2+13
   493 							
   494 374D 52 4A					dta _TYP0+_DOL+18,_2+10	
   495 374F D2 30					dta _TYP1+_DOL+18,_1+16
   496 							
   497 3751			bomb_levM
   498 3751 CA 6E					dta _TYP1+_DOL+10,_3+14
   499 3753 77 6C					dta _TYP0+_GORA+23,_3+12
   500 3755 60 6F					dta _TYP0+_GORA+0,_3+15
   501 3757 04 60					dta _TYP0+_PRAWO+4,_3+0
   502 3759 14 60					dta _TYP0+_PRAWO+20,_3+0
   503 375B DE 69					dta _TYP1+_DOL+30,_3+9
   504 375D C7 66					dta _TYP1+_DOL+7,_3+6
   505 375F F4 74					dta _TYP1+_GORA+20,_3+20
   506 							
   507 3761			bomb_levN
   508 3761 00 67					dta _TYP0+_PRAWO+0,_3+7
   509 3763 50 64					dta _TYP0+_DOL+16,_3+4
   510 3765 E6 78					dta _TYP1+_GORA+6,_3+24
   511 3767 E3 72					dta _TYP1+_GORA+3,_3+18
   512 3769 7B 6C					dta _TYP0+_GORA+27,_3+12
   513 376B 77 66					dta _TYP0+_GORA+23,_3+6
   514 376D 5E 66					dta _TYP0+_DOL+30,_3+6
   515 376F B7 74					dta _TYP1+_LEWO+23,_3+20
   516 							
   517 3771			bomb_levO	;rome
   518 3771 FD B5					dta _TYP1+_GORA+29,_5+21
   519 3773 32 66					dta _TYP0+_LEWO+18,_3+6
   520 3775 02 23					dta _TYP0+_PRAWO+2,_1+3
   521 3777 0C 63					dta _TYP0+_PRAWO+12,_3+3
   522 3779 1D 23					dta _TYP0+_PRAWO+29,_1+3
   523 377B FA 6F					dta _TYP1+_GORA+26,_3+15
   524 377D E2 B5					dta _TYP1+_GORA+2,_5+21
   525 377F C5 69					dta _TYP1+_DOL+5,_3+9
   526 							
   527 3781			bomb_levO1	;germany
   528 3781 FD B5					dta _TYP1+_GORA+29,_5+21
   529 3783 B2 66					dta _TYP1+_LEWO+18,_3+6
   530 3785 02 23					dta _TYP0+_PRAWO+2,_1+3
   531 3787 0C 63					dta _TYP0+_PRAWO+12,_3+3
   532 3789 1D 23					dta _TYP0+_PRAWO+29,_1+3
   533 378B FA 6F					dta _TYP1+_GORA+26,_3+15
   534 378D E2 B5					dta _TYP1+_GORA+2,_5+21
   535 378F C5 69					dta _TYP1+_DOL+5,_3+9			
   536 							
   537 3791			bomb_levP			
   538 3791 AB 55					dta _TYP1+_LEWO+11,_2+21
   539 3793 80 6F					dta _TYP1+_PRAWO+0,_3+15
   540 3795 98 6F					dta _TYP1+_PRAWO+24,_3+15
   541 3797 36 49					dta _TYP0+_LEWO+22,_2+9
   542 3799 2B 49					dta _TYP0+_LEWO+11,_2+9
   543 379B 00 63					dta _TYP0+_PRAWO+0,_3+3
   544 379D 18 63					dta _TYP0+_PRAWO+24,_3+3
   545 379F 80 58					dta _TYP1+_PRAWO+0,_2+24
   546 37A1 BE 58					dta _TYP1+_LEWO+30,_2+24
   547 37A3 B6 55					dta _TYP1+_LEWO+22,_2+21
   548 							
   549 				/*
   550 				level_tab3	dta a(level0_chars),a(level1_chars),a(level2_chars),a(level3_chars),a(level4_chars)
   551
   552 				level0_chars
   553 							dta a(level0_fnt),a(level0_fnt+64*8),a(level0_fnt+64*8+64*8),a(level0_fnt+64*8+64*8+53*8),a(level0_fnt+64*8+64*8+53*8+64*8),a(0)	;sfinks
   554 				level1_chars
   555 							dta a(level1_fnt),a(level1_fnt+61*8),a(level1_fnt+61*8+63*8),a(level1_fnt+61*8+63*8+64*8),a(level1_fnt+61*8+63*8+64*8+56*8),a(0)	;akropol
   556 				level2_chars
   557 							dta a(level2_fnt),a(level2_fnt+61*8),a(level2_fnt+61*8+63*8),a(level2_fnt+61*8+63*8+64*8),a(level2_fnt+61*8+63*8+64*8+62*8),a(level2_fnt+61*8+63*8+64*8+62*8+49*8),a(0)	;zamek			
   558 				level3_chars
   559 							dta a(level3_fnt),a(0)	;miasto
   560 				level4_chars
   561 							dta a(level4_fnt),a(level4_fnt+61*8),a(level4_fnt+61*8+60*8),a(level4_fnt+61*8+60*8+64*8),a(level4_fnt+61*8+60*8+64*8+60*8),a(0)	;droga
   562 							
   563
   564 							
   565 							
   566 							
   567 				level_tab4	dta a(level0_scr),a(level1_scr),a(level2_scr),a(level3_scr),a(level4_scr)		
   568
   569
   570 				*/
   570
   571 								
   572
   573 37A5 00 00 00 00		tab_bity	:4 dta b(0)
   574 37A9 00			bits		dta b(0)
   575
   576 37AA			obroc_bity
   577 37AA 84 97				sty pom0a
   578 37AC 86 99				stx pom0c
   579 37AE 85 96				sta pom0
   580 						
   581 37B0 A2 00				ldx #0
   582 37B2 AD A9 37				lda bits
   583 37B5 48			@		pha
   584 37B6 29 03				and #%11
   585 37B8 9D A5 37				sta tab_bity,x
   586 37BB 68					pla
   587 37BC 4A					lsr 
   588 37BD 4A					lsr 
   589 37BE E8					inx
   590 37BF E0 04				cpx #4
   591 37C1 90 F2				bcc @-
   592 						
   593 						
   594 37C3 A0 04				ldy #4
   595 						
   596 37C5 A5 96		@		lda pom0
   597 37C7 29 03				and #%11
   598 37C9 AA					tax		
   599 37CA BD A5 37				lda tab_bity,x
   600 37CD 4A					lsr
   601 37CE 66 98				ror pom0b
   602 37D0 4A					lsr 
   603 37D1 66 98				ror pom0b
   604 37D3 46 96				lsr pom0
   605 37D5 46 96				lsr pom0
   606 37D7 88					dey
   607 37D8 D0 EB				bne @-
   608 37DA A5 98				lda pom0b
   609 37DC A4 97				ldy pom0a
   610 37DE A6 99				ldx pom0c
   611 37E0 60					rts
   612 						
   613 37E1			neg_poz
   614 37E1 A5 9A				lda pom0d		;negatywy
   615 37E3			neg_poz1		
   616 37E3 0A					asl
   617 37E4 85 9A				sta pom0d
   618 37E6 A9 00				lda #0
   619 37E8 6A					ror
   620 37E9 85 96				sta pom0	
   621 37EB 60					rts		
   622 						
   623 37EC			zwieksz_glob
   624 37EC A0 03				ldy #3
   625 37EE 18			@		clc
   626 37EF BD 84 4A				lda ai.tab_globus2,x
   627 37F2 65 96				adc pom0
   628 37F4 9D 84 4A				sta ai.tab_globus2,x
   629 37F7 BD AC 4A				lda ai.tab_globus3,x
   630 37FA 69 00				adc #0
   631 37FC 9D AC 4A				sta ai.tab_globus3,x
   632 37FF CA					dex
   633 3800 88					dey
   634 3801 10 EB				bpl @-
   635
   636 3803 60					rts
   637 						
   638 3804			zmniejsz_glob
   639 3804 A0 03				ldy #3
   640 3806 38			@		sec
   641 3807 BD 84 4A				lda ai.tab_globus2,x
   642 380A E5 96				sbc pom0
   643 380C 9D 84 4A				sta ai.tab_globus2,x
   644 380F BD AC 4A				lda ai.tab_globus3,x
   645 3812 E9 00				sbc #0
   646 3814 9D AC 4A				sta ai.tab_globus3,x
   647 3817 CA					dex
   648 3818 88					dey
   649 3819 10 EB				bpl @-
   650 381B 60					rts
   651
   652 				//co poziom przyspiesza predkosc poruszania sie kulek	
   653 = 0001			speed_up=1
   654 					
   655 381C			przyspiesz_kulki
   656 381C AD 00 D8				lda level
   657 381F D0 01				bne @+
   658 3821 60			pe		rts
   659 3822 4A			@		lsr
   660 3823 B0 FC				bcs pe
   661
   662 3825 A2 07				ldx #7
   663 3827 A9 02 85 96				mva #(speed_up*2) pom0
   664 382B 20 EC 37				jsr zwieksz_glob
   665 382E A2 17				ldx #7+16
   666 3830 20 EC 37				jsr zwieksz_glob
   667 3833 46 96				lsr pom0
   668 3835 A2 0F				ldx #7+8
   669 3837 20 EC 37				jsr zwieksz_glob
   670 						
   671 383A A2 0B				ldx #3+8
   672 383C 20 04 38				jsr zmniejsz_glob
   673 383F 06 96				asl pom0
   674 3841 A2 03				ldx #3
   675 3843 20 04 38				jsr zmniejsz_glob
   676 3846 A2 13				ldx #3+16
   677 3848 20 04 38				jsr zmniejsz_glob
   678 						
   679 384B A2 27				ldx #39
   680 384D A0 FF				ldy #255
   681 384F 20 06 38		@		jsr zmniejsz_glob+2
   682 3852 CA					dex
   683 3853 20 EE 37				jsr zwieksz_glob+2
   684 3856 CA					dex
   685 3857 E0 20				cpx #32
   686 3859 B0 F4				bcs @-
   687 						
   688 385B CA					dex
   689 385C 46 96				lsr pom0
   690 						
   691 385E 20 06 38		@		jsr zmniejsz_glob+2
   692 3861 CA					dex
   693 3862 20 EE 37				jsr zwieksz_glob+2
   694 3865 CA					dex
   695 3866 E0 17				cpx #23
   696 3868 B0 F4				bcs @-
   697 						
   698 386A 60					rts
   699 						
   700 						
   701 386B			nowy_poziom
   702 						
   703 386B 20 00 80				jsr wait_vbl
   704 386E A9 00 8D 00 D4			mva #0 dmactl
   705 3873 8D 01 D8				sta kolor_tlo
   706 3876 8D 11 D8				sta ile_ramp
   707 						
   708 3879 8D 2B D8				sta licznik_paraliz
   709 387C 8D 2C D8				sta licznik_paraliz+1
   710 						
   711 						
   712 387F A9 78 8D 00 2B			mva #$78 sprite_x
   713 3884 A9 58 8D 10 2B			mva #$58 sprite_y
   714 3889 A9 00 8D 0C D8			mva #0 ruch_poziom
   715 388E 85 B6				sta ile_score
   716 						;sta ktory_paraliz
   717 3890 8D 04 D0 8D 05 D0 + 		:4 sta hposm0+#
   718 389C A9 01 8D 12 D8			mva #1 spadanie		;koniec ekranu , zaczyna siÄ™ spadanie
   719 38A1 A9 0F 8D 09 D8			mva #joy.LEN_SPADANIE	predkosc_spadanie
   720 38A6 A9 15 8D 20 2B			mva #shp_jdol_srodek sprite_shape
   721 						
   722 38AB A5 BB				lda level_melody
   723 38AD 18					clc
   724 38AE 69 01				adc #1
   725 38B0 C9 05				cmp #max_melody
   726 38B2 90 02				bcc *+4
   727 38B4 A9 00				lda #0
   728 38B6 85 BB				sta level_melody
   729 						
   730 38B8 AA					tax
   731 38B9 BD D5 A4				lda tab_melody,x
   732 38BC 20 2F 82				jsr rmt_init0
   733 						
   734 38BF AD 00 D8				lda level
   735 						
   736 38C2 A0 03				ldy #3
   737 38C4 C9 03				cmp #3
   738 38C6 90 01				bcc *+3
   739 38C8 C8					iny
   740 38C9 84 A1				sty max_enemy
   741 						
   742 38CB A0 01				ldy #1
   743 38CD C9 05				cmp #5
   744 38CF 90 01				bcc *+3
   745 38D1 C8					iny
   746 38D2 84 A4				sty max_ptakow
   747 						
   748 38D4 A9 96				lda #150
   749 38D6 38					sec
   750 38D7 ED 00 D8				sbc level
   751 38DA 8D 23 45				sta ai.czekanie1		;przeciwnicy coraz szybciej siÄ™ pojawiajÄ…
   752 						
   753 38DD 20 1C 38				jsr przyspiesz_kulki
   754 						
   755 						
   756 38E0 AC 00 D8				ldy level
   757 38E3 BE 79 32				ldx poziom_tab,y
   758 38E6 8E 0B D8				stx poziom
   759 						
   760 38E9 BD 7F 56				lda mumia_kolor_tab,x
   761 38EC 8D 25 45				sta ai.mumia_kolor
   762 						
   763 				/*		lda poziom
   764 						asl
   765 						tax
   766 						
   767 						lda level_tab3,x				;kopiowanie znakÃ³w planszy na swoje miejsce
   768 						sta pom2
   769 						lda level_tab3+1,x
   770 						sta pom2+1
   771 						
   772 						mwa #znaki pom1
   773 						mva #1 pom0
   774 						
   775 				@		ldy pom0
   776 						lda (pom2),y		
   777 						beq @+1
   778 						sta pom+1
   779 						dey
   780 						lda (pom2),y
   781 						sta pom
   782 						inc pom0
   783 						inc pom0
   784 						
   785 						ldy #0
   786 						ldx #2
   787 				@		lda (pom),y
   788 						sta (pom1),y
   789 						dey
   790 						bne @-
   791 						inc pom+1
   792 						inc pom1+1
   793 						dex
   794 						bne @-
   795 						inc pom1+1
   796 						inc pom1+1
   797 						jmp @-1
   798 				@		equ *		*/ 
   798 				 
   799 						
   800 						
   801 				/*		ldx poziom
   802 						ldy level_tab0,x			;adres tablicy z zestawami znakÃ³w
   803 						ldx #0						;licznik 
   804 				@		lda level_zestawy_tab,y
   805 						sta zestaw,x
   806 						lda level_color_change_tab,y
   807 						sta level_cn,x
   808 						lda level_color_value_tab,y
   809 						sta level_cv,x
   810 						iny
   811 						inx
   812 						cpx #26						;26 linii
   813 						bcc @- */
   813
   814 				/*		
   815 						ldx poziom
   816 						ldy level_tab1,x			;kolory startowe planszy
   817 						ldx #0
   818 				@		lda level_colors_tab,y
   819 						sta kolor_tlo,x
   820 						iny
   821 						inx
   822 						cpx #5
   823 						bcc @-   
   824 						
   825 						
   826 				//rampa
   827 						lda poziom			;x6
   828 						asl
   829 						sta pom0
   830 						asl
   831 						adc pom0
   832 						tax
   833 						
   834 						
   835 						
   836 						lda level_tab2,x		;negatywy
   837 						jsr neg_poz1
   838 						sta _negatyw			;potrzebny przy rysowaniu ramp
   839 						
   840 						lda level_tab2+1,x		;bity dla rampy
   841 						sta bits
   842 						
   843 						ldy #15
   844 				@		lda stale_znaki,y
   845 						jsr obroc_bity
   846 						:6 sta znaki+$200+#*$400,y
   847 						dey
   848 						bpl @-
   849 						
   850 						
   851 						
   852 						
   853 						
   854 						lda level_tab2+2,x		;bity dla bomb0
   855 						sta bits
   856 						
   857 						ldy #16*8-1
   858 				@		lda stale_znaki+$10,y
   859 						jsr obroc_bity
   860 						:6 sta znaki+$210+#*$400,y
   861 						dey
   862 						bpl @-
   863 						
   864 						jsr neg_poz
   865 						;sta bomb._negatyw0
   866 						
   867 						ldy #15						;ustawienie negatyw,pozytyw w animacji bomb
   868 				@		lda tab_anim0,y
   869 						and #127
   870 						ora pom0
   871 						sta tab_anim0,y
   872 						lda tab_anim0+$20,y
   873 						and #127
   874 						ora pom0
   875 						sta tab_anim0+$20,y
   876 						dey
   877 						bpl @-
   878 						
   879 						
   880 						
   881 						
   882
   883 						lda level_tab2+3,x		;bity dla bomb1
   884 						sta bits
   885 						
   886 						ldy #16*8-1
   887 				@		lda stale_znaki+$10,y
   888 						jsr obroc_bity
   889 						:6 sta znaki+$290+#*$400,y
   890 						dey
   891 						bpl @-	
   892
   893 						jsr neg_poz
   894 						;sta bomb._negatyw1
   895 						
   896 						ldy #15						;ustawienie negatyw,pozytyw w animacji bomb
   897 				@		lda tab_anim0+$10,y
   898 						and #127
   899 						ora pom0
   900 						sta tab_anim0+$10,y
   901 						lda tab_anim0+$30,y
   902 						and #127
   903 						ora pom0
   904 						sta tab_anim0+$30,y
   905 						dey
   906 						bpl @-		
   907 						
   908 						
   909 						
   910 						
   911 						
   912 						lda level_tab2+4,x		;bity dla bomb2
   913 						sta bits
   914 						
   915 						ldy #4*8-1
   916 				@		lda stale_znaki+$10,y
   917 						jsr obroc_bity
   918 						:6 sta znaki+$310+#*$400,y
   919 						dey
   920 						bpl @-	
   921 						
   922 						ldy #8*8-1
   923 				@		lda stale_znaki+$90,y
   924 						jsr obroc_bity
   925 						:6 sta znaki+$350+#*$400,y
   926 						dey
   927 						bpl @-			
   928 						
   929 						jsr neg_poz			
   930 						
   931 						ldy #3						;ustawienie negatyw,pozytyw w animacji bomb
   932 				@		lda tab_anim0+$24,y
   933 						and #127
   934 						ora pom0
   935 						sta tab_anim0+$24,y
   936 						dey
   937 						bpl @-	
   938
   939
   940 						
   941
   942 						lda level_tab2+5,x		;bity dla bomb3
   943 						sta bits
   944 						
   945 						ldy #4*8-1
   946 				@		lda stale_znaki+$10,y
   947 						jsr obroc_bity
   948 						:6 sta znaki+$330+#*$400,y
   949 						dey
   950 						bpl @-	
   951
   952 						ldy #8*8-1
   953 				@		lda stale_znaki+$90,y
   954 						jsr obroc_bity
   955 						:6 sta znaki+$390+#*$400,y
   956 						dey
   957 						bpl @-			
   958 						
   959 						jsr neg_poz		
   960 								
   961 						ldy #3						;ustawienie negatyw,pozytyw w animacji bomb
   962 				@		lda tab_anim0+$34,y
   963 						and #127
   964 						ora pom0
   965 						sta tab_anim0+$34,y
   966 						dey
   967 						bpl @-		
   968 						
   969
   970 						
   971 						ldx poziom
   972 						lda last_char_tab,x
   973 						lda #0
   974 						ldy #7
   975 				@		:6 sta znaki+$3f8+,y			;ostatni znak bedzie czarny
   976 						dey
   977 						bpl @- */
   977
   978
   979 38EF A2 07				ldx #7
   980 38F1 A9 00		@		lda #0
   981 38F3 9D 00 E0				sta znaki,x
   982 38F6 A9 FF				lda #$ff
   983 38F8 9D 00 E2				sta znaki+$200,x
   984 38FB CA					dex
   985 38FC 10 F3				bpl @-
   986 						
   987 38FE A2 00				ldx #0
   988 3900 A9 00				lda #00
   989 3902 9D 00 DA 9D 00 DB + @		:5 sta obraz+#*$100,x			;czyÅ›ci obraz , wypeÅ‚nia go czarnymi znakami
   990 3911 CA					dex
   991 3912 D0 EE				bne @-
   992 						
   993 						
   994 						
   995 				/*		lda poziom							;rysuje plansze
   996 						asl
   997 						tax
   998 						lda level_tab4,x
   999 						sta _ad0+1
  1000 						lda level_tab4+1,x
  1001 						sta _ad0+2
  1002 						
  1003 						mva #26 pom0		;licznik
  1004 						ldx #0
  1005 						
  1006 						mwa #(obraz+8) pom
  1007 						
  1008 				@		ldy #0
  1009 				_ad0		
  1010 				@		lda $ffff,x
  1011 						sta (pom),y
  1012 						inx
  1013 						bne *+5
  1014 						inc _ad0+2
  1015 						iny
  1016 						cpy #32
  1017 						bcc @-
  1018 						lda pom
  1019 						adc #48-1
  1020 						sta pom
  1021 						lda pom+1
  1022 						adc #0
  1023 						sta pom+1
  1024 						dec pom0
  1025 						bne @-1		*/
  1025
  1026 						
  1027 3914 20 18 39				jsr rysuj_rampe
  1028 						;jsr rysuj_rampe1
  1029 						
  1030 						;jsr dodaj_bomby
  1031 						
  1032 						;jsr wait_vbl
  1033 						;mva #$3b dmactl
  1034 						
  1035 3917 60					rts
  1036
  1037
  1038 						
  1039 						
  1040 3918			rysuj_rampe
  1041 3918 A9 28 8D 22 45			mva #40 ai.czekanie			;przeciwnicy pojawiaja sie szybiej na planszy bez ramp
  1042 391D AE 00 D8				ldx level
  1043 3920 BD B8 32				lda rampa_tabx,x
  1044 3923 0A					asl
  1045 3924 AA					tax
  1046 3925 BD A5 34				lda level_rampa_tab,x
  1047 3928 85 8E				sta pom1
  1048 392A BD A6 34				lda level_rampa_tab+1,x
  1049 392D 85 8F				sta pom1+1
  1050 						
  1051 392F A0 00				ldy #0
  1052 3931 B1 8E				lda (pom1),y
  1053 3933 8D 11 D8				sta ile_ramp
  1054 3936 D0 03 4C 1C 3A			jeq rr1
  1055 393B 84 97				sty pom0a
  1056 393D 84 98				sty pom0b
  1057 						
  1058 393F A4 97		rr0		ldy pom0a
  1059 3941 C8					iny
  1060 3942 B1 8E				lda (pom1),y
  1061 3944 0A					asl
  1062 3945 2A					rol
  1063 3946 2A					rol
  1064 3947 29 03				and #3
  1065 3949 85 96				sta pom0			;dlugosc rampy 2 najstarsze bity
  1066
  1067 394B C8					iny
  1068 394C B1 8E				lda (pom1),y
  1069 394E 0A					asl
  1070 394F 26 96				rol pom0
  1071 3951 0A					asl
  1072 3952 26 96				rol pom0
  1073 3954 0A					asl 
  1074 3955 26 96				rol pom0			;dlugoÅ›Ä‡/wysokoÅ›Ä‡ rampy w pom0
  1075 3957 4A 4A 4A				:3 lsr
  1076 395A AA					tax
  1077 395B BD 4F 22				lda obr_m,x
  1078 395E 85 8C				sta pom
  1079 3960 BD 6B 22				lda obr_s,x
  1080 3963 85 8D				sta pom+1			;adres linii startowej w pom
  1081 						
  1082 3965 8A					txa
  1083 3966 0A					asl
  1084 3967 0A					asl
  1085 3968 0A					asl
  1086 						;adc #POSY_MIN
  1087 3969 A6 98				ldx pom0b
  1088 396B 9D 59 32				sta rampa_y1,x		;pozycja Y rampy
  1089 396E 69 10				adc #POSY_MIN
  1090 3970 9D 19 32				sta rampa_y,x
  1091 3973 88					dey
  1092
  1093 3974 B1 8E				lda (pom1),y
  1094 3976 29 20				and #%00100000
  1095 3978 0A 0A 0A				:3 asl
  1096 397B 2A					rol
  1097 397C D0 24				bne @+
  1098 397E A9 30				lda #48
  1099 3980 8D E0 39				sta _ryspos+1			;w pion
  1100 3983 A9 41				lda #ch_rampa+1
  1101 3985 8D D6 39				sta _char+1
  1102 3988 A9 07 9D 09 32			mva #7 rampa_dx,x
  1103 398D A9 00 9D 49 32			mva #0 rampa_dx1,x
  1104 3992 A5 96				lda pom0
  1105 						;:3 asl
  1106 						;adc #15
  1107 3994 9D 69 32				sta rampa_dy1,x			;dlugosc w pion
  1108 3997 0A 0A 0A				:3 asl
  1109 399A 69 0F				adc #15
  1110 399C 9D 29 32				sta rampa_dy,x
  1111 399F 4C C0 39				jmp @+1	
  1112 39A2 8D E0 39		@		sta _ryspos+1			;poziom
  1113 39A5 A9 40				lda #ch_rampa
  1114 39A7 8D D6 39				sta _char+1
  1115 39AA A9 17 9D 29 32			mva #23 rampa_dy,x
  1116 39AF A9 00 9D 69 32			mva #0 rampa_dy1,x
  1117 39B4 A5 96				lda pom0
  1118 						;:2 asl
  1119 						;adc #3
  1120 39B6 9D 49 32				sta rampa_dx1,x		;dlugosc w poziomie
  1121 39B9 0A 0A				:2 asl
  1122 39BB 69 03				adc #3
  1123 39BD 9D 09 32				sta rampa_dx,x
  1124 						
  1125 39C0 B1 8E		@		lda (pom1),y
  1126 39C2 29 1F				and #%11111
  1127 39C4 C8					iny
  1128 39C5 84 97				sty pom0a
  1129 39C7 A8					tay					;pozycja X startowa
  1130 39C8 0A					asl
  1131 39C9 0A					asl
  1132 39CA 48					pha
  1133 39CB 0A					asl
  1134 						;adc #POSX_MIN
  1135 39CC 9D 39 32				sta rampa_x1,x		;pozycja Y rampy
  1136 39CF 68					pla
  1137 39D0 69 40				adc #POSX_MIN
  1138 39D2 9D F9 31				sta rampa_x,x
  1139
  1140 						
  1141 39D5 A9 00		_char	lda #0
  1142 = 39D8			_negatyw equ *+1		
  1143 39D7 09 80				ora #$80
  1144 39D9 85 99				sta pom0c		
  1145 						
  1146 						
  1147 						
  1148 						
  1149 39DB A5 99		@		lda pom0c			;rysuj na ekranie
  1150 39DD 91 8C				sta (pom),y
  1151 39DF A9 30		_ryspos	lda #48
  1152 39E1 20 4E 5B				jsr add_pom
  1153 39E4 C6 96				dec pom0
  1154 39E6 D0 F3				bne @-
  1155 						
  1156 39E8 E8					inx
  1157 39E9 86 98				stx pom0b
  1158 39EB EC 11 D8				cpx ile_ramp		;czy juz wszystkie rampy
  1159 39EE F0 03 4C 3F 39			jne rr0
  1160
  1161 39F3 AD 09 32				lda rampa_dx
  1162 39F6 38					sec
  1163 39F7 E9 0A				sbc #6+4
  1164 39F9 8D 6D 46				sta ai.rampa_tab
  1165 39FC 18					clc
  1166 39FD AD F9 31				lda rampa_x
  1167 3A00 69 02				adc #2
  1168 3A02 8D 6E 46				sta ai.rampa_tab+1
  1169 3A05 AD 0A 32				lda rampa_dx+1
  1170 3A08 38					sec
  1171 3A09 E9 0A				sbc #6+4
  1172 3A0B 8D 6F 46				sta ai.rampa_tab+2
  1173 3A0E 18					clc
  1174 3A0F AD FA 31				lda rampa_x+1
  1175 3A12 69 02				adc #2
  1176 3A14 8D 70 46				sta ai.rampa_tab+3
  1177 						
  1178 3A17 A9 46 8D 22 45			mva #70 ai.czekanie		;standardowy czas do 1 przecwinika na planszy z rampami
  1179 						
  1180 						
  1181 3A1C 60			rr1		rts		
  1182 						
  1183 						
  1184 							
  1185
  1186
  1187 3A1D 03 00		db_tab		dta 3,0
  1188 3A1F FD 00					dta -3,0
  1189 3A21 00 03					dta 0,3
  1190 3A23 00 FD					dta 0,-3
  1191 							
  1192 								
  1193 							
  1194 3A25			dodaj_bomby	
  1195 3A25 A9 00 85 97					mva #0 pom0a
  1196 3A29 AD 00 D8					lda level
  1197 3A2C 0A						asl
  1198 3A2D AA						tax
  1199 3A2E BD BB 35					lda bomby_levels,x
  1200 3A31 85 8E					sta pom1
  1201 3A33 BD BC 35					lda bomby_levels+1,x
  1202 3A36 85 8F					sta pom1+1
  1203 3A38 A0 FF					ldy #$ff
  1204 3A3A 84 9A					sty pom0d		;zapamiÄ™taj indeks			
  1205
  1206 3A3C			db0			
  1207 3A3C A4 9A					ldy pom0d
  1208 3A3E C8						iny
  1209 3A3F B1 8E					lda (pom1),y		;odczytaj 1 bajt
  1210 3A41 85 98					sta pom0b
  1211 							
  1212 3A43 4A 4A 4A 4A					:4 lsr
  1213 3A47 29 06					and #%110			;odzytaj bity kierunku
  1214 3A49 AA						tax
  1215 3A4A BD 1D 3A					lda db_tab,x		;+/- w osiX
  1216 3A4D 8D AD 3A					sta _adx+1
  1217 3A50 BD 1E 3A					lda db_tab+1,x		;+/- w osiY
  1218 3A53 8D B4 3A					sta _ady+1
  1219 							
  1220 3A56 A5 98					lda pom0b
  1221 3A58 4A 4A 4A					:3 lsr
  1222 3A5B 29 10					and #16
  1223 3A5D 85 9C					sta pom0f			;typ bomby
  1224 3A5F A5 98					lda pom0b
  1225 3A61 29 1F					and #%11111
  1226 3A63 85 98					sta pom0b
  1227 												
  1228 3A65 C8						iny
  1229 3A66 B1 8E					lda (pom1),y		;odczytaj 2 bajt
  1230 3A68 84 9A					sty pom0d
  1231 3A6A 4A 4A 4A 4A 4A				:5 lsr
  1232 3A6F 85 9B					sta pom0e			;ile bomb w linii >0	
  1233 3A71 B1 8E					lda (pom1),y
  1234 3A73 29 1F					and #%11111
  1235 3A75 85 99					sta pom0c
  1236 							
  1237 3A77 A6 97					ldx pom0a
  1238 3A79 A5 98		db1			lda pom0b
  1239 3A7B 48						pha	
  1240 3A7C 0A 0A					:2 asl
  1241 3A7E 69 40					adc #POSX_MIN
  1242 3A80 9D 8A 26					sta bomba_x,x	
  1243 							
  1244 3A83 A5 99					lda pom0c
  1245 3A85 48						pha
  1246 3A86 0A 0A 0A					:3 asl
  1247 3A89 69 10					adc #POSY_MIN
  1248 3A8B 9D A2 26					sta bomba_y,x	
  1249 							
  1250 3A8E 68						pla
  1251 3A8F A8						tay
  1252 3A90 68						pla
  1253 3A91 20 EF 28					jsr bomb.rysuj_bombe1
  1254 							
  1255 3A94 A9 00 9D 4A 27				mva #0 bomba_zapalona,x
  1256 3A99 A9 02 9D BA 26				mva #BOMBA_ANIM_SPEED bomba_anim_licznik,x		
  1257 3A9E E8						inx
  1258 3A9F 86 97					stx pom0a
  1259 3AA1 E0 18					cpx #24
  1260 3AA3 F0 15					beq db2
  1261 							
  1262 3AA5 C6 9B					dec pom0e
  1263 3AA7 F0 93					jeq db0
  1264 							
  1265 3AA9 18						clc
  1266 3AAA A5 98					lda pom0b
  1267 3AAC 69 00		_adx		adc #0
  1268 3AAE 85 98					sta pom0b
  1269 3AB0 18						clc
  1270 3AB1 A5 99					lda pom0c
  1271 3AB3 69 00		_ady		adc #0
  1272 3AB5 85 99					sta pom0c
  1273 3AB7 4C 79 3A					jmp db1								
  1274 							
  1275 3ABA			db2			
  1276 3ABA 8E 08 D8					stx ile_bomb
  1277 3ABD CA						dex
  1278 3ABE 8E 7D 29					stx bomb.zbieraj_bomby+1
  1279 											
  1280 3AC1 60			@			rts				
  1281
  1282 							
  1283 3AC2			stale_znaki
  1284 3AC2 FF 00 FF FF FF FF + 			.he ff,00,ff,ff,ff,ff,ff,ff			;rampa pozioma
  1285 3ACA CF CF F3 F3 CF CF + 			:2 .he cf,cf,f3,f3			;rampa pionowa
  1286 							
  1287 3AD2 00 00 00 03 0F 0F + 			.he 00,00,00,03,0f,0f,3e,3b			;czarna bomba na niebieskim tle
  1288 3ADA 30 C0 00 C0 F0 F0 + 			.he 30,c0,00,c0,f0,f0,fc,fc			;1 faza
  1289 3AE2 3B 3F 3F 3F 0F 0F + 			.he 3b,3f,3f,3f,0f,0f,03,00
  1290 3AEA FC FC FC FC F0 F0 + 			.he fc,fc,fc,fc,f0,f0,c0,00
  1291 							
  1292 3AF2 00 03 03 00 03 0F + 			.he 00,03,03,00,03,0f,0f,3e		;2faza
  1293 3AFA 00 00 00 00 C0 F0 + 			.he 00,00,00,00,c0,f0,f0,fc
  1294 3B02 3B 3F 3F 0F 0F 03 + 			.he 3b,3f,3f,0f,0f,03,00,00
  1295 3B0A FC FC FC F0 F0 C0 + 			.he fc,fc,fc,f0,f0,c0,00,00
  1296
  1297 							
  1298 3B12 00 00 00 03 00 03 + 			.he 00,00,00,03,00,03,0f,0e		;3 faza
  1299 3B1A 00 00 00 00 00 C0 + 			.he 00,00,00,00,00,c0,f0,f0
  1300 3B22 0F 0F 0F 0F 03 00 + 			.he 0f,0f,0f,0f,03,00,00,00
  1301 3B2A F0 F0 F0 F0 C0 00 + 			.he f0,f0,f0,f0,c0,00,00,00
  1302 							
  1303 3B32 00 00 00 00 03 0F + 			.he 00,00,00,00,03,0f,0f,3e		;4faza
  1304 3B3A 00 C0 C0 00 C0 F0 + 			.he 00,c0,c0,00,c0,f0,f0,fc
  1305 3B42 3B 3F 3F 0F 0F 03 + 			.he 3b,3f,3f,0f,0f,03,00,00
  1306 3B4A FC FC FC F0 F0 C0 + 			.he fc,fc,fc,f0,f0,c0,00,00
  1307 							
  1308 3B52 CC CC 30 00 00 00 + 			.he cc,cc,30,00,00,00,00,00
  1309 3B5A 00 00 00 0C 33 33 + 			.he 00,00,00,0c,33,33,33,0c
  1310 3B62 00 00 00 00 00 00 + 			.he 00,00,00,00,00,00,30,cc
  1311 							
  1312 3B6A 00 0C 3C 0C 0C 3F + 			.he 00,0c,3c,0c,0c,3f,00,00		;1
  1313 3B72 00 3C 03 3F 30 3F + 			.he 00,3c,03,3f,30,3f,00,00		;2
  1314 3B7A 00 3F 03 0F 03 3F + 			.he 00,3f,03,0f,03,3f,00,00		;3
  1315 3B82 00 33 33 3F 03 03 + 			.he 00,33,33,3f,03,03,00,00		;4
  1316 3B8A 00 3F 30 3F 03 3F + 			.he 00,3f,30,3f,03,3f,00,00		;5
  1317 							
  1318
  1319 							
  1320 					
  1321 				.endl
  1322 				/*
  1323 				level0_fnt
  1324 							ins './levels/sfinks.fnt'
  1325 				level1_fnt
  1326 							ins './levels/akropol.fnt'
  1327 				level2_fnt			
  1328 							ins './levels/zamek.fnt'			
  1329 				level3_fnt
  1330 							ins './levels/miasto.fnt'	
  1331 				level4_fnt
  1332 							ins './levels/droga.fnt'	
  1333
  1334 							
  1335 				level0_scr			
  1336 							ins '/levels/sfinks.scr'
  1337 				level1_scr
  1338 							ins '/levels/akropol.scr'	
  1339 				level2_scr			
  1340 							ins '/levels/zamek.scr'			
  1341 				level3_scr			
  1342 							ins '/levels/miasto.scr'
  1343 				level4_scr			
  1344 							ins '/levels/droga.scr' */
  1344
  1345
  1346
  1347 							
  1348 							
  1349 						
   440 3B92						icl 'kolizje.asm'
Source: kolizje.asm
     1 				//kolizje
     2
     3 3B92			scr_ad_m
     4 3B92 F8 28 58 88 B8 E8 + 		:26 dta b(<[obraz-8+48*#])
     5 3BAC			scr_ad_s
     6 3BAC D9 DA DA DA DA DA + 		:26 dta b(>[obraz-8+48*#])
     7 						
     8 3BC6			.local cl
     9
    10 = 009A			sprite0x=pom0d
    11 = 009B			sprite0y=pom0e
    12
    13 3BC6			sprawdzXY
    14 3BC6 98					tya
    15 3BC7 4A					lsr
    16 3BC8 B0 05				bcs @+
    17 3BCA 4A					lsr
    18 3BCB B0 1A				bcs sprawdz_lewo_gacek
    19 3BCD 90 0A				bcc sprawdz_prawo_gacek
    20 						
    21 3BCF 4A			@		lsr
    22 3BD0 B0 62				bcs sprawdz_nad_gackiem
    23 3BD2 4C 73 3C				jmp sprawdz_pod_gackiem		
    24
    25
    26 3BD5			sprawdz_osX
    27 3BD5 A5 9E				lda pom0h
    28 3BD7 30 0E				bmi sprawdz_lewo_gacek
    29
    30 3BD9			sprawdz_prawo_gacek
    31 3BD9 A5 9A				lda sprite0x
    32 3BDB C9 B9				cmp #POSX_MAX+1
    33 3BDD 90 03				bcc *+5
    34 3BDF A9 00				lda #0
    35 3BE1 60					rts
    36 						
    37 3BE2 69 06				adc #6
    38 3BE4 4C F2 3B				jmp spr_l1
    39
    40 3BE7			sprawdz_lewo_gacek
    41 3BE7 A5 9A				lda sprite0x
    42 3BE9 C9 40				cmp #POSX_MIN
    43 3BEB B0 03				bcs *+5
    44 3BED A9 00				lda #0
    45 3BEF 60					rts
    46 						
    47 3BF0 69 01				adc #2-1
    48 3BF2			spr_l1		
    49 3BF2 4A 4A				:2 lsr
    50 3BF4 A8					tay
    51 						
    52 3BF5 A5 9B				lda sprite0y
    53 3BF7 4A 4A 4A				:3 lsr
    54 3BFA 86 9E				stx pom0h
    55 3BFC AA					tax
    56 3BFD CA					dex
    57 3BFE CA					dex
    58 3BFF 18					clc
    59 3C00 98					tya
    60 3C01 7D 92 3B				adc scr_ad_m,x 
    61 3C04 85 94				sta pom4
    62 3C06 BD AC 3B				lda scr_ad_s,x
    63 3C09 69 00				adc #0
    64 3C0B 85 95				sta pom4+1
    65 3C0D A6 9E				ldx pom0h
    66 						
    67 3C0F A0 00				ldy #0
    68 3C11 B1 94				lda (pom4),y
    69 3C13 4A					lsr
    70 3C14 C9 60				cmp #$60
    71 3C16 D0 01				bne *+3
    72 3C18 60					rts
    73 3C19 A0 30				ldy #48
    74 3C1B B1 94				lda (pom4),y
    75 3C1D 4A					lsr
    76 3C1E C9 60				cmp #$60
    77 3C20 D0 01				bne *+3
    78 3C22 60					rts
    79 3C23 A5 9B				lda sprite0y
    80 3C25 29 07				and #7				;gdy przesuniecie =0 to sprawdz 2 bajty
    81 3C27 D0 03				bne *+5
    82 3C29 A9 01				lda #1
    83 3C2B 60					rts
    84 3C2C A0 60				ldy #96
    85 3C2E B1 94				lda (pom4),y
    86 3C30 4A					lsr
    87 3C31 C9 60				cmp #$60
    88 3C33 60					rts
    89 						
    90 						
    91 						
    92
    93 3C34			sprawdz_nad_gackiem
    94 3C34 A5 9B				lda sprite0y
    95 3C36 C9 10				cmp #POSY_MIN
    96 3C38 B0 03				bcs *+5
    97 3C3A A9 00				lda #0
    98 3C3C 60					rts
    99 						
   100 						;sec
   101 3C3D E9 10				sbc #16
   102 3C3F 24 86				bit bit2
   103 3C41 D0 03				bne *+5
   104 3C43 A9 01				lda #1
   105 3C45 60					rts
   106 						
   107 3C46 4A 4A 4A				:3 lsr
   108 3C49 86 9E				stx pom0h
   109 3C4B AA					tax
   110 3C4C BD 92 3B				lda scr_ad_m,x
   111 3C4F 85 94				sta pom4
   112 3C51 BD AC 3B				lda scr_ad_s,x
   113 3C54 85 95				sta pom4+1
   114 3C56 A6 9E				ldx pom0h
   115 						
   116 3C58 18					clc
   117 3C59 A5 9A				lda sprite0x
   118 3C5B 69 02				adc #2
   119 3C5D 4A 4A				:2 lsr
   120 3C5F A8					tay
   121 3C60 B1 94				lda (pom4),y
   122 3C62 4A					lsr
   123 3C63 C9 60				cmp #$60
   124 3C65 D0 01				bne *+3
   125 3C67 60					rts
   126 3C68 C8					iny
   127 3C69 B1 94				lda (pom4),y
   128 3C6B 4A					lsr
   129 3C6C C9 60				cmp #$60
   130 3C6E 60					rts		
   131
   132 3C6F			sprawdz_osY
   133 3C6F A5 9E				lda pom0h
   134 3C71 30 C1				bmi sprawdz_nad_gackiem
   135
   136 3C73			sprawdz_pod_gackiem
   137 3C73 A5 9B				lda sprite0y
   138 3C75 C9 D1				cmp #POSY_MAX+1
   139 3C77 90 03				bcc *+5
   140 3C79 A9 00				lda #0
   141 3C7B 60					rts
   142 3C7C E9 00				sbc #0
   143 3C7E 24 83				bit bit12
   144 3C80 F0 02				beq *+4
   145 3C82 18					clc
   146 3C83 60					rts		
   147 						
   148 3C84 4A 4A 4A				:3 lsr
   149 3C87 86 9E				stx pom0h
   150 3C89 AA					tax
   151 3C8A BD 92 3B				lda scr_ad_m,x
   152 3C8D 85 94				sta pom4
   153 3C8F BD AC 3B				lda scr_ad_s,x
   154 3C92 85 95				sta pom4+1
   155 3C94 A6 9E				ldx pom0h
   156 						
   157 3C96 18					clc
   158 3C97 A5 9A				lda sprite0x
   159 3C99 69 02				adc #2
   160 3C9B 4A 4A				:2 lsr
   161 3C9D A8					tay
   162 3C9E B1 94				lda (pom4),y
   163 3CA0 4A					lsr
   164 3CA1 C9 60				cmp #$60
   165 3CA3 D0 01				bne *+3
   166 3CA5 60					rts
   167 3CA6 C8					iny
   168 3CA7 B1 94				lda (pom4),y
   169 3CA9 4A					lsr
   170 3CAA C9 60				cmp #$60
   171 3CAC 38					sec
   172 3CAD 60					rts
   173 						
   174
   175
   176 						
   177 3CAE			player_vs_enemy
   178 						;rts
   179 3CAE AD 2D D8				lda after_paraliz
   180 3CB1 F0 03				beq @+
   181 3CB3 CE 2D D8				dec after_paraliz
   182 = 3CB6			@		equ *
   183
   184 3CB6 A0 07				ldy #7
   185 3CB8 AD 00 2B				lda sprite_x
   186 3CBB 18					clc
   187 3CBC 69 04				adc #4
   188 3CBE 8D D0 3C				sta _pp0+1
   189 3CC1 AD 10 2B				lda sprite_y
   190 3CC4 69 0D				adc #12+1	;bo c=0
   191 3CC6 8D D9 3C				sta _pp1+1	
   192 3CC9 38					sec
   193
   194 3CCA B9 58 2B		@		lda sprite_typ,y
   195 3CCD 30 12				bmi @+
   196 3CCF			_pp0		
   197 3CCF A9 00				lda #0		;sprite_x
   198 3CD1 F9 00 2B				sbc sprite_x,y
   199 						;clc
   200 						;adc #4
   201 3CD4 C9 09				cmp #9
   202 3CD6 B0 09				bcs @+
   203 3CD8			_pp1		
   204 3CD8 A9 00				lda #0		;sprite_y
   205 3CDA F9 10 2B				sbc sprite_y,y
   206 						;clc
   207 						;adc #12
   208 3CDD C9 19				cmp #25
   209 3CDF 90 04				bcc @+1
   210 						
   211 3CE1 88			@		dey
   212 3CE2 D0 E6				bne @-1
   213 3CE4 60					rts
   214 						
   215 3CE5 C0 07		@		cpy #7
   216 3CE7 D0 03 4C AE 3D			jeq @+1
   217 						
   218 3CEC AD 2B D8				lda licznik_paraliz
   219 3CEF 0D 2C D8				ora licznik_paraliz+1
   220 3CF2 F0 78				beq @+
   221 						
   222 3CF4 C6 C5				dec licznik_extra
   223 3CF6 D0 0B				bne le0
   224 3CF8 A9 0A 85 C5				mva #LICZNIK_EXTRA_START licznik_extra
   225 3CFC A5 C7				lda random_extra
   226 3CFE 4A					lsr
   227 3CFF 09 03				ora #3
   228 3D01 85 C7				sta random_extra
   229 = 3D03			le0		equ *			
   230 						
   231 						
   232 3D03 A9 00				lda #0
   233 3D05 99 27 45				sta ai.ruch,y
   234 						
   235 3D08 B9 58 2B				lda sprite_typ,y
   236 3D0B C9 05				cmp #t_ptak
   237 3D0D D0 09				bne pe0
   238 						
   239 3D0F C6 A2				dec ile_ptakow
   240 3D11 A9 32 85 A3		_ptak50	mva #50 licznik_ptak
   241 3D15 4C 20 3D				jmp pe1
   242 						
   243 3D18			pe0		
   244 3D18 C6 A0				dec ile_enemy
   245 3D1A AD 23 45 8D 22 45			mva ai.czekanie1 ai.czekanie
   246 						
   247 3D20			pe1		
   248 3D20 A5 C6				lda ile_paraliz
   249 3D22 C9 05				cmp #5				;=5 i 6 to +1
   250 						;clc
   251 3D24 69 D9				adc #89+t_score				 
   252 3D26 99 58 2B				sta sprite_typ,y
   253 3D29 A9 FF 99 48 2B			mva #-1 sprite_anim_speed,y		;nie animuj
   254 3D2E A9 1E 99 88 2B			mva #30 sprite_score_licznik,y
   255 3D33 E6 B6				inc ile_score
   256 3D35 A6 C6				ldx ile_paraliz
   257 3D37 BD 94 3E				lda paraliz_score_tab,x
   258 3D3A 85 96				sta pom0
   259 3D3C E6 C6				inc ile_paraliz
   260 3D3E AE 14 D8				ldx bonus
   261 3D41			pe10		
   262 3D41 A5 96				lda pom0
   263 3D43 20 11 2A				jsr score_add
   264 3D46 A5 96				lda pom0
   265 3D48 20 11 2A				jsr score_add
   266 3D4B CA					dex
   267 3D4C 10 F3				bpl pe10
   268 						
   269 						
   270 3D4E A0 0C				ldy #fx_literka
   271 3D50 A9 02				lda #2
   272 3D52 20 26 4F				jsr sfx.add_fx  
   273 						
   274 3D55 A5 A0				lda ile_enemy
   275 3D57 05 A2				ora ile_ptakow
   276 3D59 D0 10				bne pe2	
   277 						
   278 3D5B A9 00 8D 2B D8			mva #0 licznik_paraliz
   279 3D60 8D 2C D8				sta licznik_paraliz+1
   280 						
   281 3D63 A6 BB				ldx level_melody
   282 3D65 BD D5 A4				lda tab_melody,x
   283 3D68 4C 2F 82				jmp rmt_init0
   284 						
   285 3D6B 60			pe2		rts
   286 						
   287 = 3D6C			@		equ *	//enemy	
   288 3D6C B9 58 2B				lda sprite_typ,y
   289 3D6F C9 0B				cmp #t_none						;wybuch nie zabija
   290 3D71 F0 F8				beq pe2
   291 3D73 AD 2D D8				lda after_paraliz				;po zakoÅ„czniu paraliÅ¼u przez chwile jestesmy niesmiertelni
   292 3D76 D0 F3				bne pe2
   293
   294 3D78 A9 01 85 B8				mva #1 death
   295 3D7C A9 1C 8D 20 2B			mva #shp_jspada sprite_shape
   296 3D81 8D 28 2B				sta sprite_shape0
   297 3D84 A9 02 8D 40 2B			mva #2 sprite_anim
   298 3D89 A9 07 8D 48 2B			mva #7 sprite_anim_speed
   299 3D8E A9 01 8D 50 2B			mva #1 sprite_mask
   300 3D93 20 4F B0				jsr rmt_silence
   301 3D96 A9 28 8D 08 D2			mva #$28 audctl
   302 3D9B A9 3D 8D 04 D2			mva #$3d audf3
   303 3DA0 A9 AB 8D 06 D2			mva #$ab audf4
   304 3DA5 A9 A3 8D 05 D2			mva #$a1+2 audc3
   305 3DAA 8D 07 D2				sta audc4
   306 3DAD 60					rts
   307 						
   308 						//literka
   309 3DAE			@		
   310 3DAE A9 00 99 27 45			mva #0 ai.ruch,y
   311 3DB3 A9 FF 99 48 2B			mva #-1 sprite_anim_speed,y		;nie animuj
   312 3DB8 A9 1E 99 88 2B			mva #30 sprite_score_licznik,y
   313 3DBD E6 B6				inc ile_score
   314 						
   315 3DBF 84 96				sty pom0
   316 3DC1 A0 0C				ldy #fx_literka
   317 3DC3 A9 03				lda #3
   318 3DC5 20 26 4F				jsr sfx.add_fx
   319 3DC8 A4 96				ldy pom0
   320 						
   321 						
   322 3DCA B9 58 2B				lda sprite_typ,y
   323 3DCD C9 06				cmp #t_bonus
   324 3DCF D0 10				bne @+
   325 						
   326 						//bonus
   327 						;lda bonus
   328 						;cmp #4
   329 						;beq *+4
   330 						
   331 3DD1 A9 DE 99 58 2B			mva #94+t_score sprite_typ,y
   332 3DD6 EE 14 D8				inc bonus
   333 						
   334 3DD9 20 40 31				jsr panel.print_bonus
   335 						
   336 3DDC A9 01				lda #$01
   337 3DDE 4C 2B 2A				jmp score_addx100		;dodatkowe 1000 pkt za zebranie literki B.
   338 						
   339 3DE1 C9 07		@		cmp #t_extra
   340 3DE3 D0 24				bne @+
   341 						
   342 						//extra life
   343 3DE5 A9 FF 85 C7				mva #255 random_extra
   344 3DE9 A9 0A 85 C5				mva #LICZNIK_EXTRA_START licznik_extra
   345 3DED A9 00 8D 2E D8			mva #0 czy_extra
   346 3DF2 A9 E1 99 58 2B			mva #97+t_score sprite_typ,y
   347 3DF7 A9 03				lda #3
   348 3DF9 A0 0E				ldy #fx_extra
   349 3DFB 20 26 4F				jsr sfx.add_fx
   350 3DFE EE 16 D8				inc lives
   351 3E01 20 9A 31				jsr panel.print_lives
   352 3E04 A9 03				lda #$03
   353 3E06 4C 2B 2A				jmp score_addx100
   354 						
   355 3E09			@		
   356 						//paraliÅ¼
   357 3E09 A9 00 8D 1B D8			mva #0 kanal3
   358 3E0E 8D 05 D2				sta audc3
   359 						
   360 3E11 A5 C0				lda kolor_p
   361 3E13 AA					tax
   362 3E14 18					clc
   363 3E15 69 D9				adc #90+t_score-1
   364 3E17 99 58 2B				sta sprite_typ,y
   365 3E1A BD 9A 3E				lda paraliz_score0,x
   366 3E1D F0 03				beq *+5
   367 3E1F 20 11 2A				jsr score_add
   368 3E22 BD A1 3E				lda paraliz_score1,x
   369 3E25 F0 03				beq *+5
   370 3E27 20 2B 2A				jsr score_addx100
   371 						
   372 3E2A A0 06				ldy #6
   373 3E2C B9 00 2B		@		lda sprite_x,y
   374 3E2F F0 4B				beq @+
   375 						
   376 3E31 B9 20 2B				lda sprite_shape,y
   377 3E34 99 A8 3E				sta buf_shape,y
   378 3E37 B9 28 2B				lda sprite_shape0,y
   379 3E3A 99 AF 3E				sta buf_shape0,y
   380 3E3D B9 48 2B				lda sprite_anim_speed,y
   381 3E40 99 B6 3E				sta buf_anim_speed,y
   382 3E43 B9 40 2B				lda sprite_anim,y
   383 3E46 99 BD 3E				sta buf_anim,y
   384 3E49 B9 50 2B				lda sprite_mask,y
   385 3E4C 99 C4 3E				sta buf_mask,y
   386 3E4F B9 30 2B				lda sprite_c0,y
   387 3E52 99 CB 3E				sta buf_c0,y
   388 3E55 B9 38 2B				lda sprite_c1,y
   389 3E58 99 D2 3E				sta buf_c1,y
   390 						
   391 3E5B A9 50 99 20 2B			mva #shp_buzka sprite_shape,y
   392 3E60 99 28 2B				sta sprite_shape0,y
   393 3E63 A9 03 99 48 2B			mva #3 sprite_anim_speed,y
   394 3E68 A9 04 99 40 2B			mva #4 sprite_anim,y
   395 3E6D A9 03 99 50 2B			mva #3 sprite_mask,y
   396 3E72 A9 24 99 30 2B			mva #$24 sprite_c0,y
   397 3E77 A9 E8 99 38 2B			mva #$e8 sprite_c1,y
   398 						
   399 3E7C 88			@		dey
   400 3E7D D0 AD				bne @-1
   401 3E7F A9 00 85 C0				mva #0 kolor_P
   402 3E83 85 C6				sta ile_paraliz			;ile zebrano buziek		
   403 						
   404 3E85			_licznik_paraliz		
   405 3E85 A9 FF 8D 2B D8 A9 + 		mwa #255 licznik_paraliz
   406 						;mva #5 music_speed
   407 						
   408 				;;muzyczka w czasie paralizu
   409
   410 3E8F A9 7A				lda #$7a
   411 3E91 4C 2F 82				jmp rmt_init0		
   412
   413 3E94 05 10 15 25 40 60	paraliz_score_tab	.he 05,10,15,25,40,60
   414 3E9A 10 20 30 50 80 20 + paraliz_score0		.he 10,20,30,50,80,20,00
   415 3EA1 00 00 00 00 00 01 + paraliz_score1		.he 00,00,00,00,00,01,02
   416 						
   417 3EA8			buf_shape	org *+7
   418 3EAF			buf_shape0	org *+7
   419 3EB6			buf_anim_speed	org *+7
   420 3EBD			buf_anim	org *+7
   421 3EC4			buf_mask	org *+7
   422 3ECB			buf_c0		org *+7
   423 3ED2			buf_c1		org *+7
   424 						
   425 3ED9			usun_paraliz
   426 3ED9-4526> A0 06				ldy #6
   427 						
   428 3EDB B9 00 2B		@		lda sprite_x,y
   429 3EDE F0 2A				beq @+
   430 						
   431 3EE0 B9 A8 3E				lda buf_shape,y
   432 3EE3 99 20 2B				sta sprite_shape,y
   433 3EE6 B9 AF 3E				lda buf_shape0,y
   434 3EE9 99 28 2B				sta sprite_shape0,y
   435 3EEC B9 B6 3E				lda buf_anim_speed,y
   436 3EEF 99 48 2B				sta sprite_anim_speed,y
   437 3EF2 B9 BD 3E				lda buf_anim,y
   438 3EF5 99 40 2B				sta sprite_anim,y
   439 3EF8 B9 C4 3E				lda buf_mask,y
   440 3EFB 99 50 2B				sta sprite_mask,y
   441 3EFE B9 CB 3E				lda buf_c0,y
   442 3F01 99 30 2B				sta sprite_c0,y
   443 3F04 B9 D2 3E				lda buf_c1,y
   444 3F07 99 38 2B				sta sprite_c1,y
   445 						
   446 3F0A 88			@		dey
   447 3F0B D0 CE				bne @-1
   448
   449 3F0D			_after_paraliz		
   450 3F0D A9 28 8D 2D D8			mva #40 after_paraliz
   451 						;lda #$0f
   452 3F12 A6 BB				ldx level_melody
   453 3F14 BD D5 A4				lda tab_melody,x
   454 3F17 20 2F 82				jsr rmt_init0
   455 						
   456 						
   457 						;mva #7 music_speed
   458 3F1A 60					rts
   459
   460 3F1B			animuj_death
   461 3F1B A5 B8				lda death
   462 3F1D C9 01				cmp #1
   463 3F1F D0 3B				bne ad_1
   464 							
   465 						
   466 3F21 A9 02 85 96				mva #2 pom0
   467 						
   468 3F25 AD 00 2B		@		lda sprite_x
   469 3F28 85 9A				sta sprite0x
   470 3F2A AC 10 2B				ldy sprite_y
   471 3F2D C8					iny
   472 3F2E 84 9B				sty sprite0y
   473 						
   474 3F30 20 73 3C				jsr sprawdz_pod_gackiem
   475 3F33 F0 08				beq @+
   476 						
   477 						;jsr sprite_vs_rampa
   478 						;bpl @+
   479 3F35 EE 10 2B				inc sprite_y
   480 3F38 C6 96				dec pom0
   481 3F3A D0 E9				bne @-
   482 						
   483 3F3C 60					rts
   484 						
   485 3F3D E6 B8		@		inc death
   486 3F3F A9 32 8D 2A D8			mva #50 licznik_death
   487 3F44 A9 1E 8D 20 2B			mva #shp_jupada sprite_shape
   488 3F49 8D 28 2B				sta sprite_shape0
   489 3F4C A9 0F 8D 48 2B			mva #15 sprite_anim_speed		;po upadku wolniejszy ruch
   490 3F51 A9 39 8D 04 D2			mva #$39 audf3
   491 3F56 A9 50 8D 06 D2			mva #$50 audf4
   492 3F5B 60					rts
   493
   494 3F5C			ad_1	
   495 3F5C CE 2A D8				dec licznik_death
   496 3F5F F0 0B				beq @+1
   497 3F61 AD 2A D8				lda licznik_death
   498 3F64 C9 28				cmp #40
   499 3F66 D0 03				bne @+
   500 3F68 20 4F B0				jsr rmt_silence
   501 3F6B 60			@		rts
   502
   503 3F6C CE 16 D8		@		dec lives
   504 3F6F 30 3C				bmi ad_gameover
   505 						
   506 3F71			ad_2		
   507
   508 3F71 20 4F B0				jsr rmt_silence
   509 3F74 A9 00 8D 08 D2			mva #0 audctl
   510 						
   511 3F79 20 91 2E				jsr multi.zmaz_duszki
   512
   513 3F7C 20 F5 5A				jsr init_level1
   514 3F7F A9 7C 8D 00 2B			mva #124 sprite_x
   515 3F84 A9 58 8D 10 2B			mva #$58 sprite_y
   516 3F89 A9 00 8D 0C D8			mva #0 ruch_poziom
   517 3F8E 8D 2E D8				sta czy_extra
   518 3F91 A9 01 8D 12 D8			mva #1 spadanie		;koniec ekranu , zaczyna siÄ™ spadanie
   519 3F96 A9 0F 8D 09 D8			mva #joy.LEN_SPADANIE	predkosc_spadanie
   520 3F9B A9 15 8D 20 2B			mva #shp_jdol_srodek sprite_shape
   521 3FA0 A9 1E 8D 22 45			mva #30 ai.czekanie
   522 3FA5 A2 E0				ldx #$e0
   523 3FA7 20 F6 2D				jsr multi.init_sprite2+2
   524 3FAA 4C CC A2				jmp deco.start1
   525 						
   526
   527
   528 						
   529 3FAD			ad_gameover		//game over
   530 						;jsr multi.hide_sprite
   531 						;jsr multi.zmaz_bomby
   532 3FAD 68					pla
   533 3FAE 68					pla
   534 						
   535 3FAF A9 73				lda #$73
   536 3FB1 20 2F 82				jsr rmt_init0
   537 						
   538 3FB4 20 00 80				jsr wait_vbl
   539 						
   540 3FB7 A2 E0				ldx #$e0
   541 3FB9 20 F6 2D				jsr multi.init_sprite2+2	;czysci duszki
   542 3FBC A9 FF 8D D0 24			mva #$ff sizems
   543 						
   544 3FC1 20 97 28				jsr bomb.zgas_bombe
   545 						
   546 3FC4 38					sec
   547 3FC5 AD 00 2B				lda sprite_x
   548 3FC8 E9 44				sbc #64+4
   549 3FCA B0 02				bcs *+4
   550 3FCC A9 00				lda #0
   551 3FCE 18					clc
   552 3FCF 0A					asl
   553 3FD0 C9 E0				cmp #224
   554 3FD2 90 02				bcc *+4
   555 3FD4 A9 DF				lda #223
   556 3FD6 8D 00 2B				sta sprite_x
   557 						
   558 3FD9 38					sec
   559 3FDA AD 10 2B				lda sprite_y
   560 3FDD E9 14				sbc #20
   561 3FDF B0 02				bcs *+4
   562 3FE1 A9 00				lda #0
   563 3FE3 C9 B8				cmp #184
   564 3FE5 90 02				bcc *+4
   565 3FE7 A9 B7				lda #183
   566 3FE9 8D 10 2B				sta sprite_y
   567 						
   568 						
   569 3FEC 20 00 80		go1		jsr wait_vbl
   570 3FEF 20 4B 82				jsr rmt_play0
   571 						
   572 3FF2 20 BF A3				jsr deco.over
   573
   574 						
   575 3FF5			game_over1		
   576 3FF5 20 00 80				jsr wait_vbl
   577 3FF8 A9 00 8D 00 D4			mva #0 dmactl
   578 3FFD 8D D0 24				sta sizems
   579 4000 20 A3 A1				jsr deco.blit5
   580 						
   581 						
   582 4003 A0 29				ldy #41
   583 4005 B9 8F 21		@		lda panel_adr+48,y		;skopiuj hiscore
   584 4008 99 AE 21				sta title0-17,y
   585 400B 88					dey
   586 400C C0 23				cpy #35
   587 400E D0 F5				bne @-
   588 						
   589 4010 20 36 41				jsr sprawdz_wynik
   590 						
   591 4013 A5 97				lda pom0a
   592 4015 10 03				bpl *+5
   593 4017 4C 74 59				jmp tit0
   594 						
   595 401A 20 00 80				jsr wait_vbl
   596 401D A9 1F 8D 00 02 A9 + 		mwa #dli2 dliv
   597 4027 A9 72 8D 22 02 A9 + 		mwa #vblk1 vbiv
   598 						;jsr multi.hide_sprite
   599 4031 20 F4 2D				jsr multi.init_sprite2
   600 						
   601 4034 A9 00 8D 89 23			mva #0 wpis+10
   602 4039 8D 8A 23				sta wpis+11
   603 403C 8D 8B 23				sta wpis+12
   604 						
   605 403F A9 60 8D 00 D0			mva #108-12 hposp0
   606 4044 A9 03 8D 08 D0			mva #3 sizep0
   607 						
   608 4049 A4 97				ldy pom0a
   609 404B B9 6D 26				lda tab_dl+1,y
   610 404E 29 F0				and #$f0
   611 4050 09 02				ora #$02
   612 4052 85 9B				sta pom0e		
   613 						
   614 4054 A4 97				ldy pom0a
   615 4056 BE 2D 41				ldx tab_w1,y
   616 						
   617 4059 A9 E0				lda #$e0
   618 405B A0 08				ldy #8
   619 405D 9D 00 FC		@		sta sprites+$400,x
   620 4060 E8					inx
   621 4061 88					dey
   622 4062 D0 F9				bne @-		
   623 						
   624 4064 20 00 80				jsr wait_vbl
   625 						
   626 						
   627 4067 A9 8F				lda #$8f
   628 4069 20 2F 82				jsr rmt_init0
   629 						
   630 406C A9 C3 8D 02 D4 A9 + 		mwa #dlist_highscore dlptr
   631 4076 A9 C0 8D 09 D4			mva #>znaki1 chbase
   632 407B A9 27 8D 00 D4			mva #39 dmactl
   633 4080 A9 00 8D 1A D0			mva #0 colbak
   634 						
   635 						
   636 4085 A5 97				lda pom0a
   637 4087 0A 0A 0A 0A 0A			:5 asl
   638 408C 69 08				adc #11-3
   639 408E 69 B7				adc #<highscore
   640 4090 85 8C				sta pom
   641 4092 A9 22				lda #>highscore
   642 4094 69 00				adc #0
   643 4096 85 8D				sta pom+1
   644 						
   645 4098 A5 97				lda pom0a
   646 409A 0A 0A 0A				:3 asl
   647 409D 69 57				adc #<wyniki
   648 409F 85 8E				sta pom1
   649 40A1 A9 23				lda #>wyniki
   650 40A3 69 00				adc #0
   651 40A5 85 8F				sta pom1+1
   652 						
   653 40A7 A9 01 85 98				mva #1 pom0b
   654 40AB A0 00				ldy #0
   655 40AD 84 9A				sty pom0d
   656 40AF AD 10 D0				lda trig0
   657 40B2 85 99				sta pom0c
   658 						
   659 						
   660 						
   661 40B4 A9 01 85 BC				mva #1 muza0
   662 					
   663 						
   664 40B8			j0		
   665 40B8 A5 98				lda pom0b
   666 40BA 91 8E				sta (pom1),y	
   667 40BC 09 20				ora #$20
   668 40BE 99 89 23				sta wpis+10,y
   669 40C1 09 A0				ora #$a0
   670 40C3 91 8C				sta (pom),y
   671
   672
   673 40C5 20 00 80				jsr wait_vbl
   674 						
   675 40C8 A5 9A				lda pom0d
   676 40CA F0 08				beq @+1
   677
   678 40CC A2 05				ldx #5
   679 40CE 20 00 80		@		jsr wait_vbl
   680 40D1 CA					dex
   681 40D2 D0 FA				bne @-
   682 						
   683 40D4 A9 00 85 9A		@		mva #0 pom0d		
   684 						
   685 						
   686 						
   687 						
   688 						
   689 40D8 AD 00 D3				lda porta
   690 40DB 29 08				and #8
   691 40DD D0 11				bne @+
   692 						
   693 40DF E6 9A				inc pom0d
   694 40E1 E6 98				inc pom0b
   695 40E3 A5 98				lda pom0b
   696 40E5 C9 1B				cmp #27
   697 40E7 D0 18				bne j1
   698 40E9 A9 01				lda #1
   699 40EB 85 98				sta pom0b
   700 40ED 4C 01 41				jmp j1
   701 						
   702 40F0 AD 00 D3		@		lda porta
   703 40F3 29 04				and #4
   704 40F5 D0 0A				bne j1
   705 						
   706 40F7 E6 9A				inc pom0d
   707 40F9 C6 98				dec pom0b
   708 40FB D0 04				bne j1
   709 40FD A9 1A				lda #26
   710 40FF 85 98				sta pom0b
   711 						
   712 = 4101			j1		equ *
   713 4101 AD 10 D0				lda trig0
   714 4104 C5 99				cmp pom0c
   715 4106 85 99				sta pom0c
   716 4108 F0 AE				beq j0
   717 410A C9 00				cmp #0
   718 410C D0 AA				bne j0
   719 						
   720 410E E6 9A				inc pom0d
   721 4110 C8					iny
   722 4111 C0 03				cpy #3
   723 4113 90 A3				bcc j0
   724 						
   725 4115 A2 64				ldx #100
   726 4117 20 00 80		@		jsr wait_vbl
   727 411A CA					dex
   728 411B D0 FA				bne @-
   729 						
   730 411D 20 00 80				jsr wait_vbl
   731 4120 A9 00 8D 00 D4			mva #0 dmactl
   732 4125 85 BC				sta muza0
   733 4127 20 4F B0				jsr rmt_silence
   734
   735 412A 4C 74 59				jmp tit0
   736
   737 412D 60 6B 76 81 8C	tab_w1	.he 60,6b,76,81,8c		
   738 4132 20 18 10 08		tab_w	dta 32,24,16,8		
   739 						
   740 4136			sprawdz_wynik
   741 4136 A2 00				ldx #0
   742 4138 A0 00				ldy #0
   743 						
   744 413A 38			@		sec
   745 413B BD 5C 23				lda wyniki+5,x
   746 413E ED 0E D8				sbc score
   747 4141 BD 5B 23				lda wyniki+4,x
   748 4144 ED 0F D8				sbc score+1
   749 4147 BD 5A 23				lda wyniki+3,x
   750 414A ED 10 D8				sbc score+2
   751 414D 90 0F				bcc @+
   752 414F C8					iny
   753 4150 98					tya
   754 4151 0A 0A 0A				:3 asl
   755 4154 AA					tax
   756 4155 C0 05				cpy #5
   757 4157 90 E1				bcc @-
   758 4159 A9 FF				lda #255
   759 415B 85 97				sta pom0a
   760 415D 60					rts
   761
   762 415E C0 04		@		cpy #4
   763 4160 F0 12				beq @+1
   764 4162 A2 1F				ldx #31
   765 4164 B9 32 41				lda tab_w,y
   766 4167 85 96				sta pom0
   767 4169 BD 57 23		@		lda wyniki,x
   768 416C 9D 5F 23				sta wyniki+8,x
   769 416F CA					dex
   770 4170 C6 96				dec pom0
   771 4172 D0 F5				bne @-
   772 						
   773 4174 98			@		tya
   774 4175 0A 0A 0A				:3 asl
   775 4178 AA					tax
   776 4179 AD 0E D8				lda score
   777 417C 9D 5C 23				sta wyniki+5,x
   778 417F AD 0F D8				lda score+1
   779 4182 9D 5B 23				sta wyniki+4,x
   780 4185 AD 10 D8				lda score+2
   781 4188 9D 5A 23				sta wyniki+3,x
   782 418B A9 8F				lda #$8f
   783 418D 9D 57 23				sta wyniki,x
   784 4190 9D 58 23				sta wyniki+1,x
   785 4193 9D 59 23				sta wyniki+2,x
   786 4196 AD 0D D8				lda round
   787 4199 9D 5E 23				sta wyniki+7,x
   788 419C 84 97				sty pom0a
   789 						
   790 419E 4C C8 41				jmp przepisz_highscore
   791
   792 						
   793 						
   794 						
   795 41A1			print_wynik
   796 41A1 BD 57 23				lda wyniki,x
   797 41A4 29 0F				and #$0f
   798 41A6 09 90				ora #$90
   799 41A8 91 8C				sta (pom),y
   800 41AA 88					dey
   801 41AB BD 57 23				lda wyniki,x
   802 41AE 4A 4A 4A 4A				:4 lsr
   803 41B2 09 90				ora #$90
   804 41B4 91 8C				sta (pom),y
   805 41B6 88					dey
   806 41B7 CA					dex
   807 41B8 60					rts
   808 						
   809 41B9			print_litera
   810 41B9 BD 57 23				lda wyniki,x
   811 41BC 10 04				bpl @+
   812 41BE A9 8E				lda #$8e
   813 41C0 D0 02				bne *+4
   814 41C2 09 A0		@		ora #$a0
   815 41C4 91 8C				sta (pom),y
   816 41C6 88					dey
   817 41C7 60					rts
   818 						
   819 41C8			przepisz_highscore
   820 41C8 A9 BF 85 8C A9 22 + 		mwa #(highscore+8) pom
   821
   822 41D0 A9 05 85 96				mva #5 pom0
   823 41D4 A2 07				ldx #7
   824 					
   825 41D6 A0 13		@		ldy #19
   826 41D8 20 A1 41				jsr print_wynik
   827 41DB CA					dex
   828 41DC A0 0C				ldy #12
   829 41DE 20 A1 41				jsr print_wynik
   830 41E1 20 A1 41				jsr print_wynik
   831 41E4 20 A1 41				jsr print_wynik
   832 41E7 A0 02				ldy #2
   833 41E9 20 B9 41				jsr print_litera
   834 41EC CA					dex
   835 41ED 20 B9 41				jsr print_litera
   836 41F0 CA					dex
   837 41F1 20 B9 41				jsr print_litera
   838 						
   839 41F4 8A					txa
   840 41F5 18					clc
   841 41F6 69 0F				adc #8+7
   842 41F8 AA					tax
   843 						
   844 41F9 A9 20				lda #32
   845 41FB 20 4E 5B				jsr add_pom
   846
   847 41FE C6 96				dec pom0
   848 4200 D0 D4				bne @-
   849 						
   850 4202 60					rts
   851 						
   852 						
   853 				.endl
   441 4203						icl 'joystick.asm'
Source: joystick.asm
     1 				//obsÅ‚uga sterowania
     2
     3 4203			.local joy
     4
     5 							
     6 4203 F6 00 F6 00 D7 00 + tab_spadanie	dta a(246),a(246),a(215),a(215),a(160),a(160),a(160),a(160),a(80),a(80),a(40),a(40),a(20),a(20),a(10),a(10)
     7 					
     8 = 4223			end_spadanie	equ *
     9 = 000F			LEN_SPADANIE=(end_spadanie-tab_spadanie)/2-1	
    10 							
    11 4223			move_jack
    12 4223 AD 12 D8					lda spadanie
    13 4226 D0 33					bne @+			
    14 4228 AD 10 2B					lda sprite_y
    15 422B C9 D0					cmp #POSY_MAX
    16 422D 90 01					bcc *+3			
    17 422F 60						rts
    18 				//jack chodzi po rampie	
    19 							;clc
    20 4230 69 01					adc #1
    21 4232 85 9B					sta cl.sprite0y
    22 4234 AD 00 2B					lda sprite_x
    23 4237 85 9A					sta cl.sprite0x
    24
    25 4239 20 73 3C					jsr cl.sprawdz_pod_gackiem
    26 423C 90 02					bcc *+4
    27 423E D0 01					bne *+3
    28 4240 60						rts
    29 							
    30 4241 A9 01 8D 12 D8				mva #1 spadanie			;jack zszedÅ‚ z rampy
    31 4246 A9 0F 8D 09 D8				mva #LEN_SPADANIE predkosc_spadanie
    32 424B A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
    33 4250 A9 14 8D 20 2B				mva #shp_jstoi sprite_shape
    34 4255 A9 00 8D 0C D8				mva #0 ruch_poziom
    35 425A 60						rts
    36 								
    37 425B AD 09 D8		@			lda predkosc_spadanie
    38 425E F0 0A					beq @+
    39 4260 AD 0A D8					lda ramka
    40 4263 29 01					and #1
    41 4265 D0 03					bne @+
    42 4267 CE 09 D8					dec predkosc_spadanie			;zwieksza predkosc spadania
    43 							
    44 426A AD 12 D8		@			lda spadanie
    45 426D 10 03 4C 08 43				jmi movej_gora
    46 							
    47 4272			movej_dol	
    48 4272 A9 03 85 96					mva #3 pom0			;jak szybko spadamy
    49 							
    50
    51 4276 AD 09 D8		mvd0		lda predkosc_spadanie
    52 4279 0A						asl
    53 427A AA						tax
    54 427B 18						clc 
    55 427C AD 18 2B					lda sprite_dy
    56 427F 7D 03 42					adc tab_spadanie,x
    57 4282 85 97					sta pom0a
    58 4284 AD 10 2B					lda sprite_y
    59 4287 7D 04 42					adc tab_spadanie+1,x
    60 428A 85 9B					sta cl.sprite0y
    61 428C AD 00 2B					lda sprite_x
    62 428F 85 9A					sta cl.sprite0x
    63
    64 4291 20 73 3C					jsr cl.sprawdz_pod_gackiem
    65 4294 90 17					bcc @+
    66 4296 D0 15					bne @+
    67
    68
    69 4298			mvd1			
    70 4298 A9 00 8D 12 D8				mva #0 spadanie		;koniec spadania
    71 429D 8D 0C D8					sta ruch_poziom
    72 42A0 A9 14 8D 20 2B				mva #shp_jstoi sprite_shape
    73 							
    74 42A5 A9 01					lda #1
    75 42A7 A0 02					ldy #fx_ladowanie
    76 42A9 20 26 4F					jsr sfx.add_fx
    77 							
    78 42AC 60						rts
    79
    80 42AD			@
    81 42AD A5 97					lda pom0a
    82 42AF 8D 18 2B					sta sprite_dy
    83 42B2 A5 9B					lda cl.sprite0y
    84 42B4 8D 10 2B					sta sprite_y
    85 							
    86 							
    87 42B7 C6 96					dec pom0
    88 42B9 D0 BB					bne mvd0
    89 42BB 60						rts
    90 							
    91 42BC 0C 00 18 00 30 00 + tab_lot		dta a(12),a(24),a(48),a(48),a(96),a(96),a(192),a(340)
    92 							
    93 42CC			joystick_down
    94 42CC AD 00 D3					lda porta
    95 42CF 29 0F					and #15
    96 42D1 C9 0D					cmp #13
    97 42D3 F0 01					beq @+1
    98 42D5 60			@			rts
    99 42D6			@		    
   100 42D6 AD 12 D8					lda spadanie
   101 42D9 30 18					bmi mvg1b
   102 42DB AD 09 D8					lda predkosc_spadanie
   103 42DE F0 03					beq @+	
   104 42E0 CE 09 D8					dec predkosc_spadanie
   105 42E3 60			@			rts	
   106
   107 							
   108 							
   109 42E4			mvg1					
   110 42E4 A9 01					lda #1
   111 42E6 20 11 2A					jsr score_add			;punkty po uderzeniu
   112 42E9 20 8B 43					jsr zmien_kolor_P
   113 							
   114 42EC A9 01					lda #1
   115 42EE A0 08					ldy #fx_uderzenie
   116 42F0 20 26 4F					jsr sfx.add_fx
   117 42F3			mvg1b			
   118 42F3 A9 01 8D 12 D8				mva #1 spadanie		;koniec ekranu , zaczyna siÄ™ spadanie
   119 42F8 A9 0F 8D 09 D8				mva #LEN_SPADANIE	predkosc_spadanie
   120 42FD A9 15 8D 20 2B				mva #shp_jdol_srodek sprite_shape
   121 4302 A9 00 8D 0C D8				mva #0 ruch_poziom
   122 							
   123 4307 60						rts
   124
   125 4308 A9 03 85 96		movej_gora	mva #3 pom0	
   126 430C			mvg0		
   127 430C CE 13 D8		@			dec wysokosc_lotu
   128 430F F0 E2					beq mvg1b
   129 4311 AD 13 D8					lda wysokosc_lotu
   130 4314 C9 E6		_lot16		cmp #LOT_START-16
   131 4316 90 08					bcc @+
   132 4318 49 FF					eor #255
   133 431A 69 F5		_lot1		adc #LOT_START-1
   134 431C 4A						lsr
   135 431D 4C 29 43					jmp @+1
   136 							
   137 							
   138 4320 4A			@			lsr
   139 4321 4A						lsr
   140 4322 4A						lsr
   141 4323 C9 08					cmp #8
   142 4325 90 02					bcc @+
   143 4327 A9 07					lda #7				
   144 4329 0A			@			asl
   145 432A AA						tax
   146 							
   147 							
   148 432B 38						sec 
   149 432C AD 18 2B					lda sprite_dy
   150 432F FD BC 42					sbc tab_lot,x
   151 4332 85 97					sta pom0a
   152 4334 AD 10 2B					lda sprite_y
   153 4337 FD BD 42					sbc tab_lot+1,x
   154 433A 85 9B					sta cl.sprite0y
   155 433C AD 00 2B					lda sprite_x
   156 433F 85 9A					sta cl.sprite0x
   157 							
   158
   159 4341 20 34 3C					jsr cl.sprawdz_nad_gackiem		
   160 4344 F0 9E					beq mvg1
   161 							
   162 							;jsr cl.sprite_vs_rampa
   163 							;bpl mvg1
   164 							
   165 4346 A5 9B 8D 10 2B				mva cl.sprite0y sprite_y
   166 434B A5 97 8D 18 2B				mva pom0a sprite_dy
   167 							
   168 4350 C6 96					dec pom0
   169 4352 D0 B8					bne mvg0
   170 4354 60						rts
   171
   172 4355			fire		
   173 4355 AD 10 D0					lda trig0
   174 4358 CD 06 D8					cmp trig0s
   175 435B F0 18					beq @+
   176 435D C9 00					cmp #0
   177 435F 8D 06 D8					sta trig0s
   178 4362 F0 12					beq @+1
   179 							
   180 4364 AD 12 D8					lda spadanie
   181 4367 10 0C					bpl @+
   182 							
   183 4369 AD 13 D8					lda wysokosc_lotu
   184 436C C9 50					cmp #120-40
   185 436E 90 05					bcc @+
   186 4370 A9 50 8D 13 D8				mva #120-40 wysokosc_lotu
   187 							
   188 4375 60			@			rts
   189 							
   190 4376 AD 12 D8		@			lda spadanie
   191 4379 F0 52					beq lot_w_gore1
   192 							
   193 437B A9 0F 8D 09 D8				mva #LEN_SPADANIE predkosc_spadanie		;zmniejsz poczatkowa predkosc spadania
   194 4380 A9 00 8D 0C D8				mva #0 ruch_poziom
   195 4385 A9 01 8D 12 D8				mva #1 spadanie
   196 							
   197 438A 60						rts
   198
   199 = 00F6			LOT_START=246
   200
   201 438B			zmien_kolor_P
   202 438B A5 C0					lda kolor_P
   203 438D F0 3D					beq @+			;=0 nie ma paralizu
   204 438F 18						clc
   205 4390 69 01					adc #1
   206 4392 C9 08					cmp #8
   207 4394 D0 02					bne *+4
   208 4396 A9 01					lda #1
   209 4398 85 C0					sta kolor_P			;od 1 do 7
   210 439A AA						tax
   211 							
   212 439B A0 44					ldy	#$44
   213 439D A9 15 91 B9 C8				mva	#$15	(fx_ptr),y+	; CSEL ,nr koloru
   214 43A2 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety
   215 43A6 A0 46					ldy	#$46	; CR
   216 43A8 BD 83 56					lda paraliz_tab0,x
   217 43AB 91 B9 C8					sta	(fx_ptr),y+		;RED
   218 43AE BD 8A 56					lda paraliz_tab1,x
   219 43B1 91 B9 C8					sta (fx_ptr),y+	;GREEN
   220 43B4 BD 91 56					lda paraliz_tab2,x
   221 43B7 91 B9					sta (fx_ptr),y		;BLUE
   222 43B9 A0 46					ldy #$46
   223 43BB BD 98 56					lda paraliz_tab0a,x
   224 43BE 91 B9 C8					sta	(fx_ptr),y+		;RED
   225 43C1 BD 9F 56					lda paraliz_tab1a,x
   226 43C4 91 B9 C8					sta (fx_ptr),y+	;GREEN
   227 43C7 BD A6 56					lda paraliz_tab2a,x
   228 43CA 91 B9					sta (fx_ptr),y		;BLUE
   229 									
   230 43CC 60			@			rts
   231 						
   232 43CD			lot_w_gore1
   233 43CD A9 01					lda #1
   234 43CF 20 11 2A					jsr score_add			;punkty po uderzeniu
   235 43D2 20 8B 43					jsr zmien_kolor_P
   236 						
   237 43D5			lot_w_gore
   238 43D5 AE 10 2B					ldx sprite_y
   239 43D8 CA						dex
   240 43D9 86 9B					stx cl.sprite0y
   241 43DB AD 00 2B 85 9A				mva sprite_x cl.sprite0x
   242 							
   243 43E0 20 34 3C					jsr cl.sprawdz_nad_gackiem
   244 43E3 F0 1F					beq @+
   245
   246
   247 43E5 A9 F6 8D 13 D8	_lot0		mva #LOT_START wysokosc_lotu
   248 43EA AD 20 2B 8D 07 D8				mva sprite_shape last_shape
   249 43F0 A9 FF 8D 12 D8				mva #-1 spadanie		
   250 43F5 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed		;nie animuj postaci
   251 43FA A9 18 8D 20 2B				mva #shp_jgora_srodek	sprite_shape	
   252 43FF A9 00 8D 0C D8				mva #0 ruch_poziom
   253
   254 4404 60			@			rts
   255
   256 4405 18 14 15		joy_tab0	dta shp_jgora_srodek,shp_jstoi,shp_jdol_srodek
   257
   258 4408			joystick
   259 4408 AD 00 D3					lda porta
   260 440B 29 0C					and #$0c
   261 440D C9 0C					cmp #$0c
   262 440F D0 1A					bne @+1
   263 4411 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
   264 4416 A9 00 8D 0C D8				mva #0 ruch_poziom
   265 441B AC 12 D8					ldy spadanie
   266 441E F0 0A					beq @+
   267 4420 C8						iny
   268 4421 B9 05 44					lda joy_tab0,y
   269 4424 8D 20 2B					sta sprite_shape
   270 4427 8D 28 2B					sta sprite_shape0
   271 442A 60			@			rts
   272
   273 							
   274 442B 24 86		@			bit bit2		;lewo
   275 442D D0 77					jne @+1
   276 							
   277 442F AD 0C D8					lda ruch_poziom
   278 4432 C9 01					cmp #1
   279 4434 F0 3E					beq @+
   280
   281 4436 AD 12 D8					lda spadanie
   282 4439 F0 22					beq j0
   283 443B 10 10					bpl j2
   284 443D A9 1A 8D 20 2B				mva #shp_jgora_lewo sprite_shape
   285 4442 8D 28 2B					sta sprite_shape0
   286 4445 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
   287 444A 4C 6F 44					jmp j1
   288 444D A9 17 8D 20 2B	j2			mva #shp_jdol_lewo sprite_shape
   289 4452 8D 28 2B					sta sprite_shape0
   290 4455 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
   291 445A 4C 6F 44					jmp j1
   292 							
   293 445D A9 0C 8D 20 2B	j0			mva #shp_jlewo sprite_shape
   294 4462 8D 28 2B					sta sprite_shape0
   295 4465 A9 03 8D 48 2B				mva #3 sprite_anim_speed
   296 446A A9 03 8D 50 2B				mva #%11 sprite_mask
   297 446F A9 01 8D 0C D8	j1			mva #1 ruch_poziom
   298 							
   299 4474			@			
   300 4474 38						sec
   301 4475 AD 08 2B					lda sprite_dx
   302 4478 E9 00		jlewo_m		sbc #0
   303 447A 85 97					sta pom0a
   304 447C AD 00 2B					lda sprite_x
   305 447F E9 01		jlewo_s		sbc #1
   306 4481 85 9A					sta cl.sprite0x
   307 							
   308 							;ldy sprite_x
   309 							;dey
   310 							;sty cl.sprite0x
   311 4483 AD 10 2B					lda sprite_y
   312 4486 85 9B					sta cl.sprite0y
   313 							
   314 4488 20 E7 3B					jsr cl.sprawdz_lewo_gacek
   315 448B F0 18					beq j10
   316 							;bne *+3
   317 							;dta 2
   318 							
   319 							;jsr cl.sprite_vs_rampa
   320 							;bpl j10
   321 							
   322 448D A5 97					lda pom0a
   323 448F 8D 08 2B					sta sprite_dx
   324 4492 A5 9A					lda cl.sprite0x
   325 4494 8D 00 2B					sta sprite_x
   326 							
   327 							;dec sprite_x
   328 							
   329 4497 AD 28 2B					lda sprite_shape0
   330 449A C9 0C					cmp #shp_jlewo
   331 449C D0 07					bne j10
   332 							
   333 449E A0 00					ldy #fx_krok
   334 44A0 A9 00					lda #0
   335 44A2 20 26 4F					jsr sfx.add_fx
   336 							
   337 44A5 60			j10			rts
   338 							
   339 							
   340 44A6 24 87		@			bit bit3
   341 44A8 F0 01					beq *+3
   342 44AA 60						rts
   343 44AB AD 0C D8					lda ruch_poziom				;prawo
   344 44AE C9 02					cmp #2
   345 44B0 F0 3E					beq @+
   346 							
   347 44B2 AD 12 D8					lda spadanie
   348 44B5 F0 22					beq j3
   349 44B7 10 10					bpl j4
   350 44B9 A9 19 8D 20 2B				mva #shp_jgora_prawo sprite_shape
   351 44BE 8D 28 2B					sta sprite_shape0
   352 44C1 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
   353 44C6 4C EB 44					jmp j5
   354 44C9 A9 16 8D 20 2B	j4			mva #shp_jdol_prawo sprite_shape
   355 44CE 8D 28 2B					sta sprite_shape0
   356 44D1 A9 FF 8D 48 2B				mva #-1 sprite_anim_speed
   357 44D6 4C EB 44					jmp j5			
   358 							
   359 44D9 A9 10 8D 20 2B	j3			mva #shp_jprawo sprite_shape
   360 44DE 8D 28 2B					sta sprite_shape0
   361 44E1 A9 03 8D 48 2B				mva #3 sprite_anim_speed
   362 44E6 A9 03 8D 50 2B				mva #%11 sprite_mask
   363 							
   364 44EB A9 02 8D 0C D8	j5			mva #2 ruch_poziom
   365 						
   366 44F0			@			
   367 44F0 18						clc
   368 44F1 AD 08 2B					lda sprite_dx
   369 44F4 69 00		jprawo_m	adc #0
   370 44F6 85 97					sta pom0a
   371 44F8 AD 00 2B					lda sprite_x
   372 44FB 69 01		jprawo_s	adc #1
   373 44FD 85 9A					sta cl.sprite0x
   374 							;ldy sprite_x
   375 							;iny
   376 							;sty cl.sprite0x
   377 44FF AD 10 2B					lda sprite_y
   378 4502 85 9B					sta cl.sprite0y
   379 							
   380 4504 20 D9 3B					jsr cl.sprawdz_prawo_gacek
   381 4507 F0 18					beq j50
   382 							;jsr cl.sprite_vs_rampa
   383 							;bpl j50
   384 							
   385 4509 A5 97					lda pom0a
   386 450B 8D 08 2B					sta sprite_dx
   387 450E A5 9A					lda cl.sprite0x
   388 4510 8D 00 2B					sta sprite_x
   389 									
   390 							;inc sprite_x
   391 							
   392 4513 AD 28 2B					lda sprite_shape0
   393 4516 C9 10					cmp #shp_jprawo
   394 4518 D0 07					bne j50
   395 							
   396 451A A0 00					ldy #fx_krok
   397 451C A9 00					lda #0
   398 451E 20 26 4F					jsr sfx.add_fx
   399 							
   400 4521 60			j50			rts
   401
   402 				.endl
   442 4522						icl 'ai.asm'
Source: ai.asm
     1 				//obsluga przeciwnikow
     2
     3 				//typy przeciwnikow
     4 = 0000			t_oko=0
     5 = 0001			t_czapka=1			;lewo i prawo
     6 = 0002			t_radar=2
     7 = 0003			t_ufo=3
     8 = 0004			t_globus=4
     9 = 0005			t_ptak=5
    10 = 0006			t_bonus=6
    11 = 0007			t_extra=7
    12 = 0008			t_paraliz=8
    13 = 000A			t_mumia=10
    14 = 000B			t_none=11
    15
    16 = 0080			t_score=128
    17
    18 4522			.local ai
    19
    20 				//staÅ‚e
    21 = 0004			explo_anim=4
    22 = 000F			explo_anim_speed=15
    23
    24
    25
    26 = 0001			ai_explo=1
    27 = 0002			ai_spada=2
    28 = 0003			ai_chodzi=3
    29 = 0004			ai_przemiana=4
    30 = 0005			ai_wylosuj=5
    31
    32 = 0006			ai_oko=6
    33 = 0007			ai_czapka=7
    34 = 0008			ai_radar=8
    35 = 0009			ai_ufo=9
    36 = 000A			ai_globus=10
    37 = 000B			ai_ptak=11
    38 = 000C			ai_bonus=12
    39 = 000D			ai_extra=13
    40 = 000E			ai_paraliz=14
    41
    42 				//zmienne
    43 4522 00			czekanie	dta b(0)			;kiedy pierwszy enemy
    44 4523 96			czekanie1	dta b(150)			;kiedy nastepny
    45
    46 4524 60			mumia_speed	dta b(96)
    47 4525 08			mumia_kolor	dta b($08)
    48 4526 96			ile_chodzenia	dta b(150)		;ile czasu mumia chodzi po rampie zanim spadnie
    49
    50
    51 				//tablice
    52 4527			ruch		org *+8			;typ ai
    53 452F			ruch_x		org *+8
    54 4537			ruch_dx		org *+8
    55 453F			ruch_y		org *+8
    56 4547			ruch_dy		org *+8
    57 454F			ruch_p0		org *+8			;tablica pomocnicza
    58 4557			ruch_p1		org *+8
    59 455F			ruch_p2		org *+8
    60
    61
    62 4567-466C> 00 00 20 47 + prepare_tab dta a(0),a(prepare_explo),a(prepare_spada),a(prepare_chodzi),a(prepare_przemiana),a(prepare_wylosuj)
    63 4573 52 48 33 48 4A 48 + 			dta a(prepare_oko),a(prepare_czapka),a(prepare_radar),a(prepare_ufo),a(prepare_globus)
    64 457D 70 48 D4 48 1C 49 + 			dta a(prepare_ptak),a(prepare_bonus),a(prepare_extra),a(prepare_paraliz)
    65 4585 00 00 D2 49 DD 49 + ai_tab		dta a(0),a(ruch_explo),a(ruch_spada),a(ruch_chodzi),a(ruch_przemiana),a(ruch_wylosuj)
    66 4591 49 4B 49 4B 49 4B + 			dta a(ruch_oko),a(ruch_czapka),a(ruch_radar),a(ruch_ufo),a(ruch_globus)
    67 459B D6 4C 7B 4E 7B 4E + 			dta a(ruch_ptak),a(ruch_bonus),a(ruch_extra),a(ruch_paraliz)
    68
    69 45A3 0E 02 00		paraliz_tab	dta 14,2,0		;przy ilu bombach pojawi sie paraliz
    70
    71 				//pojawianie sie nowych przeciwnikÃ³w
    72 45A6			new_enemy
    73 45A6 AD 0A D8				lda ramka
    74 45A9 29 3F				and #63
    75 45AB D0 11				bne @+
    76
    77 45AD AD 2E D8				lda czy_extra
    78 45B0 D0 0C				bne @+
    79 45B2 AD 0A D2				lda random
    80 45B5 25 C7				and random_extra
    81 45B7 C9 01				cmp #1
    82 45B9 D0 03				bne @+
    83 45BB 8D 2E D8				sta czy_extra
    84 = 45BE			@		equ *		
    85
    86 45BE AD 0A D8				lda ramka
    87 45C1 29 03				and #3
    88 45C3 D0 56				bne @+1		;co czwartÄ… ramkÄ™
    89 45C5 AD 07 2B				lda sprite_x+7
    90 45C8 D0 51				bne @+1
    91 						
    92 						
    93 45CA CE 15 D8				dec licznik_bonus
    94 45CD D0 4C				bne @+1
    95 45CF AD 9F 23 8D 15 D8			mva next_bonus licznik_bonus
    96 						
    97 45D5 AD 2E D8				lda czy_extra
    98 45D8 F0 16				beq @+
    99 						;lda random								;extra przeniesione wyzej
   100 						;and random_extra
   101 						;cmp #2
   102 						;bne @+
   103 45DA A9 00 8D 2E D8			mva #0 czy_extra
   104 45DF A5 C7				lda random_extra
   105 45E1 0A					asl
   106 45E2 09 01				ora #1
   107 45E4 85 C7				sta random_extra
   108 45E6 A9 0D				lda #ai_extra
   109 45E8 A2 07				ldx #7
   110 45EA 20 07 47				jsr add_ai
   111 						;lda random_extra
   112 						;sec
   113 						;rol
   114 						;and #31
   115 						;sta random_extra
   116 45ED 4C 1B 46				jmp @+1
   117 					
   118 45F0 A5 C3		@		lda paraliz_flag
   119 45F2 F0 11				beq ne0
   120 						
   121 45F4 C6 C3				dec paraliz_flag
   122 45F6 A9 0E				lda #ai_paraliz
   123 45F8 A2 07				ldx #7
   124 45FA 20 07 47				jsr add_ai				;przy opowiedniej liczbie bomb pojawi sie paraliz
   125 						
   126 45FD A0 0A				ldy #fx_paraliz
   127 45FF 20 02 4F				jsr sfx.add_fx1
   128 						
   129 						
   130 4602 4C 1B 46				jmp @+
   131 						
   132 4605			ne0		
   133 4605 A5 C2				lda bonus_flag
   134 4607 F0 12				beq @+					;teraz nie moÅ¼e byÄ‡ B
   135 						
   136 						
   137 4609 AD 14 D8				lda bonus
   138 460C C9 04				cmp #4
   139 460E B0 0B				bcs @+
   140 4610 A9 0C				lda #ai_bonus
   141 4612 A2 07				ldx #7
   142 4614 20 07 47				jsr add_ai
   143 						
   144 4617 A9 00 85 C2				mva #0 bonus_flag	
   145
   146 461B A5 A2		@		lda ile_ptakow
   147 461D C5 A4				cmp max_ptakow
   148 461F B0 17				bcs @+
   149 						
   150 4621 C6 A3				dec licznik_ptak
   151 4623 D0 13				bne @+
   152 4625 E6 A2				inc ile_ptakow
   153 4627			_ptak60		
   154 4627 A9 3C 85 A3				mva #60 licznik_ptak
   155 						
   156 						
   157 462B A2 06				ldx #6
   158 462D BD 00 2B				lda sprite_x,x
   159 4630 F0 01				beq *+3
   160 4632 CA					dex
   161 						
   162 4633 A9 0B				lda #ai_ptak
   163 4635 20 07 47				jsr add_ai
   164 = 4638			@		equ *
   165
   166 4638 AD 22 45				lda czekanie		;czy na cos czekamy?
   167 463B D0 01				bne *+3
   168 463D 60			@		rts
   169 						
   170 463E CE 22 45				dec czekanie
   171 4641 D0 FA				bne @-
   172 						
   173 4643 E6 A0				inc ile_enemy
   174 						
   175 4645 A2 01				ldx #1
   176 4647 BD 00 2B		@		lda sprite_x,x
   177 464A F0 04				beq @+
   178 464C E8					inx
   179 464D D0 F8				bne @-
   180 464F 60					rts
   181 = 4650			@		equ *					;poszukaj pustego duszka
   182 						
   183 4650 20 77 46				jsr add_enemy0
   184 4653 A5 A0				lda ile_enemy
   185 4655 C5 A1				cmp max_enemy
   186 4657 90 06				bcc @+
   187 						
   188 4659 A9 00 8D 22 45			mva #0 czekanie			;wszyscy na ekranie
   189 465E 60					rts
   190 						
   191 465F AD 23 45		@		lda czekanie1
   192 4662 AC 11 D8				ldy ile_ramp
   193 4665 D0 02				bne *+4
   194 4667 A9 1E				lda #30
   195 4669 8D 22 45				sta czekanie
   196 466C 60					rts
   197 						
   198 466D			rampa_tab	org *+4
   199 4671			tab_maska
   200 4671-4AD3> FC 00 FF			.he fc,00,ff
   201 4674			tab_maska1
   202 4674 00 00 03				.he 00,00,03
   203 				//dodajemy mumiÄ™, na poczÄ…tku sam wybuch		
   204 4677			add_enemy0		
   205 							
   206 4677 A9 0B 9D 58 2B			mva #t_none sprite_typ,x
   207 467C A9 12 9D 10 2B			mva #$12 sprite_y,x
   208 4681 A9 30 9D 20 2B			mva #shp_explo	sprite_shape,x
   209 4686 9D 28 2B				sta sprite_shape0,x
   210 4689 A9 0F 9D 48 2B			mva #explo_anim_speed sprite_anim_speed,x
   211 468E AD 7B 56 9D 30 2B			mva explo_c0 sprite_c0,x
   212 4694 AD 7C 56 9D 38 2B			mva explo_c1 sprite_c1,x
   213 469A A9 04 9D 40 2B			mva #explo_anim sprite_anim,x
   214 469F A9 03 9D 50 2B			mva #%11 sprite_mask,x
   215
   216 						
   217 46A4 AD 11 D8				lda ile_ramp
   218 46A7 F0 36				beq @+
   219 						
   220 46A9 A0 02				ldy #2
   221 46AB AD 00 2B				lda sprite_x
   222 46AE 10 02				bpl *+4
   223 46B0 A0 00				ldy #0
   224 						
   225 46B2 B9 71 46				lda tab_maska,y
   226 46B5 85 97				sta pom0a
   227 46B7 B9 74 46				lda tab_maska1,y
   228 46BA 85 98				sta pom0b
   229 						
   230 						
   231 46BC AD 0A D2		ade0	lda random
   232 46BF 39 6D 46				and rampa_tab,y
   233 46C2 18					clc
   234 46C3 79 6E 46				adc rampa_tab+1,y
   235 46C6 25 97				and pom0a
   236 46C8 05 98				ora pom0b
   237 46CA 85 96				sta pom0
   238 46CC 38					sec
   239 46CD ED 00 2B				sbc sprite_x
   240 46D0 B0 04				bcs *+6
   241 46D2 49 FF				eor #255
   242 46D4 69 01				adc #1
   243 46D6 C9 0A				cmp #10
   244 46D8 90 E2				bcc ade0
   245 46DA A5 96				lda pom0
   246 						
   247 46DC 4C F9 46				jmp @+1
   248 						
   249 						
   250 46DF AD 0A D2		@		lda random
   251 46E2 29 6F				and #%01101111
   252 46E4 18					clc
   253 46E5 69 46				adc #70
   254 46E7 85 96				sta pom0
   255 						
   256 46E9 38					sec
   257 46EA ED 00 2B				sbc sprite_x
   258 46ED B0 04				bcs *+6
   259 46EF 49 FF				eor #255
   260 46F1 69 01				adc #1
   261 46F3 C9 1E				cmp #30
   262 46F5 90 E8				bcc @-
   263 46F7 A5 96				lda pom0
   264 						
   265 46F9			@		;sta mumia_x
   266 46F9 C9 B8				cmp #POSX_MAX
   267 46FB 90 02				bcc @+
   268 46FD A9 B8				lda #POSX_MAX
   269 46FF 9D 00 2B		@		sta sprite_x,x
   270
   271 4702 A9 01				lda #ai_explo	
   272 4704 4C 07 47				jmp add_ai
   273
   274 				//dodaje nowe ai
   275 4707			add_ai
   276 4707 9D 27 45				sta ruch,x
   277 470A 0A					asl
   278 470B A8					tay
   279 470C B9 67 45				lda prepare_tab,y
   280 470F 8D 1E 47				sta _adi+1
   281 4712 B9 68 45				lda prepare_tab+1,y
   282 4715 8D 1F 47				sta _adi+2
   283 4718 A9 00 9D 88 2B			mva #0 sprite_score_licznik,x
   284
   285 471D 4C FF FF		_adi	jmp $ffff
   286
   287 4720			prepare_explo
   288 4720 A9 14 9D 4F 45			mva #20 ruch_p0,x			;czas wybuchu
   289 4725 60					rts
   290
   291 4726			prepare_spada
   292 						
   293 4726 A9 34 9D 20 2B			mva #shp_mumia_spada sprite_shape,x
   294 472B 9D 28 2B				sta sprite_shape0,x
   295 472E A9 07 9D 48 2B			mva #7 sprite_anim_speed,x
   296 4733 A9 02 9D 40 2B			mva #2 sprite_anim,x
   297 4738 A9 01 9D 50 2B			mva #1 sprite_mask,x
   298 473D A9 02 9D 30 2B			mva #$02 sprite_c0,x
   299 4742 AD 25 45 9D 38 2B			mva mumia_kolor sprite_c1,x
   300 4748			mumia_spada		
   301 4748 A9 FF 9D 47 45			mva #$ff ruch_dy,x			
   302 474D 60					rts
   303 						
   304 474E			prepare_chodzi
   305 474E BD 10 2B				lda sprite_y,x
   306 4751 C9 D0				cmp #POSY_MAX
   307 4753 D0 05				bne @+
   308 						
   309 4755 A9 04				lda #ai_przemiana	;na samym dole, wÅ‚Ä…cz przemianÄ™
   310 4757 4C 07 47				jmp add_ai
   311 					
   312
   313 475A AD 0A D2		@		lda random
   314 475D 29 04				and #4
   315 475F 09 38				ora #shp_mumia_lewo
   316 4761 9D 20 2B				sta sprite_shape,x
   317 						;mva #shp_mumia_lewo sprite_shape,x
   318 4764 9D 28 2B				sta sprite_shape0,x
   319 4767 A9 03 9D 40 2B			mva #3 sprite_anim,x
   320 476C A9 03 9D 50 2B			mva #%11 sprite_mask,x
   321 4771 A9 07 9D 48 2B			mva #7 sprite_anim_speed,x
   322 4776 AD 24 45 9D 37 45			mva mumia_speed ruch_dx,x
   323 477C AD 26 45 9D 4F 45			mva ile_chodzenia ruch_p0,x
   324 4782 60					rts
   325 						
   326 4783			prepare_przemiana
   327 4783 A9 0B 9D 58 2B			mva #t_none sprite_typ,x
   328 4788 A9 40 9D 20 2B			mva #shp_przemiana sprite_shape,x
   329 478D 9D 28 2B				sta sprite_shape0,x
   330 4790 A9 04 9D 40 2B			mva #4 sprite_anim,x
   331 4795 A9 03 9D 50 2B			mva #%11 sprite_mask,x
   332 479A A9 0F 9D 48 2B			mva #15 sprite_anim_speed,x
   333 479F A9 64 9D 30 2B			mva #$64 sprite_c0,x
   334 47A4 A9 38 9D 38 2B			mva #$38 sprite_c1,x
   335 47A9 A9 23 9D 4F 45			mva #35 ruch_p0,x					;czas przemiany
   336 47AE 60					rts
   337 					
   338 47AF 58 70 2C 60 20	tab0	dta shp_oko,shp_czapka,shp_radar,shp_ufo,shp_globus
   339 47B4 62 04 02 04 02	tab1	.he 62,04,02,04,02
   340 47B9 38 E8 38 B8 98	tab2	.he 38,e8,38,b8,98
   341 47BE 03 07 07 03 07	tab3	dta 3,7,7,3,7
   342 47C3 00 01 02 03 04	tab4	dta t_oko,t_czapka,t_radar,t_ufo,t_globus
   343 47C8 06 07 08 09 0A	tab5	dta ai_oko,ai_czapka,ai_radar,ai_ufo,ai_globus
   344
   345 47CD 07 04 04 06 09	tab6	dta 7,4,4,6,9
   346 47D2 07 03 03 07 0F	tab7	dta 7,3,3,7,15
   347
   348 				//losuje typ przeciwnika
   349 47D7			prepare_wylosuj	
   350 47D7 AD 0A D2				lda random
   351 47DA 29 03				and #3
   352 47DC C9 03				cmp #3
   353 47DE F0 17				beq @+
   354 						
   355 47E0 AD 0A D2				lda random
   356 47E3 29 03				and #3
   357 47E5 C9 02				cmp #2
   358 47E7 F0 0E				beq @+
   359 						
   360 47E9 AD 0A D2				lda random
   361 47EC 29 03				and #3
   362 47EE C9 01				cmp #1			;czapka
   363 47F0 F0 05				beq @+
   364 						
   365 47F2 AD 0A D2				lda random
   366 47F5 29 04				and #4
   367 47F7			@		
   368 47F7 A8					tay
   369 47F8 B9 AF 47				lda tab0,y
   370 47FB 9D 20 2B				sta sprite_shape,x
   371 47FE 9D 28 2B				sta sprite_shape0,x
   372 						;mva #4 sprite_anim,x
   373 4801 B9 CD 47 9D 40 2B			mva tab6,y sprite_anim,x
   374 						;mva #%11 sprite_mask,x
   375 4807 B9 D2 47 9D 50 2B			mva tab7,y sprite_mask,x
   376 480D B9 BE 47				lda tab3,y
   377 4810 9D 48 2B				sta sprite_anim_speed,x
   378 4813 B9 B4 47				lda tab1,y
   379 4816 9D 30 2B				sta sprite_c0,x
   380 4819 B9 B9 47				lda tab2,y
   381 481C 9D 38 2B				sta sprite_c1,x
   382 481F B9 C3 47				lda tab4,y
   383 4822 9D 58 2B				sta sprite_typ,x
   384 						
   385 4825 AD 0A D2				lda random
   386 4828 29 03				and #3
   387 482A 9D 4F 45				sta ruch_p0,x
   388 						
   389 482D B9 C8 47				lda tab5,y
   390 4830 4C 07 47				jmp add_ai
   391
   392 4833			prepare_czapka
   393 4833 A9 00 9D 5F 45			mva #0 ruch_p2,x
   394 4838 AD 0A D2				lda random
   395 483B 29 04				and #4
   396 483D 9D 4F 45				sta ruch_p0,x
   397 4840 D0 20				bne prep3
   398 4842 A9 74 9D 20 2B			mva #shp_czapka1 sprite_shape,x		;prawo
   399 4847 4C 62 48				jmp prep3
   400 						
   401 						
   402 484A			prepare_radar
   403 484A A9 00				lda #0
   404 484C 9D 5F 45				sta ruch_p2,x
   405 484F 4C 5A 48				jmp prep2
   406 							
   407 4852			prepare_ufo		
   408 4852			prepare_oko
   409 4852			prepare_globus
   410 4852 AD 0A D2				lda random
   411 4855 29 03				and #3
   412 4857 9D 5F 45				sta ruch_p2,x
   413 485A			prep2
   414 485A AD 0A D2				lda random
   415 485D 29 04				and #4
   416 485F 9D 4F 45				sta ruch_p0,x		;kierunek w poziomie
   417 4862			prep3		
   418 4862 AD 0A D2				lda random
   419 4865 4A					lsr
   420 4866 29 04				and #4
   421 4868 9D 57 45				sta ruch_p1,x		;kierunek w pionie
   422 						
   423 486B 60					rts
   424 						
   425 486C 08 04 00 04		ptak_tab2	dta shp_ptak_prawo,shp_ptak_pion,shp_ptak_lewo,shp_ptak_pion	
   426
   427 4870			prepare_ptak
   428 4870 A9 B0				lda #$b0
   429 4872 AC 00 2B				ldy sprite_x
   430 4875 10 02				bpl @+
   431 4877 A9 48				lda #$48
   432 4879 9D 00 2B		@		sta sprite_x,x
   433 487C 29 08				and #$08
   434 487E 4A 4A				:2 lsr
   435 4880 A8					tay
   436 						
   437 4881 A9 01 9D 5F 45			mva #1 ruch_p2,x
   438 4886 A9 10				lda #$10
   439 4888 E0 05				cpx #5
   440 488A D0 09				bne @+
   441 488C A9 03 9D 5F 45			mva #3 ruch_p2,x
   442 4891 A9 D0				lda #$d0
   443 4893 A0 03				ldy #3
   444 4895 9D 10 2B		@		sta sprite_y,x
   445 								
   446 4898 A9 05 9D 58 2B			mva #t_ptak sprite_typ,x
   447
   448
   449 489D 8A					txa					;kaÅ¼dy ptak zaczyna w innej osi
   450 489E 4A					lsr
   451 489F 29 01				and #1
   452 48A1 9D 4F 45				sta ruch_p0,x		;kierunek poszukiwania, 0=poziom, 1=pion	
   453 48A4 98					tya
   454 48A5 29 02				and #2
   455 48A7 9D 57 45				sta ruch_p1,x		;kierunek poruszania sie ptaka 0=prawo,1=dol,2=lewo,3=gora
   456 						
   457 48AA A8					tay
   458 48AB B9 6C 48				lda ptak_tab2,y
   459 48AE 9D 20 2B				sta sprite_shape,x
   460 48B1 9D 28 2B				sta sprite_shape0,x
   461 48B4 A9 07 9D 48 2B			mva #7 sprite_anim_speed,x
   462 48B9 A9 03 9D 40 2B			mva #3 sprite_anim,x			;ilosc klatek animacji
   463 48BE A9 03 9D 50 2B			mva #%11 sprite_mask,x
   464 48C3 A9 04 9D 30 2B			mva #$04 sprite_c0,x
   465 48C8 A9 E8				lda #$e8
   466 48CA E0 05				cpx #5
   467 48CC D0 02				bne @+
   468 48CE A9 48				lda #$48				;inny kolor drugiego ptaka
   469 48D0 9D 38 2B		@		sta sprite_c1,x
   470 						
   471 48D3 60					rts
   472 						
   473 				//przygotowuje pojawienie siÄ™ literki B	
   474 48D4			prepare_bonus		
   475 48D4 A9 44 9D 20 2B			mva #shp_bonus sprite_shape,x
   476 48D9 9D 28 2B				sta sprite_shape0,x
   477 48DC A9 D6 9D 30 2B			mva #$d6 sprite_c0,x
   478 48E1 A9 BA 9D 38 2B			mva #$ba sprite_c1,x
   479 						
   480 48E6 A9 06 9D 58 2B			mva #t_bonus sprite_typ,x		
   481 							
   482 48EB			prepare_bonus1	
   483 48EB A9 6E 9D 57 45			mva #110 ruch_p1,x		;czas trwania literki
   484 48F0 A9 07 9D 48 2B			mva #7 sprite_anim_speed,x
   485 48F5 A9 04 9D 40 2B			mva #4 sprite_anim,x
   486 48FA A9 03 9D 50 2B			mva #%11 sprite_mask,x
   487
   488 48FF A9 14 9D 10 2B			mva #$14 sprite_y,x
   489 						
   490 4904 A9 01 9D 4F 45			mva #1 ruch_p0,x
   491 4909 A0 48				ldy #$48
   492 490B AD 00 2B				lda sprite_x
   493 490E C9 74				cmp #$74
   494 4910 B0 05				bcs *+7
   495 4912 A0 B0				ldy #$b0
   496 4914 DE 4F 45				dec ruch_p0,x
   497 4917 98					tya
   498 4918 9D 00 2B				sta sprite_x,x
   499 						
   500 491B 60					rts
   501 						
   502 491C			prepare_extra
   503 491C A9 48 9D 20 2B			mva #shp_extra sprite_shape,x
   504 4921 9D 28 2B				sta sprite_shape0,x
   505 4924 A9 D6 9D 30 2B			mva #$d6 sprite_c0,x
   506 4929 A9 BA 9D 38 2B			mva #$ba sprite_c1,x
   507 						
   508 492E A9 07 9D 58 2B			mva #t_extra sprite_typ,x		
   509 4933 4C EB 48				jmp prepare_bonus1
   510 						
   511 4936			prepare_paraliz
   512 4936 A9 4C 9D 20 2B			mva #shp_paraliz sprite_shape,x
   513 493B 9D 28 2B				sta sprite_shape0,x
   514 						
   515 493E A9 01 85 C0				mva #1 kolor_P
   516 						
   517 4942 A9 03 9D 48 2B			mva #3 sprite_anim_speed,x
   518 4947 A9 04 9D 40 2B			mva #4 sprite_anim,x
   519 494C A9 03 9D 50 2B			mva #%11 sprite_mask,x
   520 						
   521 4951 A9 07 9D 4F 45			mva #4+3 ruch_p0,x
   522 4956 A9 07 9D 57 45			mva #6+1 ruch_p1,x
   523 						
   524 495B A0 48				ldy #$48
   525 495D AD 00 2B				lda sprite_x
   526 4960 C9 74				cmp #$74
   527 4962 B0 07				bcs @+
   528 4964 A0 B0				ldy #$b0
   529 4966 A9 03 9D 4F 45			mva #2+1 ruch_p0,x
   530 496B			@		
   531 496B 84 96				sty pom0
   532 496D AD 0A D2				lda random
   533 4970 29 07				and #7
   534 4972 05 96				ora pom0
   535 4974 9D 00 2B				sta sprite_x,x
   536 4977 A9 14 9D 10 2B			mva #$14 sprite_y,x
   537 						
   538 497C A9 08 9D 58 2B			mva #t_paraliz sprite_typ,x	
   539
   540 4981 A0 44				ldy	#$44
   541 4983 A9 15 91 B9 C8			mva	#$15	(fx_ptr),y+	; CSEL ,nr koloru
   542 4988 A9 01 91 B9				mva	#1	(fx_ptr),y	; PSEL	,nr palety
   543 						
   544 498C A0 46				ldy	#$46	; CR
   545 498E AD 84 56				lda paraliz_tab0+1
   546 4991 91 B9 C8				sta	(fx_ptr),y+		;RED
   547 4994 AD 8B 56				lda paraliz_tab1+1
   548 4997 91 B9 C8				sta (fx_ptr),y+	;GREEN
   549 499A AD 92 56				lda paraliz_tab2+1
   550 499D 91 B9				sta (fx_ptr),y		;BLUE
   551 499F A0 46				ldy #$46
   552 49A1 AD 99 56				lda paraliz_tab0a+1
   553 49A4 91 B9 C8				sta	(fx_ptr),y+		;RED
   554 49A7 AD A0 56				lda paraliz_tab1a+1
   555 49AA 91 B9 C8				sta (fx_ptr),y+	;GREEN
   556 49AD AD A7 56				lda paraliz_tab2a+1
   557 49B0 91 B9				sta (fx_ptr),y		;BLUE
   558 						
   559 49B2 60					rts	
   560
   561 				//wykonuje ai wszystkich duszkÃ³w, odpowiednie dla danego obiektu		
   562 49B3			play
   563 49B3 A2 07				ldx #7
   564 49B5 BD 27 45		@		lda ruch,x
   565 49B8 D0 04				bne @+
   566 49BA			play_next		
   567 49BA CA					dex
   568 49BB D0 F8				bne @-
   569 49BD 60					rts
   570 						
   571 49BE 0A			@		asl
   572 49BF A8					tay
   573 49C0 B9 85 45				lda ai_tab,y
   574 49C3 8D CD 49				sta _play+1
   575 49C6 B9 86 45				lda ai_tab+1,y
   576 49C9 8D CE 49				sta _play+2		
   577 49CC 20 FF FF		_play	jsr $ffff
   578 49CF 4C BA 49				jmp play_next
   579
   580
   581 49D2			ruch_explo
   582 49D2 DE 4F 45				dec ruch_p0,x
   583 49D5 F0 01				beq *+3
   584 49D7 60					rts
   585 49D8 A9 02				lda #ai_spada
   586 49DA 4C 07 47				jmp add_ai
   587
   588 						;rts
   589
   590 49DD			ruch_spada
   591 49DD A9 0A 9D 58 2B			mva #t_mumia sprite_typ,x
   592 49E2 BD 00 2B				lda sprite_x,x
   593 49E5 85 9A				sta cl.sprite0x
   594 49E7 18					clc
   595 49E8 BD 18 2B				lda sprite_dy,x
   596 49EB 7D 47 45				adc ruch_dy,x
   597 49EE 85 97				sta pom0a
   598 49F0 BD 10 2B				lda sprite_y,x
   599 49F3 69 00				adc #0
   600 49F5 85 9B				sta cl.sprite0y
   601 						
   602 49F7 20 73 3C				jsr cl.sprawdz_pod_gackiem
   603 49FA D0 05				bne @+
   604
   605 						;jsr cl.sprite_vs_rampa
   606 						;bmi @+
   607 49FC A9 03				lda #ai_chodzi			;mumia laduje 
   608 49FE 4C 07 47				jmp add_ai
   609 					
   610 4A01 A5 97		@		lda pom0a
   611 4A03 9D 18 2B				sta sprite_dy,x
   612 4A06 A5 9B				lda cl.sprite0y
   613 4A08 9D 10 2B				sta sprite_y,x
   614
   615 4A0B 60					rts
   616 						
   617 4A0C			ruch_chodzi
   618 4A0C BD 4F 45				lda ruch_p0,x
   619 4A0F F0 03				beq *+5
   620 4A11 DE 4F 45				dec ruch_p0,x
   621
   622 4A14 BD 28 2B				lda sprite_shape0,x
   623 4A17 C9 38				cmp #shp_mumia_lewo
   624 4A19 D0 42				bne mumia_prawo
   625 						
   626 				//mumia idzie w lewo
   627 4A1B BD 10 2B				lda sprite_y,x
   628 4A1E 85 9B				sta cl.sprite0y
   629 4A20 38					sec
   630 4A21 BD 08 2B				lda sprite_dx,x
   631 4A24 FD 37 45				sbc ruch_dx,x
   632 4A27 85 97				sta pom0a
   633 4A29 BD 00 2B				lda sprite_x,x
   634 4A2C E9 00				sbc #0
   635 4A2E			sprawdz_mumia_dol		
   636 4A2E 85 9A				sta cl.sprite0x
   637 						
   638 4A30 20 E7 3B				jsr cl.sprawdz_lewo_gacek
   639 4A33			sprawdz_mumia_dol1		
   640 4A33 F0 1C				beq @+
   641 						
   642 						;jsr cl.sprite_vs_rampa
   643 						;bpl @+				;uderzyl w sciane, wiec nie moze spasc
   644 								
   645 4A35 A5 97				lda pom0a
   646 4A37 9D 08 2B				sta sprite_dx,x
   647 4A3A A5 9A				lda cl.sprite0x
   648 4A3C 9D 00 2B				sta sprite_x,x
   649 						
   650 4A3F E6 9B				inc cl.sprite0y
   651 						
   652 4A41 20 73 3C				jsr cl.sprawdz_pod_gackiem
   653 4A44 D0 01				bne obroc_mumie
   654 						
   655 						;jsr cl.sprite_vs_rampa
   656 						;bmi obroc_mumie
   657 4A46 60					rts
   658 						
   659 4A47			obroc_mumie
   660 4A47 BD 4F 45				lda ruch_p0,x
   661 4A4A D0 05				bne @+
   662 4A4C A9 02				lda #ai_spada
   663 4A4E 4C 07 47				jmp add_ai
   664 						
   665 4A51 BD 28 2B		@		lda sprite_shape0,x
   666 4A54 49 04				eor #4
   667 4A56 9D 28 2B				sta sprite_shape0,x
   668 4A59 9D 20 2B				sta sprite_shape,x
   669 4A5C 60					rts
   670 						
   671 4A5D			mumia_prawo
   672 4A5D BD 10 2B				lda sprite_y,x
   673 4A60 85 9B				sta cl.sprite0y
   674 4A62 18					clc
   675 4A63 BD 08 2B				lda sprite_dx,x
   676 4A66 7D 37 45				adc ruch_dx,x
   677 4A69 85 97				sta pom0a
   678 4A6B BD 00 2B				lda sprite_x,x
   679 4A6E 69 00				adc #0
   680 4A70 85 9A				sta cl.sprite0x
   681 						
   682 4A72 20 D9 3B				jsr cl.sprawdz_prawo_gacek
   683 4A75 4C 33 4A				jmp sprawdz_mumia_dol1
   684 						
   685 4A78			ruch_przemiana
   686 4A78 DE 4F 45				dec ruch_p0,x
   687 4A7B D0 05				bne @+
   688 						
   689 						;lda #ai_kula
   690 4A7D A9 05				lda #ai_wylosuj
   691 4A7F 4C 07 47				jmp add_ai
   692 						
   693 						;mva #0 ruch,x
   694 						;sta sprite_x,x
   695 						;dec ile_enemy
   696 						;mva czekanie1 czekanie
   697 4A82 60			@		rts
   698
   699
   700 4A83			ruch_wylosuj
   701 4A83 60					rts
   702
   703 						
   704 = 002F			glob_speed0=47	;64
   705 = 0043			glob_speed1=67	;96
   706 = 0057			glob_speed2=87	;128
   707 = 007D			glob_speed3=125	;160
   708 						
   709
   710 4A84 A2 7A 52 06 5E 86 + tab_globus2 dta <(-glob_speed0*2),<(-glob_speed1*2),<(-glob_speed2*2),<(-glob_speed3*2),<(glob_speed0*2),<(glob_speed1*2),<(glob_speed2*2),<(glob_speed3*2)
   711 4A8C D1 BD A9 83 2F 43 + tab_globus0 dta <-glob_speed0,<-glob_speed1,<-glob_speed2,<-glob_speed3,<glob_speed0,<glob_speed1,<glob_speed2,<glob_speed3
   712 4A94 A2 7A 52 06 5E 86 + 			dta <(-glob_speed0*2),<(-glob_speed1*2),<(-glob_speed2*2),<(-glob_speed3*2),<(glob_speed0*2),<(glob_speed1*2),<(glob_speed2*2),<(glob_speed3*2)
   713 							
   714 4A9C 5F 00 A1 00 73 00 + ptak_tabX0 dta <speed_ptak,0,<-speed_ptak,0,<speed_ptak1,0,<-speed_ptak1,0
   715 4AA4 00 BE 00 42 00 E6 + ptak_tabY0 dta 0,<(2*speed_ptak),0,<-(2*speed_ptak),0,<(2*speed_ptak1),0,<-(2*speed_ptak1)
   716
   717 4AAC FF FF FF FF 00 00 + tab_globus3	dta >(-glob_speed0*2),>(-glob_speed1*2),>(-glob_speed2*2),>(-glob_speed3*2),>(glob_speed0*2),>(glob_speed1*2),>(glob_speed2*2),>(glob_speed3*2)	
   718 4AB4 FF FF FF FF 00 00 + tab_globus1 dta >-glob_speed0,>-glob_speed1,>-glob_speed2,>-glob_speed3,>glob_speed0,>glob_speed1,>glob_speed2,>glob_speed3
   719 4ABC FF FF FF FF 00 00 + 			dta >(-glob_speed0*2),>(-glob_speed1*2),>(-glob_speed2*2),>(-glob_speed3*2),>(glob_speed0*2),>(glob_speed1*2),>(glob_speed2*2),>(glob_speed3*2)	
   720 							
   721 = 005F			speed_ptak=95	
   722 = 0073			speed_ptak1=115
   723
   724
   725 4AC4 00 00 FF 00 00 00 + ptak_tabX1 dta >speed_ptak,0,>-speed_ptak,0,>speed_ptak1,0,>-speed_ptak1,0			
   726 4ACC 00 00 00 FF 00 00 + ptak_tabY1 dta 0,>(2*speed_ptak),0,>-(2*speed_ptak),0,>(2*speed_ptak1),0,>-(2*speed_ptak1)			
   727 							
   728 							
   729 4AD4			tab_globus_def	org *+80	
   730 						
   731 									
   732 4B24			ruch_globus1
   733 4B24-5BD7> A0 03				ldy #3
   734 4B26 BD 58 2B				lda sprite_typ,x
   735 4B29 C9 08				cmp #t_paraliz
   736 4B2B F0 1B				beq @+
   737 4B2D C9 02				cmp #t_radar
   738 4B2F F0 17				beq @+
   739 4B31 C9 01				cmp #t_czapka
   740 4B33 D0 0C				bne	czp0
   741 4B35 A0 01				ldy #1			;czapka ma 2 predkosci
   742 4B37 A5 8C				lda pom
   743 4B39 D0 06				bne czp0
   744 4B3B A9 00				lda #0
   745 4B3D 9D 5F 45				sta ruch_p2,x
   746 4B40 60					rts						
   747 4B41			czp0	
   748 4B41 98					tya
   749 4B42 2D 0A D2				and random
   750 4B45 9D 5F 45				sta ruch_p2,x
   751 4B48 60			@		rts
   752
   753 4B49			ruch_czapka
   754 4B49			ruch_paraliz
   755 4B49			ruch_ufo
   756 4B49			ruch_oko
   757 4B49			ruch_globus
   758 4B49			ruch_radar
   759 4B49 A9 00 85 8C				mva #0 pom
   760 						
   761 4B4D BD 5F 45				lda ruch_p2,x
   762 4B50 1D 4F 45				ora ruch_p0,x
   763 4B53 BC 58 2B				ldy sprite_typ,x
   764 4B56 C0 03				cpy #t_ufo
   765 4B58 D0 02				bne *+4
   766 4B5A 09 08				ora #8
   767 4B5C A8					tay
   768 4B5D 18					clc
   769 4B5E BD 08 2B				lda sprite_dx,x
   770 4B61 79 8C 4A				adc tab_globus0,y
   771 4B64 85 96				sta pom0
   772 4B66 B9 B4 4A				lda tab_globus1,y
   773 4B69 85 9E				sta pom0h
   774 4B6B 7D 00 2B				adc sprite_x,x
   775 						;lda sprite_x,x
   776 						;adc tab_globus1,y
   777 4B6E 85 97				sta pom0a
   778 4B70 85 9A				sta cl.sprite0x
   779
   780 4B72 BD 10 2B				lda sprite_y,x
   781 4B75 85 9B				sta cl.sprite0y
   782 						
   783 4B77 20 D5 3B				jsr cl.sprawdz_osX
   784 4B7A D0 0A				bne @+
   785 						
   786 						//jsr cl.sprite_vs_rampa			;sprawdz po osi X
   787 						//bmi @+
   788 4B7C E6 8C				inc pom
   789 4B7E BD 4F 45				lda ruch_p0,x
   790 4B81 49 04				eor #4
   791 4B83 9D 4F 45				sta ruch_p0,x
   792 						
   793 4B86 BD 5F 45		@		lda ruch_p2,x
   794 4B89 1D 57 45				ora ruch_p1,x
   795 4B8C BC 58 2B				ldy sprite_typ,x
   796 4B8F C0 03				cpy #t_ufo
   797 4B91 D0 02				bne *+4
   798 4B93 09 08				ora #8
   799 4B95 A8					tay
   800 4B96 18					clc
   801 4B97 BD 18 2B				lda sprite_dy,x
   802 4B9A 79 84 4A				adc tab_globus2,y
   803 4B9D 85 98				sta pom0b
   804 4B9F B9 AC 4A				lda tab_globus3,y
   805 4BA2 85 9E				sta pom0h
   806 4BA4 7D 10 2B				adc sprite_y,x
   807 						;lda sprite_y,x
   808 						;adc tab_globus3,y
   809 4BA7 85 99				sta pom0c
   810 4BA9 85 9B				sta cl.sprite0y
   811 4BAB BD 00 2B				lda sprite_x,x
   812 4BAE 85 9A				sta cl.sprite0x
   813 						
   814 4BB0 20 6F 3C				jsr cl.sprawdz_osY
   815 4BB3 D0 0A				bne @+
   816 						
   817 						;jsr cl.sprite_vs_rampa			;sprawdz po osi Y
   818 						;bmi @+
   819 						
   820 4BB5 E6 8C				inc pom
   821 4BB7 BD 57 45				lda ruch_p1,x
   822 4BBA 49 04				eor #4
   823 4BBC 9D 57 45				sta ruch_p1,x
   824 						
   825 4BBF A5 8C		@		lda pom
   826 4BC1 F0 03 4C 24 4B			jne ruch_globus1
   827 						
   828 								
   829 4BC6 A5 96		@		lda pom0
   830 4BC8 9D 08 2B				sta sprite_dx,x
   831 4BCB A5 97				lda pom0a
   832 4BCD 9D 00 2B				sta sprite_x,x
   833 						
   834 4BD0 A5 98				lda pom0b
   835 4BD2 9D 18 2B				sta sprite_dy,x
   836 4BD5 A5 99				lda pom0c
   837 4BD7 9D 10 2B				sta sprite_y,x
   838
   839 4BDA			poprawki
   840 4BDA AD 0A D8				lda ramka
   841 4BDD 29 1F				and #31
   842 4BDF F0 01				beq *+3
   843 4BE1 60					rts
   844 						
   845 				//POPRAWKI dla KULI,globusa i radaru	
   846 4BE2 BD 58 2B				lda sprite_typ,x
   847 4BE5 C9 00				cmp #t_oko
   848 4BE7 D0 35				bne z4				;inny typ
   849 				//KULKA		
   850 4BE9 38					sec
   851 4BEA BD 10 2B				lda sprite_y,x
   852 4BED ED 10 2B				sbc sprite_y
   853 4BF0 B0 04				bcs @+
   854 4BF2 49 FF				eor #255
   855 4BF4 69 01				adc #1
   856 4BF6 C9 18		@		cmp #24
   857 4BF8 90 0D				bcc z0
   858 						
   859 4BFA BD 10 2B				lda sprite_y,x
   860 4BFD CD 10 2B				cmp sprite_y
   861 4C00 B0 16				bcs z2		;pod gackiem
   862 						
   863 				//jest wyzej niz jack
   864 4C02 BD 57 45				lda ruch_p1,x		;jaki mamy kierunek
   865 4C05 F0 01				beq z3
   866 4C07 60			z0		rts
   867 						//zly kierunek
   868 4C08 DE 5F 45		z3		dec ruch_p2,x		;zmniejsz speed
   869 4C0B 10 FA				bpl z0
   870 						//zmiana kierunku
   871 4C0D BD 57 45				lda ruch_p1,x
   872 4C10 49 04				eor #4
   873 4C12 9D 57 45				sta ruch_p1,x		;w dol	
   874 4C15 4C 24 4B				jmp ruch_globus1
   875 				//jest pod gackiem	
   876 4C18			z2
   877 4C18 BD 57 45				lda ruch_p1,x
   878 4C1B D0 EB				bne z3
   879 4C1D 60					rts
   880 				//GLOBUS		
   881 4C1E			z4		
   882 4C1E C9 04				cmp #t_globus
   883 4C20 D0 35				bne z8
   884 						
   885 4C22 38					sec
   886 4C23 BD 00 2B				lda sprite_x,x
   887 4C26 ED 00 2B				sbc sprite_x
   888 4C29 B0 04				bcs @+
   889 4C2B 49 FF				eor #255
   890 4C2D 69 01				adc #1
   891 4C2F C9 0C		@		cmp #12
   892 4C31 90 0D				bcc z5
   893 						
   894 4C33 BD 10 2B				lda sprite_y,x
   895 4C36 CD 10 2B				cmp sprite_y
   896 4C39 B0 16				bcs z6		;po prawo od gacka
   897 						
   898 				//jest po lewo od  jack
   899 4C3B BD 4F 45				lda ruch_p0,x		;jaki mamy kierunek
   900 4C3E F0 01				beq z7
   901 4C40 60			z5		rts
   902 						//zly kierunek
   903 4C41 DE 5F 45		z7		dec ruch_p2,x		;zmniejsz speed
   904 4C44 10 FA				bpl z5
   905 						//zmiana kierunku
   906 4C46 BD 4F 45				lda ruch_p0,x
   907 4C49 49 04				eor #4
   908 4C4B 9D 4F 45				sta ruch_p0,x		;w dol	
   909 4C4E 4C 24 4B				jmp ruch_globus1
   910 				//jest po prawo od gacka	
   911 4C51			z6
   912 4C51 BD 4F 45				lda ruch_p0,x
   913 4C54 D0 EB				bne z7
   914 4C56 60					rts
   915 				//RADAR
   916 4C57 C9 02		z8		cmp #t_radar
   917 4C59 D0 18				bne z9
   918 						
   919 4C5B AD 0A D8				lda ramka
   920 4C5E 29 7F				and #127
   921 4C60 D0 10				bne @+
   922 						
   923 4C62 AD 0A D2				lda random
   924 4C65 29 04				and #4
   925 4C67 9D 4F 45				sta ruch_p0,x			;losowy kierunek ruchu
   926 4C6A AD 0A D2				lda random
   927 4C6D 29 04				and #4
   928 4C6F 9D 57 45				sta ruch_p1,x
   929 4C72 60			@		rts
   930
   931 4C73 C9 01		z9		cmp #t_czapka
   932 4C75 D0 5A				bne cz1
   933 				//CZAPKA
   934 4C77 AD 0A D2				lda random
   935 4C7A 29 03				and #3
   936 4C7C A8					tay
   937 4C7D B9 D2 4C				lda tab_czapka,y
   938 4C80 2D 0A D8				and ramka
   939 						;lda ramka
   940 						;and #127
   941 4C83 D0 2E				bne cz0
   942 						
   943 4C85 A0 00				ldy #0
   944 4C87 38					sec
   945 4C88 BD 00 2B				lda sprite_x,x
   946 4C8B ED 00 2B				sbc sprite_x
   947 4C8E B0 02				bcs *+4
   948 4C90 A0 04				ldy #4
   949 4C92 98					tya
   950 4C93 85 96				sta pom0
   951 4C95 9D 4F 45				sta ruch_p0,x		;ustaw kierunek X
   952 						
   953 4C98 A0 00		@		ldy #0
   954 4C9A 38					sec
   955 4C9B BD 10 2B				lda sprite_y,x
   956 4C9E ED 10 2B				sbc sprite_y
   957 4CA1 F0 10				beq cz0
   958 4CA3 B0 02				bcs *+4
   959 4CA5 A0 04				ldy #4
   960 4CA7 98					tya
   961 4CA8 9D 57 45				sta ruch_p1,x		;ustaw kierunek y
   962 4CAB A9 00 9D 5F 45			mva #0 ruch_p2,x		;zwolnij
   963 4CB0 4C C2 4C				jmp cz0a
   964 4CB3			cz0
   965 4CB3 A0 00				ldy #0
   966 4CB5 38					sec
   967 4CB6 BD 00 2B				lda sprite_x,x
   968 4CB9 ED 00 2B				sbc sprite_x
   969 4CBC B0 02				bcs *+4
   970 4CBE A0 04				ldy #4
   971 4CC0 84 96				sty pom0
   972 4CC2			cz0a		
   973 4CC2 BD 20 2B				lda sprite_shape,x
   974 4CC5 29 FB				and #%11111011
   975 4CC7 05 96				ora pom0
   976 4CC9 9D 20 2B				sta sprite_shape,x		;wybÃ³r duszka lewo/prawo
   977 4CCC 29 FC				and #$fc
   978 4CCE 9D 28 2B				sta sprite_shape0,x
   979 4CD1			cz1
   980 4CD1 60					rts
   981
   982 						
   983 4CD2 7F 3F 1F 7F		tab_czapka	dta b(127,63,31,127)		
   984 						
   985
   986 4CD6			ruch_ptak
   987 4CD6 BD 4F 45				lda ruch_p0,x
   988 4CD9 F0 03 4C D6 4D			jne ptakY					;szukamy po Y
   989
   990 						
   991 4CDE AD 00 2B		@		lda sprite_x
   992 4CE1 DD 00 2B				cmp sprite_x,x
   993 4CE4 D0 1D				bne @+
   994
   995 						
   996 4CE6 A9 01 9D 4F 45			mva #1 ruch_p0,x		;znalazÅ‚ gracza na osi X, teraz bedzie szukaÅ‚ po osi Y
   997 4CEB A8					tay
   998 4CEC AD 10 2B				lda sprite_y			;w ktÃ³rym kierunku ma sie poruszac ?
   999 4CEF DD 10 2B				cmp sprite_y,x
  1000 4CF2 B0 02				bcs *+4
  1001 4CF4 A0 03				ldy #3
  1002 4CF6 98					tya
  1003 4CF7 E0 05				cpx #5
  1004 4CF9 D0 02				bne *+4
  1005 4CFB 09 04				ora #4
  1006 4CFD 9D 57 45				sta ruch_p1,x
  1007 4D00 4C C8 4D				jmp ptak_shape
  1008
  1009 4D03 A0 00		@		ldy #0
  1010 4D05 AD 00 2B				lda sprite_x
  1011 4D08 DD 00 2B				cmp sprite_x,x
  1012 4D0B B0 02				bcs *+4
  1013 4D0D A0 02				ldy #2
  1014 4D0F 98					tya
  1015 4D10 E0 05				cpx #5
  1016 4D12 D0 02				bne *+4
  1017 4D14 09 04				ora #4
  1018 4D16 DD 57 45				cmp ruch_p1,x
  1019 4D19 F0 5B				beq ruch_ptak1		;kierunek do gracza zgodny z kierunkiem poruszania
  1020 4D1B A8					tay
  1021 						
  1022 4D1C BD 57 45				lda ruch_p1,x
  1023 4D1F 24 84				bit bit0				;jeÅ›li ruch w poziomie
  1024 4D21 D0 0D				bne @+
  1025 4D23 18					clc
  1026 4D24 7D 5F 45				adc ruch_p2,x
  1027 4D27 29 03				and #3
  1028 4D29 E0 05				cpx #5
  1029 4D2B D0 02				bne *+4
  1030 4D2D 09 04				ora #4
  1031 4D2F A8					tay
  1032 						
  1033
  1034 4D30 84 97		@		sty pom0a
  1035 						
  1036 4D32 18					clc
  1037 4D33 BD 08 2B				lda sprite_dx,x
  1038 4D36 79 9C 4A				adc ptak_tabX0,y
  1039 4D39 85 96				sta pom0
  1040 4D3B BD 00 2B				lda sprite_x,x
  1041 4D3E 79 C4 4A				adc ptak_tabX1,y
  1042 4D41 85 9A				sta cl.sprite0x
  1043 4D43 18					clc
  1044 4D44 BD 18 2B				lda sprite_dy,x
  1045 4D47 79 A4 4A				adc ptak_TABY0,y
  1046 4D4A 85 98				sta pom0b
  1047 4D4C BD 10 2B				lda sprite_y,x
  1048 4D4F 79 CC 4A				adc ptak_tabY1,y
  1049 4D52 85 9B				sta cl.sprite0y
  1050 						
  1051 4D54 20 C6 3B				jsr cl.sprawdzXY
  1052 4D57 F0 1D				beq ruch_ptak1
  1053 						
  1054 						//jsr cl.sprite_vs_rampa			;sprawdzamy czy mozna juz dotrzec do gracza najkrotsza drogÄ…
  1055 						//bpl ruch_ptak1			;nie zmieniaj kierunku poruszania
  1056 						
  1057 4D59 A5 96				lda pom0
  1058 4D5B 9D 08 2B				sta sprite_dx,x
  1059 4D5E A5 9A				lda cl.sprite0x
  1060 4D60 9D 00 2B				sta sprite_x,x
  1061 4D63 A5 98				lda pom0b
  1062 4D65 9D 18 2B				sta sprite_dy,x
  1063 4D68 A5 9B				lda cl.sprite0y
  1064 4D6A 9D 10 2B				sta sprite_y,x
  1065 						
  1066 4D6D A5 97		p0		lda pom0a
  1067 4D6F 9D 57 45				sta ruch_p1,x
  1068 4D72 A8					tay
  1069 						
  1070 4D73 4C C8 4D				jmp ptak_shape
  1071
  1072 4D76			ruch_ptak1		
  1073 4D76 BC 57 45		@		ldy ruch_p1,x
  1074 4D79 18					clc
  1075 4D7A BD 08 2B				lda sprite_dx,x
  1076 4D7D 79 9C 4A				adc ptak_tabX0,y
  1077 4D80 85 96				sta pom0
  1078 4D82 BD 00 2B				lda sprite_x,x
  1079 4D85 79 C4 4A				adc ptak_tabX1,y
  1080 4D88 85 9A				sta cl.sprite0x
  1081 						
  1082 4D8A 18					clc
  1083 4D8B BD 18 2B				lda sprite_dy,x
  1084 4D8E 79 A4 4A				adc ptak_tabY0,y
  1085 4D91 85 97				sta pom0a
  1086 4D93 BD 10 2B				lda sprite_y,x
  1087 4D96 79 CC 4A				adc ptak_tabY1,y
  1088 4D99 85 9B				sta cl.sprite0y
  1089 						
  1090 4D9B 20 C6 3B				jsr cl.sprawdzXY
  1091 4D9E F0 15				beq @+
  1092 						
  1093 						//jsr cl.sprite_vs_rampa
  1094 						//bpl @+
  1095 					
  1096 4DA0 A5 96				lda pom0
  1097 4DA2 9D 08 2B				sta sprite_dx,x
  1098 4DA5 A5 9A				lda cl.sprite0x
  1099 4DA7 9D 00 2B				sta sprite_x,x
  1100 4DAA A5 97				lda pom0a
  1101 4DAC 9D 18 2B				sta sprite_dy,x
  1102 4DAF A5 9B				lda cl.sprite0y
  1103 4DB1 9D 10 2B				sta sprite_y,x
  1104 4DB4 60					rts
  1105 					
  1106 4DB5 18			@		clc
  1107 4DB6 BD 57 45				lda ruch_p1,x		;po trafieniu w rampÄ™ zmieÅ„ kierunek poruszania siÄ™
  1108 4DB9 7D 5F 45				adc ruch_p2,x		;1 w prawo ,255 w lewo
  1109 4DBC 29 03				and #3
  1110 4DBE E0 05				cpx #5
  1111 4DC0 D0 02				bne *+4
  1112 4DC2 09 04				ora #4
  1113 4DC4 9D 57 45				sta ruch_p1,x			
  1114 						
  1115 4DC7 A8					tay					;zmien teÅ¼ ksztalt ptaka zaleznie od nowego kierunku
  1116 4DC8			ptak_shape	
  1117 4DC8 98					tya
  1118 4DC9 29 03				and #3
  1119 4DCB A8					tay
  1120 4DCC B9 6C 48				lda ptak_tab2,y
  1121 4DCF 9D 20 2B				sta sprite_shape,x
  1122 4DD2 9D 28 2B				sta sprite_shape0,x
  1123 						
  1124 4DD5 60					rts
  1125 						
  1126
  1127 4DD6 AD 10 2B		ptakY	lda sprite_y
  1128 4DD9 DD 10 2B				cmp sprite_y,x
  1129 4DDC D0 1D				bne @+
  1130 						
  1131 4DDE A9 00 9D 4F 45			mva #0 ruch_p0,x		;znalazl gracza na osi Y, teraz bedzie szukal po osi X
  1132 4DE3 A8					tay
  1133 4DE4 AD 00 2B				lda sprite_x			;w ktÃ³rym kierunku najblizej do gracza?
  1134 4DE7 DD 00 2B				cmp sprite_x,x
  1135 4DEA B0 02				bcs *+4
  1136 4DEC A0 02				ldy #2
  1137 4DEE 98					tya
  1138 4DEF E0 05				cpx #5
  1139 4DF1 D0 02				bne *+4
  1140 4DF3 09 04				ora #4
  1141 4DF5 9D 57 45				sta ruch_p1,x
  1142 						
  1143 4DF8 4C C8 4D				jmp ptak_shape
  1144 						
  1145 4DFB A0 01		@		ldy #1
  1146 4DFD AD 10 2B				lda sprite_y
  1147 4E00 DD 10 2B				cmp sprite_y,x
  1148 4E03 B0 02				bcs *+4
  1149 4E05 A0 03				ldy #3
  1150 4E07 98					tya
  1151 4E08 E0 05				cpx #5
  1152 4E0A D0 02				bne *+4
  1153 4E0C 09 04				ora #4
  1154 4E0E A8					tay
  1155 						
  1156 4E0F DD 57 45				cmp ruch_p1,x
  1157 4E12 D0 03 4C 76 4D			jeq ruch_ptak1			;prawidlowy kierunek
  1158 						
  1159 4E17 BD 57 45				lda ruch_p1,x
  1160 4E1A 24 84				bit bit0
  1161 4E1C F0 10				beq @+
  1162
  1163 4E1E 18					clc
  1164 4E1F BD 57 45				lda ruch_p1,x
  1165 4E22 7D 5F 45				adc ruch_p2,x
  1166 4E25 29 03				and #3
  1167 4E27 E0 05				cpx #5
  1168 4E29 D0 02				bne *+4
  1169 4E2B 09 04				ora #4
  1170 4E2D A8					tay
  1171
  1172 4E2E 84 97		@		sty pom0a
  1173 4E30 18					clc
  1174 4E31 BD 18 2B				lda sprite_dy,x
  1175 4E34 79 A4 4A				adc ptak_tabY0,y
  1176 4E37 85 96				sta pom0
  1177 4E39 BD 10 2B				lda sprite_y,x
  1178 4E3C 79 CC 4A				adc ptak_tabY1,y
  1179 4E3F 85 9B				sta cl.sprite0y
  1180 4E41 18					clc
  1181 4E42 BD 08 2B				lda sprite_dx,x
  1182 4E45 79 9C 4A				adc ptak_tabX0,y
  1183 4E48 85 98				sta pom0b
  1184 4E4A BD 00 2B				lda sprite_x,x
  1185 4E4D 79 C4 4A				adc ptak_tabX1,y
  1186 4E50 85 9A				sta cl.sprite0x
  1187 						
  1188 4E52 20 C6 3B				jsr cl.sprawdzXY
  1189 4E55 D0 03 4C 76 4D			jeq ruch_ptak1
  1190 						
  1191 						
  1192 						//jsr cl.sprite_vs_rampa			;sprawdzamy czy mozna juz dotrzec do gracza najkrotsza drogÄ…
  1193 						//jpl ruch_ptak1
  1194 						
  1195 4E5A A5 96				lda pom0
  1196 4E5C 9D 18 2B				sta sprite_dy,x
  1197 4E5F A5 9B				lda cl.sprite0y
  1198 4E61 9D 10 2B				sta sprite_y,x
  1199 4E64 A5 98				lda pom0b
  1200 4E66 9D 08 2B				sta sprite_dx,x
  1201 4E69 A5 9A				lda cl.sprite0x
  1202 4E6B 9D 00 2B				sta sprite_x,x
  1203 						
  1204 						
  1205 4E6E A5 97		p1		lda pom0a
  1206 4E70 9D 57 45				sta ruch_p1,x
  1207 4E73 A8					tay
  1208 						
  1209 4E74 4C C8 4D				jmp ptak_shape
  1210
  1211 						
  1212 						
  1213
  1214 4E77 88 78		tab_bonus0	dta <-120,<120				;zmiana z 80 na 120
  1215 4E79 FF 00		tab_bonus1	dta >-120,>120	
  1216
  1217 4E7B			ruch_extra
  1218 4E7B			ruch_bonus
  1219 						;sprawdz czy bÄ™dzie spadaÄ‡
  1220 4E7B AD 0A D8				lda ramka
  1221 4E7E 29 07				and #7
  1222 4E80 D0 1C				bne @+2
  1223 4E82 DE 57 45				dec ruch_p1,x
  1224 4E85 F0 0F				beq @+1
  1225 4E87 BD 57 45				lda ruch_p1,x
  1226 4E8A C9 14				cmp #20
  1227 4E8C D0 10				bne @+2
  1228 4E8E A9 FF 9D 4F 45	@		mva #-1 ruch_p0,x		
  1229 4E93 4C 9E 4E				jmp @+1
  1230 4E96 A9 00 9D 00 2B	@		mva #0 sprite_x,x
  1231 4E9B 9D 27 45				sta ruch,x
  1232 = 4E9E			@		equ *		
  1233 						
  1234 4E9E 18					clc
  1235 4E9F BD 30 2B				lda sprite_c0,x
  1236 4EA2 69 10				adc #$10
  1237 4EA4 9D 30 2B				sta sprite_c0,x
  1238 						
  1239 4EA7 BD 00 2B				lda sprite_x,x
  1240 4EAA 85 9A				sta cl.sprite0x
  1241 						
  1242 4EAC 18					clc
  1243 4EAD BD 18 2B				lda sprite_dy,x
  1244 4EB0			literka_m		
  1245 4EB0 69 20				adc #32
  1246 4EB2 85 97				sta pom0a
  1247 4EB4 BD 10 2B				lda sprite_y,x
  1248 4EB7			literka_s		
  1249 4EB7 69 01				adc #1
  1250 4EB9 85 9B				sta cl.sprite0y
  1251 						
  1252 4EBB 20 73 3C				jsr cl.sprawdz_pod_gackiem
  1253 4EBE F0 0B				beq @+
  1254 						
  1255 						
  1256 						//jsr cl.sprite_vs_rampa
  1257 						//bpl @+
  1258 						
  1259 						;spada
  1260 4EC0 A5 97				lda pom0a
  1261 4EC2 9D 18 2B				sta sprite_dy,x
  1262 4EC5 A5 9B				lda cl.sprite0y
  1263 4EC7 9D 10 2B				sta sprite_y,x
  1264 						;lda sprite_shape0,x
  1265 						;sta sprite_shape,x		;ustaw 1 faze ksztaltu podczas spadania
  1266 4ECA 60					rts
  1267 						
  1268 4ECB 18			@		clc
  1269 4ECC BC 4F 45				ldy ruch_p0,x
  1270 4ECF 10 01				bpl *+3
  1271 4ED1 60					rts
  1272 4ED2 BD 08 2B				lda sprite_dx,x
  1273 4ED5 79 77 4E				adc tab_bonus0,y
  1274 4ED8 85 97				sta pom0a
  1275 4EDA B9 79 4E				lda tab_bonus1,y
  1276 4EDD 85 9E				sta pom0h
  1277 4EDF 7D 00 2B				adc sprite_x,x
  1278 						//lda sprite_x,x
  1279 						//adc tab_bonus1,y
  1280 4EE2 85 9A				sta cl.sprite0x
  1281 4EE4 BD 10 2B				lda sprite_y,x
  1282 4EE7 85 9B				sta cl.sprite0y
  1283 						
  1284 4EE9 20 D5 3B				jsr cl.sprawdz_osX
  1285 4EEC D0 09				bne @+
  1286 						
  1287 						
  1288 						//jsr cl.sprite_vs_rampa
  1289 						//bmi @+
  1290 						
  1291 						;zmien kierunek, sciana
  1292 4EEE BD 4F 45				lda ruch_p0,x
  1293 4EF1 49 01				eor #1
  1294 4EF3 9D 4F 45				sta ruch_p0,x
  1295 4EF6 60					rts
  1296 						
  1297 4EF7 A5 97		@		lda pom0a
  1298 4EF9 9D 08 2B				sta sprite_dx,x
  1299 4EFC A5 9A				lda cl.sprite0x
  1300 4EFE 9D 00 2B				sta sprite_x,x
  1301 4F01 60					rts
  1302 					
  1303
  1304 						
  1305
  1306 								
  1307 				.endl
   443 4F02						icl 'sfx.asm'
Source: sfx.asm
     1 				//efekty dzwiekowe
     2 = 0000			fx_krok=0*2
     3 = 0002			fx_ladowanie=1*2
     4 = 0004			fx_bomba=2*2
     5 = 0006			fx_bomba1=3*2
     6 = 0008			fx_uderzenie=4*2
     7 = 000A			fx_paraliz=5*2
     8 = 000C			fx_literka=6*2
     9 = 000E			fx_extra=7*2
    10
    11 4F02			.local sfx
    12
    13 4F02			add_fx1
    14 4F02 B9 96 4F				lda audf_table,y
    15 4F05 85 AA				sta kanal_audf1+2*2
    16 4F07 B9 97 4F				lda audf_table+1,y
    17 4F0A 85 AB				sta kanal_audf1+1+2*2
    18 						
    19 4F0C B9 A6 4F				lda audc_table,y
    20 4F0F 85 B2				sta kanal_audc1+2*2
    21 4F11 B9 A7 4F				lda audc_table+1,y
    22 4F14 85 B3				sta kanal_audc1++1+2*2
    23 						
    24 4F16 B9 B6 4F				lda len_table,y
    25 4F19 8D 1B D8				sta kanal1+2*2				;dlugosc
    26 4F1C 8D 23 D8				sta kanal1s+2*2
    27 4F1F B9 B7 4F				lda len_table+1,y
    28 4F22 8D 1C D8				sta petla1+2*2			;petla
    29 4F25 60					rts
    30
    31
    32 = 0003			channel=3
    33 4F26			add_fx
    34 4F26 AE 1D D8				ldx kanal4
    35 4F29 F0 0A				beq @+
    36 4F2B C0 00				cpy #fx_krok
    37 4F2D D0 01				bne *+3
    38 4F2F 60					rts
    39 4F30 C5 B7				cmp prio
    40 4F32 B0 01				bcs @+
    41 4F34 60					rts
    42 4F35			@		
    43 4F35 85 B7				sta prio
    44 4F37 B9 96 4F				lda audf_table,y
    45 4F3A 85 AC				sta kanal_audf1+channel*2
    46 4F3C B9 97 4F				lda audf_table+1,y
    47 4F3F 85 AD				sta kanal_audf1+1+channel*2
    48 						
    49 4F41 B9 A6 4F				lda audc_table,y
    50 4F44 85 B4				sta kanal_audc1+channel*2
    51 4F46 B9 A7 4F				lda audc_table+1,y
    52 4F49 85 B5				sta kanal_audc1++1+channel*2
    53 						
    54 4F4B B9 B6 4F				lda len_table,y
    55 4F4E 8D 1D D8				sta kanal1+channel*2				;dlugosc
    56 4F51 8D 25 D8				sta kanal1s+channel*2
    57 4F54 B9 B7 4F				lda len_table+1,y
    58 4F57 8D 1E D8				sta petla1+channel*2			;petla
    59
    60 4F5A 60					rts
    61 						
    62
    63 4F5B			play_fx
    64 4F5B AC 1B D8				ldy kanal3
    65 4F5E F0 18				beq pfx4
    66 4F60 B1 AA				lda (kanal_audf3),y
    67 4F62 8D 04 D2				sta audf3
    68 4F65 B1 B2				lda (kanal_audc3),y
    69 4F67 8D 05 D2				sta audc3
    70 4F6A 88					dey
    71 4F6B D0 08				bne @+					;jeszcze nie koniec
    72 4F6D AD 1C D8				lda petla3			;czy zapetlony 0=nie
    73 4F70 F0 03				beq @+
    74 4F72 AC 23 D8				ldy kanal3s
    75 4F75 8C 1B D8		@		sty kanal3	
    76
    77
    78 4F78 AC 1D D8		pfx4	ldy kanal4
    79 4F7B F0 18				beq pfx0
    80 4F7D B1 AC				lda (kanal_audf4),y
    81 4F7F 8D 06 D2				sta audf4
    82 4F82 B1 B4				lda (kanal_audc4),y
    83 4F84 8D 07 D2				sta audc4
    84 4F87 88					dey
    85 4F88 D0 08				bne @+					;jeszcze nie koniec
    86 4F8A AD 1E D8				lda petla4			;czy zapetlony 0=nie
    87 4F8D F0 03				beq @+
    88 4F8F AC 25 D8				ldy kanal4s
    89 4F92 8C 1D D8		@		sty kanal4	
    90
    91 4F95 60			pfx0	rts	
    92
    93 4F96			audf_table
    94 4F96 C6 4F D8 4F EA 4F + 		dta a(krok_audf),a(ladowanie_audf),a(bomba_audf),a(bomba1_audf),a(uderzenie_audf),a(paraliz_audf),a(literka_audf),a(extra_audf)
    95 						
    96 4FA6			audc_table
    97 4FA6 CF 4F E1 4F F3 4F + 		dta a(krok_audc),a(ladowanie_audc),a(bomba_audc),a(bomba1_audc),a(uderzenie_audc),a(paraliz_audc),a(literka_audc),a(extra_audc)
    98 						
    99 4FB6			len_table
   100 4FB6 08 00				dta b(8),b(0)	;krok 0x2
   101 4FB8 06 00				dta b(6),b(0)	;ladowanie 1x2
   102 4FBA 08 00				dta b(8),b(0)	;zebranie bomby
   103 4FBC 08 00				dta b(8),b(0)	;zebranie bomby bonusowej
   104 4FBE 04 00				dta b(4),b(0)	;uderzenie w rampÄ™
   105 4FC0 04 01				dta b(4),b(1)	;paraliz
   106 4FC2 08 00				dta b(8),b(0)	;zebranie literki
   107 4FC4 12 00				dta b(18),b(0)	;extra life
   108 						
   109 						
   110 4FC6 00 00 21 2D 35 48 + krok_audf	.he 00,00,21,2d,35,48,40,35,b6
   111 4FCF 00 00 64 64 67 67 + krok_audc	.he 00,00,64,64,67,67,36,36,33	
   112
   113 4FD8 00 00 00 10 10 20 + ladowanie_audf .he 00,00,00,10,10,20,10,20,10
   114 4FE1 00 00 00 64 65 66 + ladowanie_audc .he 00,00,00,64,65,66,67,68,69	
   115
   116 4FEA 00 00 86 76 66 56 + bomba_audf	.he 00,00,86,76,66,56,46,66,86	;.he 00,00,b6,a6,96,86,76,96,b6
   117 4FF3 00 00 A6 A7 A8 A9 + bomba_audc	.he 00,00,a6,a7,a8,a9,a9,a7,a6
   118
   119 4FFC 00 00 76 66 56 46 + bomba1_audf	.he 00,00,76,66,56,46,36,56,76
   120 5005 00 00 A9 AA A9 A8 + bomba1_audc	.he 00,00,a9,aa,a9,a8,a7,a6,a5
   121
   122 500E 00 00 D8 A0 D8	uderzenie_audf	.he 00,00,d8,a0,d8
   123 5013 00 00 A7 AB A7	uderzenie_audc	.he 00,00,a7,ab,a7
   124
   125 5018 00 30 50 40 20	paraliz_audf	.he 00,30,50,40,20
   126 501D 00 A4 A0 A6 C8	paraliz_audc	.he 00,a4,a0,a6,c8
   127
   128 5022 00 00 40 30 20 10 + literka_audf	.he 00,00,40,30,20,10,06,10,30
   129 502B 00 00 A7 A8 A7 A6 + literka_audc	.he 00,00,a7,a8,a7,a6,a5,a4,a3
   130
   131 5034 00 80 20 80 20 80 + extra_audf	.he 00,80,20,80,20,80,20,80,20,80,20,80,20,80,20,80,20,20,20
   132 5047 00 C1 C2 C4 C4 C6 + extra_audc	.he 00,c1,c2,c4,c4,c6,c6,c8,c8,ca,ca,cc,cc,cd,cd,cf,cf,cf,cf	
   133 				.endl
   134 						
   444 							;icl 'napisy.asm'
   445 505A						icl 'title.asm'
Source: title.asm
     1 				//strona tytuÅ‚owa
     2 505A			.local tit
     3 505A 27 21 23 25 2B	text		dta d'GACEK'
     4 505F 33 28 21 2E 34 29	text1		dta d'SHANTI'
     5 5065 2D 29 2B 25 32	text2		dta d'MIKER'
     6
     7 = 0500			bufor1=$500
     8
     9 506A			tab_e		
    10 506A 01 03 07 0F 1F 3F + 			.he 01,03,07,0f,1f,3f,7f,ff
    11 5072 FF FE FC F8 F0 E0 + 			.he ff,fe,fc,f8,f0,e0,c0,80
    12 							
    13 507A			blit11	
    14 507A A0 53				ldy	#$53	; BLITTER_BUSY
    15 507C B1 B9		@		lda (fx_ptr),y
    16 507E D0 FC				bne @-
    17
    18 5080 A0 50				ldy	#$50	; BL_ADR0
    19 5082 A9 00 91 B9 C8			mva	#bcb11_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
    20 5087 A9 0E 91 B9 C8			mva	#[bcb11_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
    21 508C A9 07 91 B9 C8			mva	#bcb11_vbxe>>16	(fx_ptr),y+	; BL_ADR2
    22 5091 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
    23 						
    24 5095 A0 53				ldy	#$53	; BLITTER_BUSY
    25 5097 B1 B9		@		lda (fx_ptr),y
    26 5099 D0 FC				bne @-
    27 						
    28 509B A0 50				ldy	#$50	; BL_ADR0
    29 509D A9 80 91 B9 C8			mva	#bcb12_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
    30 50A2 A9 0E 91 B9 C8			mva	#[bcb12_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
    31 50A7 A9 07 91 B9 C8			mva	#bcb12_vbxe>>16	(fx_ptr),y+	; BL_ADR2
    32 50AC A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
    33 						
    34 						
    35 50B0 60					rts			
    36
    37 50B1			cls_txt
    38 50B1 A2 00					ldx #0
    39 50B3 A9 FF					lda #$ff
    40 50B5 9D 00 06		@			sta title1b,x
    41 50B8 CA						dex
    42 50B9 D0 FA					bne @-	
    43 50BB 60						rts		
    44
    45 50BC			tab_sha
    46 50BC A3 AF A4 A5 80 A7 + 			dta d'CODE GFX SFX'*
    47 50C8			tab_mik	
    48 50C8 80 80 80 80 AD B5 + 			dta d'    MUSIC   '*
    49
    50 50D4			print_shanti
    51 50D4 A2 0B					ldx #11
    52 50D6 BD BC 50		@			lda tab_sha,x
    53 50D9 9D E9 21					sta title1a+10,x
    54 50DC CA						dex
    55 50DD 10 F7					bpl @-
    56
    57 50DF A9 C0 85 8F					mva #>znaki1 pom1+1
    58 50E3 A9 17					lda #$17
    59 50E5 A2 07					ldx #7
    60 50E7 20 E6 52					jsr pr_litera
    61 50EA A9 17					lda #$17
    62 50EC CA						dex
    63 50ED 20 E6 52					jsr pr_litera
    64 50F0 E6 8F					inc pom1+1
    65 50F2 CA						dex
    66 50F3 BD 5F 50		@			lda text1,x			;shanti77
    67 50F6 20 E6 52					jsr pr_litera
    68 50F9 CA						dex
    69 50FA 10 F7					bpl @-
    70 50FC 86 9E					stx pom0h
    71 							
    72 50FE 60						rts
    73 							
    74 50FF			print_miker
    75 50FF A2 0B					ldx #11
    76 5101 BD C8 50		@			lda tab_mik,x
    77 5104 9D E9 21					sta title1a+10,x
    78 5107 CA						dex
    79 5108 10 F7					bpl @-
    80
    81 510A A9 C1 85 8F					mva #>(znaki1+$100) pom1+1
    82 510E A2 04					ldx #4
    83 5110 BD 65 50		@			lda text2,x			;miker
    84 5113 48						pha
    85 5114 8A						txa
    86 5115 0A						asl
    87 5116 AA						tax
    88 5117 68						pla
    89 5118 20 E6 52					jsr pr_litera
    90 511B 8A						txa
    91 511C 4A						lsr
    92 511D AA						tax
    93 511E CA						dex
    94 511F 10 EF					bpl @-
    95 5121 A9 00 85 9E					mva #0 pom0h
    96 							
    97 5125 60						rts			
    98 							
    99
   100 							
   101 5126			title	
   102 5126 20 0B 2E					jsr multi.hide_sprite
   103 5129 20 F4 2D					jsr multi.init_sprite2
   104 512C 20 4F B0					jsr rmt_silence
   105 							
   106 512F A9 00					lda #$00	;#$7e
   107 5131 20 2F 82					jsr rmt_init0
   108 							
   109 5134 A9 00 8D 08 D0				mva #0 sizep0
   110 							
   111 5139 20 7A 50					jsr blit11
   112 							
   113 513C 20 C8 41					jsr cl.przepisz_highscore
   114
   115 513F A9 C1 85 8D					mva #>(znaki1+$100) pom+1
   116 							
   117 5143 A2 A0					ldx #160
   118 5145 A9 00					lda #0
   119 5147 9D FF 04		@			sta bufor1-1,x
   120 514A CA						dex
   121 514B D0 FA					bne @-
   122
   123 514D A2 04					ldx #4
   124 514F BD 5A 50		@			lda text,x
   125 5152 0A 0A 0A					:3 asl
   126 5155 85 8C					sta pom
   127 							
   128 5157 A0 06					ldy #6
   129 5159 B1 8C		@			lda (pom),y
   130 515B 20 0B 53					jsr wpisz
   131 515E 88						dey
   132 515F 10 F8					bpl @-
   133 							
   134 5161 CA						dex
   135 5162 10 EB					bpl @-1
   136 							
   137 5164 20 B1 50					jsr cls_txt
   138 5167 20 D4 50					jsr print_shanti
   139 									
   140 							
   141 516A 20 00 80					jsr wait_vbl
   142 516D A9 72 8D 22 02 A9 + 			mwa #vblk1 vbiv
   143 5177 A9 76 8D 00 02 A9 + 			mwa #dli1 dliv
   144 5181 A9 48 8D 02 D4 A9 + 			mwa #dlist_title dlptr
   145 518B A9 C0 8D 09 D4				mva #>znaki1 chbase
   146 5190 8D 17 D0					sta colpf1
   147 5193 A9 00 8D 1A D0				mva #$00 colbak
   148 5198 A9 5A 8D 18 D0				mva #$5a colpf2
   149 519D A9 00 8D 16 D0				mva #$00 colpf0	
   150 51A2 A9 00 85 82					mva #0 licznik
   151 							
   152 							
   153 51A6 A9 30 85 A0					mva #$30 ile_enemy
   154 51AA A9 C8 85 A2					mva #$c8 ile_ptakow
   155 51AE A9 03 85 9B A9 22 + 			mwa #title2+4 efekt.tekst
   156 51B6 A9 E2 85 9A					mva #226 efekt.linia
   157 51BA A9 6A 8D 12 D0				mva #$6A colpm0	
   158 51BF A9 4A 8D 14 D0				mva #$4a colpm2
   159 51C4 A9 2A 8D 13 D0				mva #$2a colpm1
   160 51C9 A9 3A 8D 15 D0				mva #$3a colpm3
   161 							
   162 51CE A9 01 8D 1B D0				mva #1 gtiactl
   163 							
   164
   165 51D3			t0							
   166 51D3 20 4B 82					jsr rmt_play0
   167 51D6 20 00 80					jsr wait_vbl
   168 51D9 A9 39 8D 00 D4				mva #$39 dmactl
   169
   170 							
   171 51DE A2 01					ldx #1
   172 51E0 A5 A0					lda ile_enemy
   173 51E2 8D 00 D0					sta hposp0
   174 51E5 20 59 55					jsr efekt.print			
   175 51E8 A5 A0					lda ile_enemy
   176 51EA 18						clc
   177 51EB 69 08					adc #8
   178 51ED 8D 02 D0					sta hposp2
   179 51F0 A2 03					ldx #3
   180 51F2 20 59 55					jsr efekt.print
   181 							
   182 51F5 A5 A0					lda ile_enemy
   183 51F7 18						clc
   184 51F8 69 01					adc #1
   185 51FA C9 D0					cmp #$d0
   186 51FC 90 02					bcc *+4
   187 51FE A9 30					lda #$30
   188 5200 85 A0					sta ile_enemy
   189 							
   190 5202 A2 02					ldx #2
   191 5204 A5 A2					lda ile_ptakow
   192 5206 8D 01 D0					sta hposp1
   193 5209 20 59 55					jsr efekt.print
   194 520C A5 A2					lda ile_ptakow
   195 520E 38						sec
   196 520F E9 08					sbc #8
   197 5211 8D 03 D0					sta hposp3
   198 5214 A2 04					ldx #4
   199 5216 20 59 55					jsr efekt.print
   200 							
   201 5219 A5 A2					lda ile_ptakow
   202 521B 38						sec
   203 521C E9 01					sbc #1
   204 521E C9 30					cmp #$30
   205 5220 B0 02					bcs *+4
   206 5222 A9 D0					lda #$d0
   207 5224 85 A2					sta ile_ptakow
   208 							
   209 5226 20 CD 52					jsr change_color1
   210 5229 A5 14					lda zegar
   211 522B 29 03					and #3
   212 522D D0 10					bne @+
   213 522F A5 96					lda pom0
   214 5231 18						clc
   215 5232 69 03					adc #3
   216 5234 C9 07					cmp #7
   217 5236 90 02					bcc *+4
   218 5238 A9 00					lda #0
   219 523A 85 96					sta pom0
   220 523C 20 94 52					jsr change_color
   221 							
   222 							
   223 							
   224 523F AD 10 D0		@			lda trig0
   225 5242 F0 1A					beq @+
   226
   227 5244 A5 14					lda zegar
   228 5246 D0 13					bne petla
   229 							
   230 5248 A5 9E					lda pom0h
   231 524A D0 09					bne mik
   232 							
   233 524C 20 B1 50					jsr cls_txt
   234 524F 20 D4 50					jsr print_shanti
   235 5252 4C 5B 52					jmp petla		
   236 5255			mik
   237 5255 20 B1 50					jsr cls_txt
   238 5258 20 FF 50					jsr print_miker				
   239 525B			petla						
   240 525B 4C D3 51					jmp t0
   241 							
   242 525E 20 00 80		@			jsr wait_vbl
   243 5261 A9 00 8D 00 D4				mva #0 dmactl
   244 5266 A0 40					ldy	#$40	; VIDEO_CONTROL			blokujemy vbxe
   245 5268 A9 00 91 B9					mva	#0	(fx_ptr),y	; xdl_disabled
   246 							
   247 526C A9 00 8D 02 D4 A9 + 			mwa #dlist0 dlptr
   248 5276 A9 8E 8D 22 02 A9 + 			mwa #vblk vbiv
   249 5280 A9 00 8D 00 02 A9 + 			mwa #dli dliv
   250 528A 60						rts
   251
   252 528B 44 AA 77		tab_color  	.he 44,aa,77
   253 528E AA 77 44					.he aa,77,44
   254 5291 77 44 AA					.he 77,44,aa
   255
   256
   257
   258 							
   259 5294			change_color
   260 5294 A6 96					ldx pom0
   261 5296 A0 44					ldy	#$44
   262 5298 A9 2E 91 B9 C8				mva	#$2e	(fx_ptr),y+	; CSEL ,nr koloru
   263 529D A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety			
   264 52A1 A0 47					ldy	#$47	; GREEN
   265 52A3 BD 8B 52					lda tab_color,x
   266 52A6 91 B9					sta	(fx_ptr),y		;RED
   267
   268 52A8 A0 44					ldy	#$44
   269 52AA A9 2D 91 B9 C8				mva	#$2d	(fx_ptr),y+	; CSEL ,nr koloru
   270 52AF A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety			
   271 52B3 A0 47					ldy	#$47	; CR
   272 52B5 BD 8C 52					lda tab_color+1,x
   273 52B8 91 B9					sta	(fx_ptr),y		;GREEN
   274
   275 52BA A0 44					ldy	#$44
   276 52BC A9 2B 91 B9 C8				mva	#$2b	(fx_ptr),y+	; CSEL ,nr koloru
   277 52C1 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety			
   278 52C5 A0 47					ldy	#$47	; CR
   279 52C7 BD 8D 52					lda tab_color+2,x
   280 52CA 91 B9					sta	(fx_ptr),y		;GREEN	
   281 							
   282 52CC 60						rts
   283 							
   284 52CD			change_color1			
   285 52CD A0 44					ldy	#$44
   286 52CF A9 30 91 B9 C8				mva	#$30	(fx_ptr),y+	; CSEL ,nr koloru
   287 52D4 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety			
   288 52D8 A0 46					ldy	#$46	; CR
   289 52DA A5 14					lda zegar
   290 52DC 0A 0A 0A 0A 0A				:5 asl
   291 52E1 09 40					ora #$40
   292 52E3 91 B9					sta	(fx_ptr),y		;RED
   293 							
   294 52E5 60						rts
   295 							
   296 							
   297 52E6			pr_litera
   298 52E6 86 97					stx pom0a
   299 52E8 84 98					sty pom0b
   300 52EA 0A 0A 0A					:3 asl
   301 52ED 85 8E					sta pom1
   302 							
   303 							
   304 52EF A0 07					ldy #7
   305 52F1 98			@			tya
   306 52F2 0A 0A 0A 0A 0A				:5 asl
   307 52F7 65 97					adc pom0a
   308 52F9 69 0C					adc #12
   309 52FB AA						tax
   310 52FC B1 8E					lda (pom1),y
   311 52FE 49 FF					eor #255
   312 5300 9D 00 06					sta title1b,x
   313 5303 88						dey
   314 5304 10 EB					bpl @-
   315 							
   316 5306 A6 97					ldx pom0a
   317 5308 A4 98					ldy pom0b
   318 530A 60						rts
   319 							
   320 530B			wpisz
   321 530B 85 96					sta pom0
   322 530D 86 97					stx pom0a
   323 530F 84 98					sty pom0b
   324
   325 5311 98						tya
   326 5312 0A 0A					:2 asl
   327 5314 85 99					sta pom0c
   328 5316 0A 0A					:2 asl
   329 5318 65 99					adc pom0c
   330 531A 85 99					sta pom0c
   331 531C 8A						txa
   332 531D 0A						asl
   333 531E 65 99					adc pom0c
   334 5320 69 04					adc #4
   335 5322 AA						tax
   336
   337 5323 A0 08					ldy #8
   338 5325 A5 96		@			lda pom0
   339 5327 0A						asl
   340 5328 3E 01 05					rol bufor1+1,x
   341 532B 3E 00 05					rol bufor1,x
   342 532E A5 96					lda pom0
   343 5330 0A						asl
   344 5331 3E 01 05					rol bufor1+1,x
   345 5334 3E 00 05					rol bufor1,x
   346 5337 85 96					sta pom0			
   347 5339 88						dey
   348 533A D0 E9					bne @-
   349 							
   350 533C A6 97					ldx pom0a
   351 533E A4 98					ldy pom0b
   352 5340 60						rts
   353
   354 				.endl			
   446 5341						icl 'efekt.asm'
Source: efekt.asm
     1 				//efekt kolorowych liter
     2
     3 5341			.local efekt
     4 5341 01 03 07 0F 1F 3F + tabmaska0	dta %00000001,%00000011,%00000111,%00001111,%00011111,%00111111,%01111111
     5 5348 FE FC F8 F0 E0 C0 + tabmaska1	dta %11111110,%11111100,%11111000,%11110000,%11100000,%11000000,%10000000
     6
     7 = 0098			nrbitu	equ pom0b
     8 = 0099			maska	equ pom0c
     9 = 009A			linia	equ pom0d
    10 = 009B			tekst	equ pom0e
    11 = 009D			poz_duszka equ pom0g
    12
    13
    14 534F			tab0	
    15 534F 00 08 10 18 20 28 + :128	dta b(<[#*8])
    16 53CF			tab1	
    17 53CF C0 C0 C0 C0 C0 C0 + :128	dta b(>[znaki1+#*8])
    18 544F 00 01 01 01 02 03 + tab2	:256 BITY #
    19
    20 				.macro BITY var
    21 					.IF :var & 3 
    22 						?a = 1
    23 					.ELSE
    24 						?a = 0
    25 					.ENDIF	
    26 					.IF :var & 12 
    27 						?a = ?a + 2
    28 					.ENDIF
    29 					.IF :var & 48
    30 						?a = ?a + 4
    31 					.ENDIF
    32 					.IF (:var & 192)
    33 						?a = ?a + 8
    34 					.ENDIF
    35 					dta b(?a)
    36 				.endm
    37
    38
    39 554F			clear
    40 554F A9 00				lda #0
    41 5551 A0 07				ldy #7
    42 5553 91 8E		@		sta (pom1),y
    43 5555 88					dey
    44 5556 10 FB				bpl @-
    45 5558 60					rts
    46
    47 				//w A pozycja pozioma , w X nr duszka, w "linia" pozycja pionowa duszka
    48 5559			print
    49 5559 85 9D				sta poz_duszka			;w A pozycja pozioma duszka
    50 555B 8A					txa						;ustaw adres duszka po X
    51 555C 18					clc
    52 555D 69 03				adc #3
    53 555F 09 F8				ora #>sprites
    54 5561 85 8F				sta pom1+1
    55 5563 A5 9A 85 8E				mva linia pom1
    56 						
    57 5567 A2 FF 86 99				mvx #255 maska
    58 						
    59 556B A5 9D				lda poz_duszka
    60 556D C9 30				cmp #48
    61 556F B0 0B				bcs p1
    62 5571 C9 29				cmp #41
    63 5573 90 16				bcc p3			;poza ekranem
    64 5575 AA					tax
    65 5576 BD 18 53				lda tabmaska0-41,x
    66 5579 4C 8D 55				jmp p0
    67 						
    68 557C C9 C9		p1		cmp #201
    69 557E 90 0F				bcc p2		;bez maski =255
    70 5580 C9 D0				cmp #208
    71 5582 B0 07				bcs p3		;poza ekranem
    72
    73 5584 AA					tax
    74 5585 BD 7F 52				lda tabmaska1-201,x
    75 5588 4C 8D 55				jmp p0
    76 						
    77 558B A9 00		p3		lda #0
    78 558D 85 99		p0		sta maska
    79 						
    80 = 558F			p2		equ *		
    81 						
    82 						
    83 558F A5 9D				lda poz_duszka
    84 5591 38					sec
    85 5592 E9 30				sbc #48		;poza ekranem
    86 5594 90 B9				bcc clear
    87 						
    88 5596 48					pha
    89 5597 29 03				and #3
    90 5599 85 98				sta nrBitu
    91 559B 68					pla
    92 559C 4A 4A				:2 lsr
    93
    94 559E A8					tay
    95 559F B1 9B				lda (tekst),y
    96 55A1 AA					tax
    97 55A2 BD CF 52				lda tab0-128,x
    98 55A5 85 8C				sta pom
    99 55A7 BD 4F 53				lda tab1-128,x
   100 55AA 85 8D				sta pom+1
   101
   102 55AC C8					iny
   103 55AD B1 9B				lda (tekst),y
   104 55AF AA					tax
   105 55B0 BD CF 52				lda tab0-128,x
   106 55B3 85 90				sta pom2
   107 55B5 BD 4F 53				lda tab1-128,x
   108 55B8 85 91				sta pom2+1
   109
   110 55BA C8					iny
   111 55BB B1 9B				lda (tekst),y
   112 55BD AA					tax
   113 55BE BD CF 52				lda tab0-128,x
   114 55C1 85 92				sta pom3
   115 55C3 BD 4F 53				lda tab1-128,x
   116 55C6 85 93				sta pom3+1	
   117
   118 55C8 A0 07				ldy #7
   119 						
   120 55CA A6 98				ldx nrBitu
   121 55CC D0 1C				bne @+
   122 						
   123 55CE B1 8C		loc0	lda (pom),y
   124 55D0 AA					tax
   125 55D1 BD 4F 54				lda tab2,x		;tablica ksztaltow
   126 55D4 0A 0A 0A 0A				:4 asl
   127 55D8 85 97				sta pom0a
   128 55DA B1 90				lda (pom2),y
   129 55DC AA					tax
   130 55DD BD 4F 54				lda tab2,x
   131 55E0 05 97				ora pom0a
   132 55E2 25 99				and maska
   133 55E4 91 8E				sta (pom1),y
   134 55E6 88					dey
   135 55E7 10 E5				bpl loc0
   136 55E9 60					rts
   137 						
   138 55EA E0 03		@		cpx #3
   139 55EC D0 2C				bne @+
   140 						
   141 55EE B1 8C		loc1	lda (pom),y
   142 55F0 29 03				and #%00000011
   143 55F2 AA					tax
   144 55F3 BD 4F 54				lda tab2,x
   145 55F6 4A					lsr
   146 55F7 6A					ror
   147 55F8 85 97				sta pom0a
   148 						
   149 55FA B1 90				lda (pom2),y
   150 55FC AA					tax
   151 55FD BD 4F 54				lda tab2,x
   152 5600 0A 0A 0A				:3 asl
   153 5603 05 97				ora pom0a
   154 5605 85 97				sta pom0a
   155 						
   156 5607 B1 92				lda (pom3),y
   157 5609 29 FC				and #%11111100
   158 560B AA					tax
   159 560C BD 4F 54				lda tab2,x
   160 560F 4A					lsr
   161 5610 05 97				ora pom0a
   162 5612 25 99				and maska
   163 5614 91 8E				sta (pom1),y
   164 5616 88					dey
   165 5617 10 D5				bpl loc1
   166 5619 60					rts
   167
   168 561A E0 02		@		cpx #2
   169 561C D0 2D				bne @+
   170 561E			loc2	
   171 561E B1 8C				lda (pom),y
   172 5620 29 0F				and #%00001111
   173 5622 AA					tax
   174 5623 BD 4F 54				lda tab2,x
   175 5626 4A					lsr
   176 5627 6A					ror
   177 5628 6A					ror
   178 5629 85 97				sta pom0a
   179 						
   180 562B B1 90				lda (pom2),y
   181 562D AA					tax
   182 562E BD 4F 54				lda tab2,x
   183 5631 0A 0A				:2 asl
   184 5633 05 97				ora pom0a
   185 5635 85 97				sta pom0a
   186 						
   187 5637 B1 92				lda (pom3),y
   188 5639 29 F0				and #%11110000
   189 563B AA					tax
   190 563C BD 4F 54				lda tab2,x
   191 563F 4A 4A				:2 lsr
   192 5641 05 97				ora pom0a
   193 5643 25 99				and maska
   194 5645 91 8E				sta (pom1),y
   195 5647 88					dey
   196 5648 10 D4				bpl loc2
   197 						
   198 564A 60					rts		
   199 						
   200 						
   201 						
   202 564B			@		
   203 564B B1 8C		loc3	lda (pom),y
   204 564D 29 3F				and #%00111111
   205 564F AA					tax
   206 5650 BD 4F 54				lda tab2,x
   207 5653 4A					lsr
   208 5654 6A					ror
   209 5655 6A					ror
   210 5656 6A					ror
   211 5657 85 97				sta pom0a
   212 						
   213 5659 B1 90				lda (pom2),y
   214 565B AA					tax
   215 565C BD 4F 54				lda tab2,x
   216 565F 0A					asl
   217 5660 05 97				ora pom0a
   218 5662 85 97				sta pom0a
   219 						
   220 5664 B1 92				lda (pom3),y
   221 5666 29 C0				and #%11000000
   222 5668 AA					tax
   223 5669 BD 4F 54				lda tab2,x
   224 566C 4A 4A 4A				:3 lsr
   225 566F 05 97				ora pom0a
   226 5671 25 99				and maska
   227 5673 91 8E				sta (pom1),y
   228 5675 88					dey
   229 5676 10 D3				bpl loc3
   230 5678 60					rts				
   231 						
   232 				.endl
   447
   448 5679			default_colors			
   449 5679 64			kolor_gacek0	dta b($64)
   450 567A 18			kolor_gacek1	dta b($18)
   451 567B EC			explo_c0		dta b($ec)
   452 567C 24			explo_c1		dta b($24)
   453 567D 24			taniec0			dta b(36)
   454 567E 44			taniec1			dta b(68)
   455 567F 08 08 28 28 08	mumia_kolor_tab	.he 08,08,28,28,08
   456
   457
   458 = 5683			paraliz_tab0	equ *-1
   459 5684 00 D0 E0 00 00 D0 + 				.he 00,d0,e0,00,00,d0,60
   460 = 568A			paraliz_tab1	equ *-1
   461 568B 20 00 00 80 C0 D0 + 				.he 20,00,00,80,c0,d0,60
   462 = 5691			paraliz_tab2	equ *-1
   463 5692 A0 00 A0 00 C0 00 + 				.he a0,00,a0,00,c0,00,60
   464 								
   465 = 5698			paraliz_tab0a	equ *-1
   466 5699 60 FF FF 40 70 FF + 				.he 60,ff,ff,40,70,ff,b0
   467 = 569F			paraliz_tab1a	equ *-1
   468 56A0 80 70 90 FF FF FF + 				.he 80,70,90,ff,ff,ff,b0
   469 = 56A6			paraliz_tab2a	equ *-1
   470 56A7 FF 70 D0 40 FF 40 + 				.he ff,70,d0,40,ff,40,b0				
   471
   472 56AE			ntsc_colors
   473 56AE 64 38 EC 24 2B 51				.he 64,38,ec,24,2b,51
   474 56B4 08 08 28 28 08				.he 08,08,28,28,08
   475 							
   476 				///////			
   477 							
   478 56B9			level_color_value_tab_ntsc
   479 56B9 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,e2,44,42,00,c6,c2,00,24		;akropol
   480 56CD 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,d6,00,00,34,00,00,00,00,00,00		;zamek
   481 56E1 00 00 00 00 00 00 + 		.he 00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,94,00,00,00		;miasto
   482 56F5 86 00 00 00 84 00 + 		.he 86,00,00,00,84,00,00,00,64,00,00,00,00,00,c6,00,d2,34,00,00		;droga	
   483
   484 5709			level_colors_tab_ntsc						;kolory startowe
   485 5709 86 28 34 0E 00			.he 86,28,34,0e,00					;poziom=0 ze sfinksem
   486 570E 78 24 F8 2E 00			.he 78,24,f8,2e,00				;akropol
   487 5713 00 0C 06 8A 00			.he 00,0c,06,8a,00				;zamek
   488 5718 96 06 0A 0F 00			.he 96,06,0a,0f,00				;miasto
   489 571D 88 46 EC 0F 00			.he 88,46,ec,0f,00				;droga		
   490 						
   491 5722 BD 00 BD 00 A5 00 + tab_spadanie_ntsc	dta a([246-19]*5/6),a([246-19]*5/6),a([215-17]*5/6),a([215-17]*5/6),a([160-12]*5/6),a([160-12]*5/6),a([160-12]*5/6),a([160-12]*5/6),a([80-6]*5/6),a([80-6]*5/6),a([40-3]*5/6),a([40-3]*5/6),a([20*5]/6),a([20*5]/6),a([10*5]/6),a([10*5]/6)	
   492 5742 0A 00 14 00 28 00 + tab_lot.ntsc		dta a([12*5]/6),a([24*5]/6),a([48*5]/6),a([48*5]/6),a([96*5]/6),a([96*5]/6),a([192*5]/6),a([340*5]/6)
   493 = 00D5			jwbok=([256*5]/6)
   494 = 0050			mumia_speed_ntsc=[96*5]/6
   495
   496 = 0027			glob_speed0=47*5/6	;64
   497 = 0037			glob_speed1=67*5/6	;96
   498 = 0048			glob_speed2=87*5/6	;128
   499 = 0068			glob_speed3=125*5/6	;160
   500 						
   501
   502 5752 B2 92 70 30 4E 6E + tab_globus2 dta <(-glob_speed0*2),<(-glob_speed1*2),<(-glob_speed2*2),<(-glob_speed3*2),<(glob_speed0*2),<(glob_speed1*2),<(glob_speed2*2),<(glob_speed3*2)
   503 575A D9 C9 B8 98 27 37 + tab_globus0 dta <-glob_speed0,<-glob_speed1,<-glob_speed2,<-glob_speed3,<glob_speed0,<glob_speed1,<glob_speed2,<glob_speed3
   504 5762 B2 92 70 30 4E 6E + 			dta <(-glob_speed0*2),<(-glob_speed1*2),<(-glob_speed2*2),<(-glob_speed3*2),<(glob_speed0*2),<(glob_speed1*2),<(glob_speed2*2),<(glob_speed3*2)
   505 							
   506 576A 4F 00 B1 00 5F 00 + ptak_tabX0 dta <speed_ptak,0,<-speed_ptak,0,<speed_ptak1,0,<-speed_ptak1,0
   507 5772 00 9E 00 62 00 BE + ptak_tabY0 dta 0,<(2*speed_ptak),0,<-(2*speed_ptak),0,<(2*speed_ptak1),0,<-(2*speed_ptak1)
   508
   509 577A FF FF FF FF 00 00 + tab_globus3	dta >(-glob_speed0*2),>(-glob_speed1*2),>(-glob_speed2*2),>(-glob_speed3*2),>(glob_speed0*2),>(glob_speed1*2),>(glob_speed2*2),>(glob_speed3*2)	
   510 5782 FF FF FF FF 00 00 + tab_globus1 dta >-glob_speed0,>-glob_speed1,>-glob_speed2,>-glob_speed3,>glob_speed0,>glob_speed1,>glob_speed2,>glob_speed3
   511 578A FF FF FF FF 00 00 + 			dta >(-glob_speed0*2),>(-glob_speed1*2),>(-glob_speed2*2),>(-glob_speed3*2),>(glob_speed0*2),>(glob_speed1*2),>(glob_speed2*2),>(glob_speed3*2)	
   512 							
   513 = 004F			speed_ptak=95*5/6	
   514 = 005F			speed_ptak1=115*5/6
   515
   516
   517 5792 00 00 FF 00 00 00 + ptak_tabX1 dta >speed_ptak,0,>-speed_ptak,0,>speed_ptak1,0,>-speed_ptak1,0			
   518 579A 00 00 00 FF 00 00 + ptak_tabY1 dta 0,>(2*speed_ptak),0,>-(2*speed_ptak),0,>(2*speed_ptak1),0,>-(2*speed_ptak1)
   519
   520 = 0100			LOT_START=256
   521
   522 57A2 B2 AF B5 AE A4	round_text	dta d'ROUND'*
   523 57A7 AC A9 B6 A5 B3	lives_text	dta d'LIVES'*
   524
   525 57AC			popraw_kolory
   526 57AC A2 0A					ldx #10
   527 57AE BD AE 56		@			lda ntsc_colors,x
   528 57B1 9D 79 56					sta default_colors,x
   529 57B4 CA						dex
   530 57B5 10 F7					bpl @-
   531 							
   532 57B7 A2 13					ldx #19
   533 57B9 BD B9 56		@			lda level_color_value_tab_ntsc,x
   534 57BC 9D 22 34					sta POZ.level_color_value_tab+26+3,x
   535 57BF BD CD 56					lda level_color_value_tab_ntsc+20,x
   536 57C2 9D 3C 34					sta POZ.level_color_value_tab+52+3,x
   537 57C5 BD E1 56					lda level_color_value_tab_ntsc+40,x
   538 57C8 9D 56 34					sta POZ.level_color_value_tab+78+3,x
   539 57CB BD F5 56					lda level_color_value_tab_ntsc+60,x
   540 57CE 9D 70 34					sta POZ.level_color_value_tab+104+3,x
   541 57D1 CA						dex
   542 57D2 10 E5					bpl @-
   543 							
   544 57D4 A2 18					ldx #24
   545 57D6 BD 09 57		@			lda level_colors_tab_ntsc,x
   546 57D9 9D 8C 34					sta POZ.level_colors_tab,x
   547 57DC CA						dex
   548 57DD 10 F7					bpl @-
   549 							
   550 57DF A2 1F					ldx #31
   551 57E1 BD 22 57		@			lda tab_spadanie_ntsc,x
   552 57E4 9D 03 42					sta joy.tab_spadanie,x
   553 57E7 CA						dex
   554 57E8 10 F7					bpl @-
   555 							
   556 57EA A2 0F					ldx #15
   557 57EC BD 42 57		@			lda tab_lot.ntsc,x
   558 57EF 9D BC 42					sta joy.tab_lot,x
   559 57F2 CA						dex
   560 57F3 10 F7					bpl @-
   561 							
   562 57F5 A9 D5					lda #<jwbok
   563 57F7 8D 79 44					sta joy.jlewo_m+1
   564 57FA 8D F5 44					sta joy.jprawo_m+1
   565 57FD A9 00					lda #>jwbok
   566 57FF 8D 80 44					sta joy.jlewo_s+1
   567 5802 8D FC 44					sta joy.jprawo_s+1	
   568
   569 5805 A9 50 8D 24 45				mva #mumia_speed_ntsc ai.mumia_speed
   570 							
   571 580A A2 4F					ldx #79
   572 580C BD 52 57		@			lda tab_globus2,x
   573 580F 9D 84 4A					sta ai.tab_globus2,x
   574 5812 CA						dex
   575 5813 10 F7					bpl @-
   576 							
   577 5815 A9 00 8D E6 43				mva #<LOT_START joy._lot0+1
   578 581A A9 F0 8D 15 43				mva #<[LOT_START-16] joy._lot16+1
   579 581F A9 FF 8D 1B 43				mva #<[LOT_START-1] joy._lot1+1
   580 							
   581 5824 A9 30 8D 0E 3F				mva #48 cl._after_paraliz+1
   582 5829 A9 32 8D 86 3E				mva #<306 cl._licznik_paraliz+1
   583 582E A9 01 8D 8B 3E				mva #>306 cl._licznik_paraliz+6
   584 							
   585 5833 A9 24 8D 9F 23				mva #30*6/5 next_bonus
   586 5838 A9 48 8D 28 46				mva #60*6/5 ai._ptak60+1
   587 583D A9 3C 8D 12 3D				mva #50*6/5 cl._ptak50+1
   588 5842 A9 78 8D 42 5B				mva #100*6/5 _ptak100+1
   589 							
   590 5847 A9 B4 8D 26 45				mva #150*6/5 ai.ile_chodzenia
   591 584C A9 D4 8D 49 47				mva #255*5/6 ai.mumia_spada+1
   592 							
   593 5851 A9 F0 8D B1 4E				mva #<[288*5/6] ai.literka_m+1
   594 5856 A9 00 8D B8 4E				mva #>[288*5/6] ai.literka_s+1
   595 							
   596 							//poprawiamy dolnÄ… belkÄ™			
   597 585B A9 8F 8D 1D 20				mva #<(panel_adr+48) dlist0+33-4
   598 5860 8D 42 20					sta dlist1+31
   599 5863 A9 21 8D 1E 20				mva #>(panel_adr+48) dlist0+34-4
   600 5868 8D 43 20					sta dlist1+32
   601 586B A9 00 8D 1F 20				mva #0 dlist0+35-4
   602 5870 8D 44 20					sta dlist1+33			
   603 							
   604 							
   605 5873 A2 57					ldx #87
   606 5875 BD 0C C0		@			lda $c00c,x
   607 5878 9D 10 C0					sta $c010,x
   608 587B CA						dex
   609 587C 10 F7					bpl @-
   610 							
   611 587E A9 E2 8D 5C 31				mva #$e6-4 panel._pb0+1		;-4
   612 5883 A9 0E 8D 70 24				mva #$0e _colscore+1
   613 							
   614 5888 A9 18 8D 65 31				mva #21+3 panel._round+1
   615 588D A9 21 8D 9B 31				mva #29+4 panel._lives+1
   616 							
   617 5892 A2 04					ldx #4
   618 5894 BD A2 57		@			lda round_text,x
   619 5897 9D A1 21					sta panel_adr+48+18,x
   620 589A BD A7 57					lda lives_text,x
   621 589D 9D AA 21					sta panel_adr+48+18+9,x			
   622 58A0 CA						dex
   623 58A1 10 F1					bpl @-
   624 							
   625 58A3 A9 68 8D 2A 24				mva #$68 _posp0+1
   626 58A8 A9 8C 8D 2F 24				mva #$8c _posp2+1
   627 58AD A9 46 8D 61 24				mva #$46 _colpm0+1
   628 58B2 A9 F6 8D 66 24				mva #$f6 _colpm2+1
   629 							
   630 58B7 60						rts
   631 						
   632 58B8 78			run			sei
   633 58B9 A9 00 8D 0E D4				mva #0 nmien
   634 58BE 8D 0E D2					sta irqen
   635 58C1 85 BC					sta muza0
   636 58C3 8D 01 D8					sta kolor_tlo
   637 							
   638 							
   639 58C6 8D 08 D2					sta audctl			;inicjalizacja dÅºwiÄ™ku
   640 58C9 A9 03 8D 0F D2				mva #3 skctl
   641 							
   642 58CE A9 FE 8D 01 D3				mva #$fe portb
   643 							
   644 58D3 A9 83 8D FA FF A9 + 			mwa #nmi $fffa
   645 58DD A9 82 8D FE FF A9 + 			mwa #irq $fffe
   646 58E7 A9 82 8D FC FF A9 + 			mwa #irq $fffc
   647 						
   648 58F1 A9 00 8D 00 02 A9 + 			mwa #dli dliv
   649 58FB A9 8E 8D 22 02 A9 + 			mwa #vblk vbiv
   650 						
   651 						
   652 5905 A9 40 8D 0E D4				mva #64 nmien
   653 							
   654 590A A9 20					lda #$20
   655 590C 8D 00 B1					sta RMTGLOBALVOLUMEFADE
   656 							
   657 590F 4E 14 D0					lsr NTSCGTIA
   658 5912 F0 03					beq *+5
   659 5914 20 AC 57					jsr popraw_kolory
   660 						
   661 				//poczatek
   662 								
   663 5917 20 00 80					jsr wait_vbl
   664
   665 591A A9 00 8D 02 D4 A9 + 			mwa #dlist0 dlptr
   666 5924 A9 C0 8D 0E D4				mva #192 nmien		;wlacz dli
   667 								
   668 5929 A9 03 8D 1D D0				mva #3 pmcntl
   669 592E A9 00 8D 0C D0				mva #0 sizem
   670 5933 A9 F8 8D 07 D4				mva #>sprites pmbase
   671 							
   672 5938 20 CD 2D					jsr multi.init_sprite
   673 							
   674 593B AD 79 56 8D 30 2B				mva kolor_gacek0 sprite_c0			;64
   675 5941 AD 7A 56 8D 38 2B				mva kolor_gacek1 sprite_c1			;98
   676 5947 A9 14 8D 20 2B				mva #20 sprite_shape
   677 594C 8D 28 2B					sta sprite_shape0
   678 594F A9 03 8D 48 2B				mva #3 sprite_anim_speed
   679 5954 A9 04 8D 40 2B				mva #4 sprite_anim
   680 5959 A9 03 8D 50 2B				mva #%11 sprite_mask  
   681 							
   682 							
   683
   684 							
   685 595E A9 00					lda #0
   686 5960 8D 27 D8					sta hscore
   687 5963 8D 28 D8					sta hscore+1
   688 5966 8D 29 D8					sta hscore+2
   689 							
   690 5969 A2 4F					ldx #79
   691 596B BD 84 4A		@			lda ai.tab_globus2,x
   692 596E 9D D4 4A					sta ai.tab_globus_def,x
   693 5971 CA						dex
   694 5972 10 F7					bpl @-
   695 							
   696 							
   697 5974			tit0			
   698 5974 A9 00 8D 00 D8				mva #0	level
   699 5979 8D 01 D8					sta kolor_tlo
   700 597C 8D 0C D8					sta ruch_poziom
   701 597F A9 FF 85 BB					mva #-1 level_melody
   702
   703 5983 A9 01 8D 0D D8				mva #1 round
   704 5988 20 64 31					jsr panel.print_round
   705 598B A9 00 8D 0E D8				mva #0 score
   706 5990 8D 0F D8					sta score+1
   707 5993 8D 10 D8					sta score+2	
   708 5996 85 C2					sta bonus_flag
   709 5998 85 C3					sta paraliz_flag
   710 599A 8D 2E D8					sta czy_extra
   711 599D A9 05 85 C1					mva #5 score1		;pierwsze bonus przy 5000 punktach
   712 59A1 A9 14 85 C4					mva #20 licznik1_paraliz
   713 59A5 A9 0A 85 C5					mva #LICZNIK_EXTRA_START licznik_extra
   714 59A9 A9 FF 85 C7					mva #$ff random_extra
   715 59AD A9 03 8D 16 D8				mva #3 lives
   716 59B2 20 9A 31					jsr panel.print_lives
   717 59B5 20 83 31					jsr panel.print_score1
   718 					
   719 59B8 A2 1F					ldx #31
   720 59BA 9D 99 2B		@			sta blok_status,x
   721 59BD 9D B9 2B					sta blok_x01,x
   722 59C0 9D D9 2B					sta blok_x23,x
   723 59C3 CA						dex
   724 59C4 10 F4					bpl @-
   725
   726 59C6 20 26 51					jsr tit.title
   727
   728 59C9 A2 4F					ldx #79
   729 59CB BD D4 4A		@			lda ai.tab_globus_def,x		;odtwÃ³rz tablicÄ™ szybkoÅ›ci kulek
   730 59CE 9D 84 4A					sta ai.tab_globus2,x
   731 59D1 CA						dex
   732 59D2 10 F7					bpl @-		
   733 							
   734 59D4 4C 92 5A					jmp loop1
   735
   736
   737
   738 						
   739 59D7			loop		
   740 59D7 AD 0B D4					lda vcount
   741 59DA C9 75					cmp #$75
   742 59DC B0 F9					bcs loop
   743
   744 59DE AD 0B D4		@			lda vcount
   745 59E1 C9 70					cmp #$70
   746 59E3 90 F9					bcc @-  
   747 							
   748 59E5 20 D0 2E					jsr multi.show_vbxe_sprites
   749 59E8 A5 A0					lda ile_enemy
   750 59EA C9 02					cmp #2
   751 59EC B0 05					bcs *+7
   752 59EE AD 0B D4					lda vcount
   753 59F1 85 00					sta 0			
   754 							
   755 							
   756 							
   757 							;jsr bomb.animuj_bomby
   758 							
   759 59F3 20 97 2D					jsr multi.animuj
   760 							
   761 59F6 A5 B8					lda death
   762 59F8 D0 08					bne @+
   763 59FA AD 08 D8					lda ile_bomb
   764 59FD F0 03					beq @+
   765 59FF 20 AE 3C					jsr cl.player_vs_enemy
   766 = 5A02			@			equ *	
   767 							
   768 							
   769 							
   770 5A02 AD 2B D8					lda licznik_paraliz
   771 5A05 0D 2C D8					ora licznik_paraliz+1
   772 5A08 F0 19					beq @+
   773 5A0A 38						sec
   774 5A0B AD 2B D8					lda licznik_paraliz
   775 5A0E E9 01					sbc #1
   776 5A10 8D 2B D8					sta licznik_paraliz
   777 5A13 AD 2C D8					lda licznik_paraliz+1
   778 5A16 E9 00					sbc #0
   779 5A18 8D 2C D8					sta licznik_paraliz+1
   780 5A1B 0D 2B D8					ora licznik_paraliz
   781 5A1E D0 0D					bne @+1
   782
   783 5A20 20 D9 3E					jsr cl.usun_paraliz
   784 							
   785 5A23 A5 B8		@			lda death
   786 5A25 D0 06					bne @+
   787 5A27 20 A6 45					jsr ai.new_enemy
   788 5A2A 20 B3 49					jsr ai.play
   789 = 5A2D			@			equ *			
   790 							
   791 5A2D A5 B6					lda ile_score
   792 5A2F F0 03					beq *+5
   793 5A31 20 62 28					jsr bomb.zgas_bonus
   794 							
   795 5A34 A5 B8					lda death
   796 5A36 F0 06					beq *+8
   797 5A38 20 1B 3F					jsr cl.animuj_death
   798 5A3B 4C C4 5A					jmp l0
   799 							
   800 5A3E 20 7C 29					jsr bomb.zbieraj_bomby
   801
   802 5A41 20 55 43					jsr joy.fire
   803 5A44 20 23 42					jsr joy.move_jack
   804 5A47 20 08 44					jsr joy.joystick
   805 5A4A 20 CC 42					jsr joy.joystick_down
   806
   807
   808 5A4D AD 08 D8					lda ile_bomb
   809 5A50 D0 72					bne l0
   810 5A52 A5 B7					lda prio
   811 5A54 F0 05					beq l0a
   812 5A56 AD 1D D8					lda kanal4
   813 5A59 D0 69					bne l0
   814
   815 5A5B 20 32 80		l0a			jsr taniec
   816 							
   817
   818 5A5E AD 0D D8					lda round
   819 5A61 18						clc
   820 5A62 F8						sed
   821 5A63 69 01					adc #1
   822 5A65 8D 0D D8					sta round
   823 5A68 D8						cld
   824 							
   825 5A69 A9 00 8D 00 D4				mva #0 dmactl
   826 5A6E A0 40					ldy	#$40	; VIDEO_CONTROL
   827 5A70 91 B9					sta (fx_ptr),y			
   828 5A72 20 A3 A1					jsr deco.blit5
   829 5A75 A9 00 85 B6					mva #0 ile_score
   830 							
   831 5A79 A5 BF					lda ile_zapalonych
   832 5A7B C9 14					cmp #20
   833 5A7D 90 03					bcc *+5
   834 5A7F 20 E2 80					jsr print_bonus				;jesli zebrano 20 lub wiecej zapalonych bomb to pokaz bonus		
   835
   836 							
   837 5A82 EE 00 D8					inc level
   838 5A85 AD 00 D8					lda level
   839 5A88 C9 3F					cmp #63
   840 5A8A 90 03					bcc *+5
   841 5A8C 4C 58 5B					jmp congrat
   842 5A8F 20 64 31					jsr panel.print_round
   843 5A92			loop1			
   844 5A92 AC 00 D8					ldy level
   845 5A95 B9 79 32					lda POZ.poziom_tab,y
   846 5A98 8D 00 A0					sta deco.mapa
   847 							
   848
   849 5A9B 20 4F B0					jsr rmt_silence
   850 5A9E 20 71 A1					jsr deco.start
   851 5AA1 20 2D A1					jsr deco.set_colors
   852 							
   853 							
   854 5AA4 20 E6 5A					jsr init_level
   855 5AA7 20 6B 38					jsr POZ.nowy_poziom				
   856 5AAA 20 BF A1					jsr deco.rysuj_rampe1		
   857 5AAD 20 55 A1					jsr deco.draw_screen
   858 5AB0 20 25 3A					jsr POZ.dodaj_bomby
   859 5AB3 20 00 80					jsr wait_vbl
   860 5AB6 A9 3B 8D 00 D4				mva #$3b dmactl
   861 5ABB A0 40					ldy	#$40	; VIDEO_CONTROL
   862 5ABD A9 01 91 B9					mva	#1	(fx_ptr),y	; xdl_enabled
   863 							
   864 5AC1 20 CC A2					jsr deco.start1
   865 							
   866 							
   867 5AC4			l0			
   868 5AC4 EE 0A D8					inc ramka
   869 5AC7 A5 B8					lda death
   870 5AC9 D0 06					bne l0c
   871 							
   872 5ACB 20 4B 82					jsr rmt_play0
   873 							
   874 							
   875 5ACE 20 5B 4F		l0c1		jsr sfx.play_fx
   876 						
   877 5AD1			l0c			
   878 5AD1 AD 2B D8					lda licznik_paraliz
   879 5AD4 0D 2C D8					ora licznik_paraliz+1
   880 5AD7 C9 46					cmp #70
   881 5AD9 D0 05					bne @+
   882 5ADB A9 7C					lda #$7c
   883 5ADD 20 2F 82					jsr rmt_init0		;koncowka paralizu
   884 = 5AE0			@			equ *
   885
   886 5AE0 20 80 31					jsr panel.print_score
   887 							
   888
   889 							
   890 							
   891 5AE3 4C D7 59					jmp loop
   892 							
   893
   894
   895 5AE6			init_level				
   896 5AE6 20 F4 2D					jsr multi.init_sprite1
   897 5AE9 20 F6 30					jsr panel.init
   898 5AEC A9 00 8D 14 D8				mva #0 bonus
   899 5AF1 85 BF					sta ile_zapalonych
   900 5AF3 85 B6					sta ile_score
   901
   902 5AF5			init_level1	
   903 5AF5 20 97 28					jsr bomb.zgas_bombe
   904 						
   905 5AF8 A0 5D					ldy #$5d
   906 5AFA A9 00 91 B9					mva #00 (fx_ptr),y
   907 							
   908 5AFE 20 0B 2E					jsr multi.hide_sprite
   909
   910 5B01 A2 07					ldx #7
   911 5B03 A9 00					lda #0
   912 5B05 9D 00 2B		@			sta sprite_x,x
   913 5B08 9D 27 45					sta ai.ruch,x
   914 5B0B CA						dex
   915 5B0C D0 F7					bne @-	
   916 5B0E 8D BA 2B					sta blok_x01+1
   917 5B11 8D DA 2B					sta blok_x23+1
   918 							
   919 5B14 A9 0B 8D 5F 2B				mva #t_none sprite_typ+7
   920 							
   921 5B19 A9 04 8D 40 2B				mva #4 sprite_anim
   922 5B1E A9 00 85 A0					mva #0 ile_enemy
   923 5B22 85 B8					sta death
   924 5B24 8D 2A D8					sta licznik_death
   925 5B27 8D 1D D8					sta kanal4
   926 5B2A 8D 1B D8					sta kanal3
   927 5B2D 85 C0					sta kolor_P
   928 5B2F 85 BE					sta czy_zapalona
   929 5B31 8D 2B D8					sta licznik_paraliz
   930 5B34 8D 2D D8					sta after_paraliz
   931 							;sta ile_liter		;ile liter pojawilo sie w poziomie
   932 5B37 AD 9F 23 8D 15 D8				mva next_bonus licznik_bonus
   933 5B3D A9 00 85 A2					mva #0 ile_ptakow
   934 5B41 A9 64 85 A3		_ptak100	mva #100 licznik_ptak
   935 					
   936 5B45 20 40 31					jsr panel.print_bonus
   937 5B48 20 9A 31					jsr panel.print_lives
   938 							
   939 5B4B 4C 4F B0					jmp rmt_silence
   940 							
   941 						
   942
   943 						
   944 								
   945 5B4E			add_pom
   946 5B4E 18						clc
   947 5B4F 65 8C					adc pom
   948 5B51 85 8C					sta pom
   949 5B53 90 02					bcc *+4
   950 5B55 E6 8D					inc pom+1
   951 5B57 60						rts
   952 							
   953 5B58			congrat
   954 5B58 20 00 80					jsr wait_vbl
   955 5B5B A9 3A 8D 00 D4				mva #$3a dmactl
   956 5B60 A9 72 8D 22 02 A9 + 			mwa #vblk1 vbiv
   957 5B6A 20 0B 2E					jsr multi.hide_sprite
   958 5B6D A9 00 8D 1A D0				mva #0 colbak
   959 5B72 20 4F B0					jsr rmt_silence
   960 							
   961 5B75 A9 DF 8D 02 D4 A9 + 			mwa #dlist_congrat dlptr
   962 5B7F A9 C1 8D 09 D4				mva #>znaki1+1 chbase
   963 5B84 A9 36 8D 18 D0				mva #$36 colpf2
   964 5B89 A9 68 8D 16 D0				mva #$68 colpf0
   965 							
   966 5B8E A9 7E					lda #$7e
   967 5B90 20 2F 82					jsr rmt_init0
   968 5B93 A9 01 85 BC					mva #1 muza0		;wlacz muzyke
   969 							
   970 							
   971 5B97 AD 10 D0		@			lda trig0
   972 5B9A F0 FB					beq @-
   973 							
   974 5B9C A2 32					ldx #50
   975 5B9E 20 00 80		@			jsr wait_vbl
   976 5BA1 CA						dex
   977 5BA2 D0 FA					bne @-
   978 							
   979 5BA4 AD 10 D0		@			lda trig0
   980 5BA7 D0 FB					bne @-
   981 							
   982 5BA9 AD 10 D0		@			lda trig0
   983 5BAC F0 FB					beq @-
   984 							
   985 5BAE 20 00 80					jsr wait_vbl
   986 5BB1 A9 00 8D 00 D4				mva #0 dmactl
   987 5BB6 8D 19 D0					sta colpf3
   988 5BB9 85 BC					sta muza0
   989 5BBB 8D 00 D8					sta level
   990 5BBE A9 8E 8D 22 02 A9 + 			mwa #vblk vbiv
   991 5BC8 A9 00 8D 02 D4 A9 + 			mwa #dlist0 dlptr		
   992 5BD2 20 4F B0					jsr rmt_silence
   993 							
   994 5BD5 4C 8F 5A					jmp loop1-3					;zapetlamy poziomy
   995 							//jmp cl.game_over1
   996 							
   997 							
   998 							
   999 5BD8						org $8000
  1000 8000			wait_vbl
  1001 8000-8263> A5 14					lda zegar
  1002 8002 C5 14					cmp zegar
  1003 8004 F0 FC					beq *-2
  1004 8006 60						rts
  1005 							
  1006 8007			wait_anim
  1007 8007 8D 2E 80					sta _wa0+1 
  1008 800A A9 00 85 14					mva #0 zegar
  1009 							
  1010 800E 20 D0 2E		@			jsr multi.show_vbxe_sprites
  1011 8011 EE 0A D8					inc ramka		
  1012 8014 20 97 2D					jsr multi.animuj
  1013 8017 20 4B 82					jsr rmt_play0
  1014 801A 20 62 28					jsr bomb.zgas_bonus
  1015
  1016 801D AD 0B D4		wa0			lda vcount
  1017 8020 C9 75					cmp #$75
  1018 8022 B0 F9					bcs wa0
  1019
  1020 8024 AD 0B D4		wa1			lda vcount
  1021 8027 C9 70					cmp #$70
  1022 8029 90 F9					bcc wa1  
  1023 							
  1024 802B A5 14					lda zegar
  1025 802D C9 00		_wa0		cmp #0
  1026 802F 90 DD					bcc @-
  1027 8031 60						rts
  1028
  1029 8032			taniec
  1030 8032 A9 76					lda #$76
  1031 8034 20 2F 82					jsr rmt_init0  ;muzyczka
  1032 8037 20 4F B0					jsr rmt_silence
  1033 803A A9 68 8D 20 2B				mva #shp_jtanczy sprite_shape
  1034 803F 8D 28 2B					sta sprite_shape0
  1035 8042 A9 02 8D 40 2B				mva #2 sprite_anim
  1036 8047 A9 01 8D 50 2B				mva #1 sprite_mask
  1037 804C A9 0F 8D 48 2B				mva #15 sprite_anim_speed			
  1038 8051 AD 7D 56					lda taniec0
  1039 8054 20 07 80					jsr wait_anim
  1040 8057 A9 6A 8D 20 2B				mva #shp_jtanczy+2 sprite_shape
  1041 805C 8D 28 2B					sta sprite_shape0
  1042 805F A9 07 8D 48 2B				mva #7 sprite_anim_speed			
  1043 8064 AD 7E 56					lda taniec1
  1044 8067 20 07 80					jsr wait_anim
  1045 806A A9 68 8D 20 2B				mva #shp_jtanczy sprite_shape
  1046 806F 8D 28 2B					sta sprite_shape0
  1047 8072 A9 0F 8D 48 2B				mva #15 sprite_anim_speed			
  1048 8077 AD 7D 56					lda taniec0
  1049 807A 20 07 80					jsr wait_anim
  1050 807D A9 6A 8D 20 2B				mva #shp_jtanczy+2 sprite_shape
  1051 8082 8D 28 2B					sta sprite_shape0
  1052 8085 A9 07 8D 48 2B				mva #7 sprite_anim_speed			
  1053 808A AD 7E 56					lda taniec1
  1054 808D 4C 07 80					jmp wait_anim	
  1055
  1056
  1057 8090 B9 AF B5 9A B6 A5 + nap_bonus0	dta d'YOU'*,b(26+128),d'VE  GOTTEN'*
  1058 809E 92 90 80 A6 A9 B2 + nap_bonus1	dta d'20 FIRE BOMBS.'*
  1059 80AC B3 B0 A5 A3 A9 A1 + nap_bonus2	dta d'SPECIAL  BONUS'*
  1060 80BA 80 91 90 90 90 90 + nap_bonus3	dta d' 10000  POINTS'*
  1061
  1062 80C8			wait1
  1063 80C8 85 97					sta pom0a
  1064 80CA 20 00 80		@			jsr wait_vbl
  1065 80CD 20 5B 4F					jsr sfx.play_fx
  1066 							;jsr rmt_play0
  1067 80D0 A5 14					lda zegar
  1068 80D2 29 0F					and #15
  1069 80D4 09 50					ora #$50
  1070 80D6 8D E9 24					sta colpm0s
  1071 					
  1072 80D9 C6 97					dec pom0a
  1073 80DB D0 ED					bne @-
  1074 80DD 60						rts
  1075
  1076 80DE			tab_bonus_score
  1077 80DE 10 20 30 50					.he 10,20,30,50
  1078 							
  1079 80E2			print_bonus
  1080 							;jsr wait_vbl
  1081 							;mva #0 dmactl
  1082 							;ldy	#$40	; VIDEO_CONTROL
  1083 							;sta (fx_ptr),y
  1084 80E2 A9 1C 8D 95 24				mva #28 licznik_start+1
  1085 80E7 A9 C0 8D 90 24				mva #>znaki1 vblk+2
  1086 80EC A9 23 8D 02 D4 A9 + 			mwa #dlist1 dlptr
  1087 80F6 A9 00 8D 01 D8				mva #0 kolor_tlo
  1088 80FB 8D 03 D8					sta kolor1
  1089 80FE A9 0F 8D 04 D8				mva #$0f kolor2
  1090 							
  1091 8103 A2 E0					ldx #$e0
  1092 8105 A9 00					lda #0
  1093 8107 9D 00 FB		@			sta sprites+$300,x
  1094 810A 9D 00 FC					sta sprites+$400,x
  1095 810D 9D 00 FD					sta sprites+$500,x
  1096 8110 9D 00 FE					sta sprites+$600,x
  1097 8113 9D 00 FF					sta sprites+$700,x
  1098 8116 CA						dex
  1099 8117 D0 EE					bne @-
  1100 							
  1101 8119 A2 07					ldx #7
  1102 811B A9 FC		@			lda #$fc
  1103 811D 9D 58 FE					sta sprites+$658,x
  1104 8120 A9 1E					lda #$1e
  1105 8122 9D 68 FE					sta sprites+$668,x
  1106 8125 A9 FE					lda #$fe
  1107 8127 9D 80 FE					sta sprites+$680,x
  1108 812A A9 7C					lda #$7c
  1109 812C 9D 90 FE					sta sprites+$690,x
  1110 812F A9 3F					lda #$3f
  1111 8131 9D 58 FF					sta sprites+$758,x
  1112 8134 9D 68 FF					sta sprites+$768,x
  1113 8137 A9 1F					lda #$1f
  1114 8139 9D 80 FF					sta sprites+$780,x
  1115 813C A9 3F					lda #$3f
  1116 813E 9D 90 FF					sta sprites+$790,x
  1117 8141 A9 C0					lda #$c0
  1118 8143 9D 68 FC					sta sprites+$468,x
  1119 8146 A9 7C					lda #$7c
  1120 8148 9D 90 FC					sta sprites+$490,x
  1121 814B CA						dex
  1122 814C 10 CD					bpl @-
  1123 							
  1124 							
  1125 							
  1126 							
  1127 							
  1128 814E A2 C0					ldx #192
  1129 8150 A9 80					lda #$80
  1130 8152 9D FF D9		@			sta obraz-1,x
  1131 8155 CA						dex
  1132 8156 D0 FA					bne @-
  1133 							
  1134 8158 A2 0D					ldx #13
  1135 815A BD 90 80		@			lda nap_bonus0,x
  1136 815D 9D 11 DA					sta obraz+17,x
  1137 8160 BD 9E 80					lda nap_bonus1,x
  1138 8163 9D 41 DA					sta obraz+17+48,x
  1139 8166 BD AC 80					lda nap_bonus2,x
  1140 8169 9D 71 DA					sta obraz+17+96,x
  1141 816C BD BA 80					lda nap_bonus3,x
  1142 816F 9D A1 DA					sta obraz+17+144,x
  1143 8172 CA						dex
  1144 8173 10 E5					bpl @-
  1145 							
  1146 							
  1147 8175 A9 64 8D DF 24				mva #$64 hposp2s
  1148 817A 8D D5 24					sta hposp0s
  1149 817D 8D DA 24					sta hposp1s
  1150 8180 A9 7C 8D E4 24				mva #$7c hposp3s
  1151 8185 A9 EA 8D F3 24				mva #$ea colpm2s
  1152 818A 8D F8 24					sta colpm3s
  1153 818D A9 03 8D C6 24				mva #3 sizep2s
  1154 8192 8D CB 24					sta sizep3s
  1155 8195 8D BC 24					sta sizep0s
  1156 8198 A9 56 8D E9 24				mva #$56 colpm0s
  1157 							
  1158 819D A5 BF					lda ile_zapalonych
  1159 819F 38						sec
  1160 81A0 E9 14					sbc #20
  1161 81A2 A8						tay
  1162 81A3 09 90					ora #$90
  1163 81A5 8D 42 DA					sta obraz+66
  1164 81A8 69 00					adc #0
  1165 81AA C9 94					cmp #$94
  1166 81AC D0 02					bne *+4
  1167 81AE A9 95					lda #$95
  1168 81B0 8D A2 DA					sta obraz+162
  1169 							
  1170 81B3 B9 DE 80					lda tab_bonus_score,y
  1171 81B6 85 96					sta pom0
  1172 							
  1173 81B8 20 00 80					jsr wait_vbl
  1174 81BB A9 3B 8D 00 D4				mva #$3b dmactl
  1175 							
  1176 							;lda #$8e
  1177 							;jsr rmt_init0
  1178 							
  1179 							
  1180 81C0 A9 46					lda #70
  1181 81C2 20 C8 80					jsr wait1
  1182 							
  1183 81C5 38			@			sec
  1184 81C6 A5 96					lda pom0
  1185 81C8 F0 37					beq @+
  1186 81CA F8						sed
  1187 81CB E9 01					sbc #1
  1188 81CD 85 96					sta pom0
  1189 							
  1190 81CF A5 C1					lda score1			;pomijamy wpÅ‚yw bonusu na pojawienie sie B
  1191 81D1 69 01					adc #1
  1192 81D3 85 C1					sta score1
  1193 81D5 D8						cld
  1194 							
  1195 81D6 A5 96					lda pom0
  1196 81D8 29 0F					and #15
  1197 81DA 09 90					ora #$90
  1198 81DC 8D A3 DA					sta obraz+163
  1199 81DF A5 96					lda pom0
  1200 81E1 4A 4A 4A 4A					:4 lsr
  1201 81E5 09 90					ora #$90
  1202 81E7 8D A2 DA					sta obraz+162
  1203 							
  1204 81EA A9 01					lda #1
  1205 81EC 20 2B 2A					jsr score_addx100
  1206 81EF 20 80 31					jsr panel.print_score
  1207 							
  1208 81F2 A0 08					ldy #fx_uderzenie
  1209 81F4 A9 02					lda #2
  1210 81F6 20 26 4F					jsr sfx.add_fx 
  1211 							
  1212 81F9 A9 02					lda #2
  1213 81FB 20 C8 80					jsr wait1
  1214 							
  1215 81FE 4C C5 81					jmp @-
  1216 							
  1217 8201			@			
  1218 8201 20 4F B0					jsr rmt_silence
  1219 8204 A9 6E					lda #110
  1220 8206 20 C8 80					jsr wait1
  1221 							
  1222 8209 A9 00 8D 02 D4 A9 + 			mwa #dlist0 dlptr
  1223 8213 A9 00 8D 00 D4				mva #0 dmactl
  1224 8218 8D BC 24					sta sizep0s
  1225 821B 8D C6 24					sta sizep2s
  1226 821E 8D CB 24					sta sizep3s
  1227 							
  1228 8221 20 20 2E					jsr multi.hide_sprite1
  1229 8224 A9 02 8D 95 24				mva #2 licznik_start+1		;odtworzenie oryginalnej wartosci
  1230 8229 A9 E0 8D 90 24				mva #>znaki vblk+2
  1231 822E 60						rts
  1232 							
  1233 							
  1234 822F			rmt_init0
  1235 822F 48						pha
  1236 8230 A0 5D					ldy #$5d
  1237 8232 A9 99 91 B9					mva #$99 (fx_ptr),y
  1238
  1239 8236 68						pla
  1240 8237 A2 00					ldx #<MUZYKA
  1241 8239 A0 40					ldy #>MUZYKA
  1242 823B 20 0F B0					jsr rmt_init
  1243 							
  1244 823E A0 5D					ldy #$5d
  1245 8240 A9 00 91 B9					mva #00 (fx_ptr),y	
  1246 8244 8D 1D D8					sta kanal4
  1247 8247 8D 1B D8					sta kanal3
  1248 824A 60						rts
  1249 							
  1250 824B			rmt_play0
  1251 824B 06 A5					asl musicNTSC
  1252 824D 90 05					bcc @+
  1253 824F A9 04 85 A5					mva #4 musicNTSC
  1254 8253 60						rts
  1255
  1256 8254			@
  1257 8254 A0 5D					ldy #$5d
  1258 8256 A9 99 91 B9					mva #$99 (fx_ptr),y
  1259
  1260 825A 20 E5 B1					jsr rmt_play
  1261 							
  1262 825D A0 5D					ldy #$5d
  1263 825F A9 00 91 B9					mva #00 (fx_ptr),y			
  1264 8263 60						rts	
  1265
  1266 8264						org $a000
  1267 A000						icl 'deco.asm'
Source: deco.asm
     1 				//dekompresja obrazka
     2 A000			.local deco
     3 = 009E			flaga=pom0h
     4 = 009D			wsk_y=pom0g
     5 = 0099			wsk1_y=pom0c
     6 = 009A			okno=pom0d
     7 = 009C			okno1=pom0f
     8 = 0097			ostatni_kod=pom0a
     9 A000			mapa		org *+1
    10 = 0098			mapa1=pom0b
    11
    12 A001			tab_kolory	org *+48
    13 A031-A4D9> 50 54 58 5C + mapa_okno_tab	.he 50,54,58,5c,60
    14
    15 A036			init
    16 A036 A9 00 8D A5 A0 A9 + 			mwa #$8000 _ad_src+1			;ÅºrÃ³dÅ‚o
    17 A040 A9 00 85 8E A9 40 + 			mwa #$4000 pom1		;cel
    18 A048 A9 00 85 9E					mva #0 flaga
    19 							
    20 A04C A0 5E					ldy #$5e				;MEMAC_CONTROL, okno zrodlowe
    21 A04E A9 89 91 B9					mva #$89 (fx_ptr),y	;$8000,dostÄ™p cpu,wielkoÅ›Ä‡ 8K
    22 A052 C8						iny						;MEMAC_BANK_SEL
    23 A053 AE 00 A0					ldx mapa
    24 A056 BD 31 A0					lda mapa_okno_tab,x
    25 A059 09 80					ora #$80
    26 A05B 91 B9					sta (fx_ptr),y	
    27 A05D 85 98					sta mapa1
    28 							
    29 A05F A0 2F					ldy #16*3-1
    30 A061 B9 00 80		@			lda $8000,y
    31 A064 99 01 A0					sta tab_kolory,y
    32 A067 88						dey
    33 A068 10 F7					bpl @-
    34 							
    35 A06A A0 5E					ldy #$5e
    36 A06C A9 00 91 B9					mva #0 (fx_ptr),y
    37 A070 C8						iny
    38 A071 91 B9					sta (fx_ptr),y
    39 							
    40 A073 A9 30 85 9D					mva #16*3 wsk_y
    41 A077 A9 00 85 99					mva #0 wsk1_y
    42 A07B A0 5D					ldy #$5d
    43 A07D A9 8C 91 B9					mva #$80+[bufor_vbxe>>14] (fx_ptr),y
    44 A081 85 9A					sta okno			;okno docelowe
    45 							
    46 A083 A9 FF 85 97					mva #255 ostatni_kod
    47 							
    48 A087 A0 5E					ldy #$5e				;MEMAC_CONTROL, okno zrodlowe
    49 A089 A9 89 91 B9					mva #$89 (fx_ptr),y	;$8000,dostÄ™p cpu,wielkoÅ›Ä‡ 8K
    50 A08D C8						iny						;MEMAC_BANK_SEL
    51 A08E A5 98					lda mapa1
    52 A090 91 B9					sta (fx_ptr),y
    53 							
    54 A092 A9 D0 85 9B					mva #208 pom0e			;ile linii
    55 							
    56 A096 A5 BA 8D D4 A0				mva fx_ptr+1 _ad2+2
    57 A09B 8D FD A0					sta _ad0+23
    58 A09E 8D 24 A1					sta _ad1+23
    59 							
    60 A0A1 60						rts
    61
    62 A0A2			get_byte				
    63 A0A2 A4 9D					ldy wsk_y
    64 A0A4			_ad_src			
    65 A0A4 B9 FF FF					lda $ffff,y
    66 							
    67 A0A7 A6 9E					ldx flaga
    68 A0A9 D0 06					bne @+
    69 A0AB 4A 4A 4A 4A					:4 lsr
    70 A0AF E8						inx
    71 A0B0 E8						inx
    72 A0B1 29 0F		@			and #15
    73 A0B3 CA						dex
    74 A0B4 86 9E					stx flaga
    75 A0B6 D0 1D					bne @+
    76 A0B8 C8						iny
    77 A0B9 84 9D					sty wsk_y
    78 A0BB D0 18					bne @+
    79 A0BD EE A6 A0					inc _ad_src+2
    80 A0C0 AE A6 A0					ldx _ad_src+2
    81 A0C3 E0 A0					cpx #$a0
    82 A0C5 90 0E					bcc @+
    83 A0C7 E6 98					inc mapa1
    84 A0C9 E6 98					inc mapa1
    85 A0CB A2 80 8E A6 A0				mvx #$80 _ad_src+2 
    86 							
    87 						
    88 A0D0 A6 98					ldx mapa1 
    89 A0D2			_ad2			
    90 A0D2 8E 5F D7					stx $d75f
    91 A0D5			@			
    92 A0D5 60						rts
    93
    94 							
    95
    96 				.macro DRAW_BYTE			
    97 							sta (pom1),y
    98 							iny
    99 							bne dbe
   100 							dec pom0e
   101 							beq _rts
   102 							inc pom1+1
   103 							bpl dbe
   104 							mva #$40 pom1+1		;ustaw na poczatek okna			
   105 							inc okno
   106 				
   107 							mva okno $d75d
   108 							lda ostatni_kod
   109 				dbe			equ *
   110 				.endm
   111 							
   112
   113 A0D6			copy_screen
   114 A0D6 20 A2 A0					jsr get_byte
   115 A0D9 C9 0F					cmp #$0f
   116 A0DB D0 2A					bne normal
   117 A0DD 20 A2 A0					jsr get_byte
   118 A0E0 AA						tax					;licznik
   119 A0E1 E8						inx
   120 A0E2 A4 99					ldy wsk1_y
   121 A0E4 A5 97					lda ostatni_kod
   122 A0E6			@	
   123 A0E6			_ad0		
   124 A0E6						DRAW_BYTE
Macro: DECO.DRAW_BYTE [Source: deco.asm]
     1 A0E6 91 8E					sta (pom1),y
     2 A0E8 C8						iny
     3 A0E9 D0 15					bne dbe
     4 A0EB C6 9B					dec pom0e
     5 A0ED F0 3D					beq _rts
     6 A0EF E6 8F					inc pom1+1
     7 A0F1 10 0D					bpl dbe
     8 A0F3 A9 40 85 8F					mva #$40 pom1+1		;ustaw na poczatek okna			
     9 A0F7 E6 9A					inc okno
    11 A0F9 A5 9A 8D 5D D7				mva okno $d75d
    12 A0FE A5 97					lda ostatni_kod
    13 = A100			dbe			equ *
Source: deco.asm
   125 A100 CA						dex
   126 A101 10 E3					bpl @-
   127 A103 84 99					sty wsk1_y
   128 A105 30 CF					bmi copy_screen	;jmp
   129 						
   130 A107			normal
   131 A107 09 C0					ora #192
   132 A109 85 97					sta ostatni_kod
   133 A10B A4 99					ldy wsk1_y
   134 A10D			_ad1			
   135 A10D						DRAW_BYTE
Macro: DECO.DRAW_BYTE [Source: deco.asm]
     1 A10D 91 8E					sta (pom1),y
     2 A10F C8						iny
     3 A110 D0 15					bne dbe
     4 A112 C6 9B					dec pom0e
     5 A114 F0 16					beq _rts
     6 A116 E6 8F					inc pom1+1
     7 A118 10 0D					bpl dbe
     8 A11A A9 40 85 8F					mva #$40 pom1+1		;ustaw na poczatek okna			
     9 A11E E6 9A					inc okno
    11 A120 A5 9A 8D 5D D7				mva okno $d75d
    12 A125 A5 97					lda ostatni_kod
    13 = A127			dbe			equ *
Source: deco.asm
   136 A127 84 99					sty wsk1_y
   137 A129 4C D6 A0					jmp copy_screen
   138 A12C			_rts			
   139 A12C 60			@			rts						;koniec 	
   140
   141
   142 A12D			set_colors
   143 A12D A0 44					ldy	#$44
   144 A12F A9 C0 91 B9 C8				mva	#192	(fx_ptr),y+	; CSEL ,nr koloru
   145 A134 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety	
   146
   147 A138 A2 00					ldx #0
   148 A13A A0 46		@			ldy	#$46	; CR
   149 A13C BD 01 A0					lda tab_kolory,x
   150 A13F 91 B9					sta	(fx_ptr),y		;RED
   151 A141 C8						iny
   152 A142 E8						inx
   153 A143 BD 01 A0					lda tab_kolory,x
   154 A146 91 B9					sta	(fx_ptr),y		;GREEN
   155 A148 C8						iny
   156 A149 E8						inx
   157 A14A BD 01 A0					lda tab_kolory,x
   158 A14D 91 B9					sta	(fx_ptr),y		;BLUE
   159 A14F E8						inx
   160 A150 E0 30					cpx #16*3
   161 A152 90 E6					bcc @-
   162 							
   163 A154 60						rts
   164 							
   165 A155			draw_screen
   166 A155 A0 53				ldy	#$53	; BLITTER_BUSY
   167 A157 B1 B9		@		lda (fx_ptr),y
   168 A159 D0 FC				bne @-
   169
   170 A15B A0 50				ldy	#$50	; BL_ADR0
   171 A15D A9 80 91 B9 C8			mva	#bcb2_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   172 A162 A9 09 91 B9 C8			mva	#[bcb2_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   173 A167 A9 07 91 B9 C8			mva	#bcb2_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   174 A16C A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   175 						
   176 A170 60					rts	
   177 						
   178 A171			start
   179 A171 20 36 A0					jsr init
   180 A174 20 D6 A0					jsr copy_screen
   181 A177 A0 5E					ldy #$5e				;MEMAC_CONTROL, okno zrodlowe
   182 A179 A9 00					lda #0
   183 A17B 91 B9					sta (fx_ptr),y
   184 A17D C8						iny
   185 A17E 91 B9					sta (fx_ptr),y
   186 A180 A0 5D					ldy #$5d
   187 A182 A9 00 91 B9					mva #0 (fx_ptr),y
   188 A186 60						rts
   189 							
   190 A187			blit4	
   191 A187 A0 53				ldy	#$53	; BLITTER_BUSY
   192 A189 B1 B9		@		lda (fx_ptr),y
   193 A18B D0 FC				bne @-
   194
   195 A18D A0 50				ldy	#$50	; BL_ADR0
   196 A18F A9 80 91 B9 C8			mva	#bcb4_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   197 A194 A9 0A 91 B9 C8			mva	#[bcb4_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   198 A199 A9 07 91 B9 C8			mva	#bcb4_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   199 A19E A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   200 A1A2 60					rts
   201
   202 A1A3			blit5	
   203 A1A3 A0 53				ldy	#$53	; BLITTER_BUSY
   204 A1A5 B1 B9		@		lda (fx_ptr),y
   205 A1A7 D0 FC				bne @-
   206
   207 A1A9 A0 50				ldy	#$50	; BL_ADR0
   208 A1AB A9 00 91 B9 C8			mva	#bcb5_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   209 A1B0 A9 0B 91 B9 C8			mva	#[bcb5_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   210 A1B5 A9 07 91 B9 C8			mva	#bcb5_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   211 A1BA A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   212 A1BE 60					rts
   213 						
   214 A1BF			rysuj_rampe1
   215 A1BF AE 11 D8				ldx ile_ramp
   216 A1C2 D0 01				bne *+3
   217 A1C4 60					rts
   218 						
   219 A1C5 A0 5D				ldy	#$5d	; MEMB		
   220 A1C7 A9 9C 91 B9				mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank
   221 						
   222 						
   223 						
   224 A1CB BD 38 32		rp0		lda rampa_x1-1,x
   225 A1CE 8D 86 4A				sta $4006+[bcb4_vbxe&$3fff]
   226 A1D1 BD 58 32				lda rampa_y1-1,x
   227 A1D4 8D 87 4A				sta $4007+[bcb4_vbxe&$3fff]
   228 						
   229 A1D7 A9 73 8D 81 4A			mva #115 $4001+[bcb4_vbxe&$3fff]			;starszy bajt ksztaltu
   230 						
   231 A1DC BD 48 32				lda rampa_dx1-1,x
   232 A1DF F0 1C				beq rysuj_pion
   233 				//rysujemy w  poziomie	
   234 A1E1 85 96				sta pom0				;dlugosc
   235 						
   236 A1E3 A9 00 8D 80 4A			mva #0 $4000+[bcb4_vbxe&$3fff]	;ksztalt
   237 						
   238 A1E8 20 87 A1		@		jsr blit4
   239 						
   240 A1EB 18					clc
   241 A1EC AD 86 4A				lda $4006+[bcb4_vbxe&$3fff]
   242 A1EF 69 08				adc #8
   243 A1F1 8D 86 4A				sta $4006+[bcb4_vbxe&$3fff]
   244 A1F4 C6 96				dec pom0
   245 A1F6 D0 F0				bne @-
   246 A1F8 CA					dex
   247 A1F9 D0 D0				bne rp0
   248 						
   249 A1FB F0 1D				beq rp_end
   250 						
   251 A1FD			rysuj_pion
   252 A1FD BD 68 32				lda rampa_dy1-1,x
   253 A200 85 96				sta pom0
   254 A202 A9 40 8D 80 4A			mva #64 $4000+[bcb4_vbxe&$3fff]	;ksztalt
   255 						
   256 A207 20 87 A1		@		jsr blit4
   257 						
   258 A20A 18					clc
   259 A20B AD 87 4A				lda $4007+[bcb4_vbxe&$3fff]
   260 A20E 69 08				adc #8
   261 A210 8D 87 4A				sta $4007+[bcb4_vbxe&$3fff]
   262 A213 C6 96				dec pom0
   263 A215 D0 F0				bne @-
   264 A217 CA					dex
   265 A218 D0 B1				bne rp0
   266 						
   267 A21A			rp_end	
   268 A21A AE 00 D8				ldx level
   269 A21D BD B8 32				lda POZ.rampa_tabx,x
   270 A220 0A					asl
   271 A221 AA					tax
   272 A222 BD AC A2				lda level_rampa_tab1,x
   273 A225 85 8E				sta pom1
   274 A227 BD AD A2				lda level_rampa_tab1+1,x
   275 A22A F0 35				beq @+1
   276 A22C 85 8F				sta pom1+1
   277 						
   278 A22E A0 00				ldy #0
   279 A230 B1 8E				lda (pom1),y
   280 A232 85 96				sta pom0
   281 						
   282 A234 C8			@		iny
   283 A235 B1 8E				lda (pom1),y
   284 A237 AA					tax
   285 A238 BD 68 A2				lda tab_rampa_znaki0,x
   286 A23B 8D 80 4A				sta $4000+[bcb4_vbxe&$3fff]			;ksztalt
   287 A23E BD 6C A2				lda tab_rampa_znaki1,x
   288 A241 8D 81 4A				sta $4001+[bcb4_vbxe&$3fff]	
   289 						
   290 A244 C8					iny
   291 A245 B1 8E				lda (pom1),y
   292 A247 0A 0A 0A				:3 asl
   293 A24A 8D 86 4A				sta $4006+[bcb4_vbxe&$3fff]
   294 A24D C8					iny
   295 A24E B1 8E				lda (pom1),y
   296 A250 0A 0A 0A				:3 asl
   297 A253 8D 87 4A				sta $4007+[bcb4_vbxe&$3fff]
   298 A256 84 97				sty pom0a
   299 A258 20 87 A1				jsr blit4
   300 A25B A4 97				ldy pom0a
   301 A25D C6 96				dec pom0
   302 A25F D0 D3				bne @-
   303 						
   304 					
   305 A261 A0 5D		@		ldy	#$5d	; MEMB		
   306 A263 A9 00 91 B9				mva	#$00	(fx_ptr),y	; mbce  $80=dostep 6502+bank		
   307 						
   308 A267 60					rts	
   309
   310 A268			tab_rampa_znaki0
   311 A268 80 C0 00 40				dta 128,192,0,64
   312 A26C			tab_rampa_znaki1
   313 A26C 73 73 74 74				dta 115,115,116,116
   314 						
   315 A270			poprawF
   316 A270 02 00 17 0B 03 17 + 		dta b(2,0,23,11,3,23,18)
   317 A277			poprawH
   318 A277 04 03 09 08 01 09 + 		dta b(4,3,9,8,1,9,17,2,22,8,0,22,17)
   319 A284			poprawI
   320 A284 02 03 0E 11 02 0B + 		dta b(2,3,14,17,2,11,23)
   321 A28B			poprawJ
   322 A28B 04 00 05 05 02 05 + 		dta b(4,0,5,5,2,5,20,1,26,5,3,26,20)
   323 A298			poprawL
   324 A298 02 00 05 05 01 1A + 		dta b(2,0,5,5,1,26,5)
   325 A29F			poprawN
   326 A29F 04 01 12 03 00 02 + 		dta b(4,1,18,3,0,2,11,3,29,14,2,13,22)
   327 					
   328 A2AC			level_rampa_tab1
   329 A2AC 00 00 00 00 00 00 + 		dta a(0,0,0,0,0,poprawF,0,poprawH,poprawI,poprawJ,0,poprawL,0,poprawN)
   330 A2C8 00 00 00 00				dta a(0,0)
   331 					
   332 A2CC			start1
   333 A2CC A0 44				ldy	#$44
   334 A2CE A9 28 91 B9 C8			mva	#$28	(fx_ptr),y+	; CSEL ,nr koloru
   335 A2D3 A9 01 91 B9				mva	#1	(fx_ptr),y	; PSEL	,nr palety
   336 						
   337 A2D7 A0 46				ldy	#$46
   338 A2D9 A9 00				lda #0
   339 A2DB 91 B9				sta	(fx_ptr),y		;RED
   340 A2DD C8					iny
   341 A2DE A9 E0				lda #$e0
   342 A2E0 91 B9				sta	(fx_ptr),y		;GREEN
   343 A2E2 C8					iny
   344 A2E3 A9 00				lda #0
   345 A2E5 91 B9				sta	(fx_ptr),y		;BLUE, nr_koloru++
   346
   347 A2E7 A0 46				ldy	#$46
   348 A2E9 A9 00				lda #0
   349 A2EB 91 B9				sta	(fx_ptr),y		;RED
   350 A2ED C8					iny
   351 A2EE 91 B9				sta	(fx_ptr),y		;GREEN
   352 A2F0 C8					iny
   353 A2F1 91 B9				sta	(fx_ptr),y		;BLUE, nr_koloru++
   354
   355 A2F3 A9 00 85 97				mva #0 pom0a			;x0
   356 A2F7 A9 C0 85 98				mva #256-64 pom0b		;x1
   357
   358 A2FB A0 5D				ldy	#$5d	; MEMB		
   359 A2FD A9 9C 91 B9				mva	#$80+[bcb_vbxe>>14]	(fx_ptr),y	; mbce  $80=dostep 6502+bank	
   360 A301 A2 31				ldx #48+1
   361
   362 A303 A9 01 8D 02 4C	@		mva #1 $4002+[bcb7_vbxe&$3fff]
   363 A308 A9 04 8D 08 4C			mva #4 $4008+[bcb7_vbxe&$3fff]
   364 A30D 20 A3 A3				jsr blit7
   365 						
   366
   367 A310 A9 6B 8D 81 4B			mva #107 $4001+[bcb6_vbxe&$3fff]		;ksztalt
   368 A315 A5 97 8D 86 4B			mva pom0a $4006+[bcb6_vbxe&$3fff]		;pozycja X
   369 A31A 20 87 A3				jsr blit6
   370
   371 A31D A9 6F 8D 81 4B			mva #111 $4001+[bcb6_vbxe&$3fff]		;ksztalt
   372 A322 A5 98 8D 86 4B			mva pom0b $4006+[bcb6_vbxe&$3fff]		;pozycja X
   373 A327 20 87 A3				jsr blit6
   374
   375 A32A 20 00 80				jsr wait_vbl
   376
   377 A32D E6 97 E6 97				:2 inc pom0a
   378 A331 C6 98 C6 98				:2 dec pom0b
   379 A335 CA					dex
   380 A336 F0 10				beq @+
   381 								
   382 A338 A9 04 8D 02 4C			mva #4 $4002+[bcb7_vbxe&$3fff]
   383 A33D A9 01 8D 08 4C			mva #1 $4008+[bcb7_vbxe&$3fff]
   384 A342 20 A3 A3				jsr blit7
   385 						
   386 A345 4C 03 A3				jmp @-
   387 						
   388 A348 A0 44		@		ldy	#$44
   389 A34A A9 28 91 B9 C8			mva	#$28	(fx_ptr),y+	; CSEL ,nr koloru
   390 A34F A9 01 91 B9				mva	#1	(fx_ptr),y	; PSEL	,nr palety
   391 						
   392 A353 A0 46				ldy	#$46
   393 A355 A9 00				lda #0
   394 A357 91 B9				sta	(fx_ptr),y		;RED
   395 A359 C8					iny
   396 A35A 91 B9				sta	(fx_ptr),y		;GREEN
   397 A35C C8					iny
   398 A35D 91 B9				sta	(fx_ptr),y		;BLUE, nr_koloru++
   399
   400 A35F A0 46				ldy	#$46
   401 A361 A9 FF				lda #$ff
   402 A363 91 B9				sta	(fx_ptr),y		;RED
   403 A365 C8					iny
   404 A366 91 B9				sta	(fx_ptr),y		;GREEN
   405 A368 C8					iny
   406 A369 91 B9				sta	(fx_ptr),y		;BLUE, nr_koloru++	
   407 						
   408 						
   409 A36B A2 23				ldx #35
   410 A36D 20 00 80		@		jsr wait_vbl
   411 A370 CA					dex
   412 A371 D0 FA				bne @-
   413 						
   414 A373 A9 04 8D 02 4C			mva #4 $4002+[bcb7_vbxe&$3fff]
   415 A378 A9 01 8D 08 4C			mva #1 $4008+[bcb7_vbxe&$3fff]
   416 A37D 20 A3 A3				jsr blit7
   417 						
   418 						
   419 						
   420 						
   421 A380 A0 5D				ldy	#$5d	; MEMB		
   422 A382 A9 00 91 B9				mva	#0	(fx_ptr),y	; mbce  $80=dostep 6502+bank	
   423 A386 60					rts
   424 						
   425
   426 A387			blit6	
   427 A387 A0 53				ldy	#$53	; BLITTER_BUSY
   428 A389 B1 B9		@		lda (fx_ptr),y
   429 A38B D0 FC				bne @-
   430
   431 A38D A0 50				ldy	#$50	; BL_ADR0
   432 A38F A9 80 91 B9 C8			mva	#bcb6_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   433 A394 A9 0B 91 B9 C8			mva	#[bcb6_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   434 A399 A9 07 91 B9 C8			mva	#bcb6_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   435 A39E A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   436 A3A2 60					rts
   437 						
   438 A3A3			blit7	
   439 A3A3 A0 53				ldy	#$53	; BLITTER_BUSY
   440 A3A5 B1 B9		@		lda (fx_ptr),y
   441 A3A7 D0 FC				bne @-
   442
   443 A3A9 A0 50				ldy	#$50	; BL_ADR0
   444 A3AB A9 00 91 B9 C8			mva	#bcb7_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   445 A3B0 A9 0C 91 B9 C8			mva	#[bcb7_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   446 A3B5 A9 07 91 B9 C8			mva	#bcb7_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   447 A3BA A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   448 A3BE 60					rts	
   449
   450 A3BF			over
   451 A3BF A0 5D				ldy	#$5d	; MEMB		
   452 A3C1 A9 9C 91 B9				mva	#$80+[bcb8_vbxe>>14]	(fx_ptr),y
   453
   454 						
   455 A3C5 AD 00 2B 8D 80 4C			mva sprite_x $4000+[bcb8_vbxe&$3fff]		;pozX
   456 A3CB 8D 06 4D				sta $4006+[bcb9_vbxe&$3fff]
   457 A3CE 8D 86 4D				sta $4006+[bcb10_vbxe&$3fff]
   458 A3D1 AD 10 2B 8D 81 4C			mva sprite_y $4001+[bcb8_vbxe&$3fff]		;pozY
   459 A3D7 8D 07 4D				sta $4007+[bcb9_vbxe&$3fff]
   460 A3DA 8D 87 4D				sta $4007+[bcb10_vbxe&$3fff]
   461
   462 A3DD 20 81 A4				jsr blit8				;zapamietaj tlo
   463 A3E0 20 B9 A4				jsr blit10				;narysuj napis
   464 						
   465 A3E3 20 00 80				jsr wait_vbl
   466 						
   467 						;jsr blit9				;zmaz
   468 						;ldy	#$5d	; MEMB		
   469 						;mva	#0	(fx_ptr),y
   470
   471 A3E6 20 3A A4				jsr change_colors
   472 						
   473 						;jsr rmt_play0
   474 						
   475 A3E9 AD 00 2B				lda sprite_x
   476 A3EC C9 70				cmp #112
   477 A3EE F0 0E				beq @+
   478 A3F0 90 06				bcc _plus
   479 A3F2 CE 00 2B CE 00 2B			:2 dec sprite_x
   480 A3F8 EE 00 2B		_plus	inc sprite_x
   481 A3FB 4C 10 A4				jmp go2
   482 						
   483 A3FE AD 10 2B		@		lda sprite_y
   484 A401 C9 5C				cmp #92
   485 A403 F0 1A				beq go3
   486 A405 90 06				bcc _plusy
   487 A407 CE 10 2B				dec sprite_y
   488 A40A CE 10 2B				dec sprite_y
   489 A40D EE 10 2B		_plusy	inc sprite_y		
   490 						
   491 						
   492 A410 20 9D A4		go2		jsr blit9				;zmaz
   493 A413 A0 5D				ldy	#$5d	; MEMB		
   494 A415 A9 00 91 B9				mva	#0	(fx_ptr),y
   495
   496 A419 20 4B 82				jsr rmt_play0
   497 A41C 4C BF A3				jmp over		
   498 						
   499 A41F A9 00 85 14		go3		mva #0 zegar
   500 A423 20 00 80		@		jsr wait_vbl
   501 A426 20 4B 82				jsr rmt_play0
   502 A429 20 3A A4				jsr change_colors
   503 A42C A5 14				lda zegar
   504 A42E C9 FA				cmp #250
   505 A430 90 F1				bcc @-
   506 						
   507 A432 A0 5D				ldy	#$5d	; MEMB		
   508 A434 A9 00 91 B9				mva	#0	(fx_ptr),y
   509
   510 A438 60					rts
   511 						
   512 A439 00			licz_kolor	dta b(0)		
   513 						
   514 A43A			change_colors
   515 A43A A5 14					lda zegar
   516 A43C 29 03					and #3
   517 A43E D0 28					bne @+
   518
   519 A440 A0 44					ldy	#$44
   520 A442 A9 1F 91 B9 C8				mva	#$1f	(fx_ptr),y+	; CSEL ,nr koloru
   521 A447 A9 01 91 B9					mva	#1	(fx_ptr),y	; PSEL	,nr palety
   522 							
   523 A44B EE 39 A4					inc licz_kolor
   524 A44E AD 39 A4					lda licz_kolor
   525 A451 4A						lsr
   526 A452 29 07					and #7
   527 A454 AA						tax
   528 							
   529 A455 A0 46					ldy	#$46	; CR
   530 A457 BD 69 A4					lda tab_rnd_kolor0,x
   531 A45A 91 B9					sta	(fx_ptr),y		;RED
   532 A45C C8						iny
   533 A45D BD 71 A4					lda tab_rnd_kolor1,x
   534 A460 91 B9					sta	(fx_ptr),y		;GREEN
   535 A462 C8						iny
   536 A463 BD 79 A4					lda tab_rnd_kolor2,x
   537 A466 91 B9					sta	(fx_ptr),y		;BLUE, nr_koloru++
   538 A468 60			@			rts	
   539
   540 A469 AA AA 00 00 00 AA + tab_rnd_kolor0	.he aa,aa,00,00,00,aa,aa,22
   541 A471 00 AA AA 00 AA 00 + tab_rnd_kolor1	.he 00,aa,aa,00,aa,00,aa,aa
   542 A479 00 00 00 AA AA AA + tab_rnd_kolor2	.he 00,00,00,aa,aa,aa,aa,22
   543 						
   544 						
   545 A481			blit8	
   546 A481 A0 53				ldy	#$53	; BLITTER_BUSY
   547 A483 B1 B9		@		lda (fx_ptr),y
   548 A485 D0 FC				bne @-
   549
   550 A487 A0 50				ldy	#$50	; BL_ADR0
   551 A489 A9 80 91 B9 C8			mva	#bcb8_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   552 A48E A9 0C 91 B9 C8			mva	#[bcb8_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   553 A493 A9 07 91 B9 C8			mva	#bcb8_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   554 A498 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   555 A49C 60					rts			
   556
   557 A49D			blit9	
   558 A49D A0 53				ldy	#$53	; BLITTER_BUSY
   559 A49F B1 B9		@		lda (fx_ptr),y
   560 A4A1 D0 FC				bne @-
   561
   562 A4A3 A0 50				ldy	#$50	; BL_ADR0
   563 A4A5 A9 00 91 B9 C8			mva	#bcb9_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   564 A4AA A9 0D 91 B9 C8			mva	#[bcb9_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   565 A4AF A9 07 91 B9 C8			mva	#bcb9_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   566 A4B4 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   567 A4B8 60					rts	
   568 						
   569 A4B9			blit10	
   570 A4B9 A0 53				ldy	#$53	; BLITTER_BUSY
   571 A4BB B1 B9		@		lda (fx_ptr),y
   572 A4BD D0 FC				bne @-
   573
   574 A4BF A0 50				ldy	#$50	; BL_ADR0
   575 A4C1 A9 80 91 B9 C8			mva	#bcb10_vbxe&$ff	(fx_ptr),y+	; BL_ADR0			;najmlodszy bajt adresu
   576 A4C6 A9 0D 91 B9 C8			mva	#[bcb10_vbxe>>8]&$ff	(fx_ptr),y+	; BL_ADR1		;nastepne bajty adresu
   577 A4CB A9 07 91 B9 C8			mva	#bcb10_vbxe>>16	(fx_ptr),y+	; BL_ADR2
   578 A4D0 A9 01 91 B9				mva	#1	(fx_ptr),y	; BLITTER_START				;wykonaj
   579 A4D4 60					rts			
   580
   581 				.endl
  1268 							
  1269 							
  1270 							
  1271 							
  1272 A4D5 0F 25 42 4A 5B	tab_melody	.he 0f,25,42,4a,5b
  1273 = 0005			max_melody=*-tab_melody		
  1274 							
  1275 							
  1276 A4DA						icl 'rmtplayr.asm'
Source: rmtplayr.asm
     1 				;*
     2 				;* Raster Music Tracker, RMT Atari routine version 1.20090108
     3 				;* (c) Radek Sterba, Raster/C.P.U., 2002 - 2009
     4 				;* http://raster.atari.org
     5 				;*
     6 				;* Warnings:
     7 				;*
     8 				;* 1. RMT player routine needs 19 itself reserved bytes in zero page (no accessed
     9 				;*    from any other routines) as well as cca 1KB of memory before the "PLAYER"
    10 				;*    address for frequency tables and functionary variables. It's:
    11 				;*	  a) from PLAYER-$03c0 to PLAYER for stereo RMTplayer
    12 				;*    b) from PLAYER-$0320 to PLAYER for mono RMTplayer
    13 				;*
    14 				;* 2. RMT player routine MUST (!!!) be compiled from the begin of the memory page.
    15 				;*    i.e. "PLAYER" address can be $..00 only!
    16 				;*
    17 				;* 3. Because of RMTplayer provides a lot of effects, it spent a lot of CPU time.
    18 				;*
    19 				;* STEREOMODE	equ 0..3			;0 => compile RMTplayer for 4 tracks mono
    20 				;*									;1 => compile RMTplayer for 8 tracks stereo
    21 				;*									;2 => compile RMTplayer for 4 tracks stereo L1 R2 R3 L4
    22 				;*									;3 => compile RMTplayer for 4 tracks stereo L1 L2 R3 R4
    23 				;*
    24
    25 = 0000			STEREOMODE=0
    26 					IFT STEREOMODE==1
    27 				TRACKS		equ 8
    28 					ELS
    29 = 0004			TRACKS		equ 4
    30 					EIF
    31 				;*
    32 = B000			PLAYER		equ $b000
    33 				;*
    34 				;* RMT FEATures definitions file
    35 				;* For optimizations of RMT player routine to concrete RMT modul only!
    36 A4DA				icl "rmt_feat1.asm"
Source: rmt_feat1.asm
     1 				;* --------BEGIN--------
     2 				;* E:\backup\atari\rmt128\songs\miker\aaa.rmt
     3 = 0000			FEAT_SFX		equ 0
     4 = 0001			FEAT_GLOBALVOLUMEFADE	equ 1		;RMTGLOBALVOLUMEFADE variable
     5 = 0000			FEAT_NOSTARTINGSONGLINE	equ 0
     6 = 0001			FEAT_INSTRSPEED		equ 1
     7 = 0000			FEAT_CONSTANTSPEED		equ 0		;(44 times)
     8 = 0001			FEAT_COMMAND1		equ 1		;(48 times)
     9 = 0000			FEAT_COMMAND2		equ 0		;(0 times)
    10 = 0000			FEAT_COMMAND3		equ 0		;(0 times)
    11 = 0000			FEAT_COMMAND4		equ 0		;(0 times)
    12 = 0001			FEAT_COMMAND5		equ 1		;(5 times)
    13 = 0001			FEAT_COMMAND6		equ 1		;(10 times)
    14 = 0000			FEAT_COMMAND7SETNOTE		equ 0		;(0 times)
    15 = 0000			FEAT_COMMAND7VOLUMEONLY		equ 0		;(0 times)
    16 = 0000			FEAT_PORTAMENTO		equ 0		;(0 times)
    17 = 0001			FEAT_FILTER		equ 1		;(28 times)
    18 = 0001			FEAT_FILTERG0L		equ 1		;(28 times)
    19 = 0000			FEAT_FILTERG1L		equ 0		;(0 times)
    20 = 0000			FEAT_FILTERG0R		equ 0		;(0 times)
    21 = 0000			FEAT_FILTERG1R		equ 0		;(0 times)
    22 = 0000			FEAT_BASS16		equ 0		;(0 times)
    23 = 0000			FEAT_BASS16G1L		equ 0		;(0 times)
    24 = 0000			FEAT_BASS16G3L		equ 0		;(0 times)
    25 = 0000			FEAT_BASS16G1R		equ 0		;(0 times)
    26 = 0000			FEAT_BASS16G3R		equ 0		;(0 times)
    27 = 0000			FEAT_VOLUMEONLYG0L		equ 0		;(0 times)
    28 = 0000			FEAT_VOLUMEONLYG2L		equ 0		;(0 times)
    29 = 0000			FEAT_VOLUMEONLYG3L		equ 0		;(0 times)
    30 = 0000			FEAT_VOLUMEONLYG0R		equ 0		;(0 times)
    31 = 0000			FEAT_VOLUMEONLYG2R		equ 0		;(0 times)
    32 = 0000			FEAT_VOLUMEONLYG3R		equ 0		;(0 times)
    33 = 0001			FEAT_TABLETYPE		equ 1		;(1 times)
    34 = 0000			FEAT_TABLEMODE		equ 0		;(0 times)
    35 = 0001			FEAT_TABLEGO		equ 1		;(3 times)
    36 = 0001			FEAT_AUDCTLMANUALSET		equ 1		;(1 times)
    37 = 0001			FEAT_VOLUMEMIN		equ 1		;(1 times)
    38 = 0001			FEAT_EFFECTVIBRATO		equ 1		;(14 times)
    39 = 0001			FEAT_EFFECTFSHIFT		equ 1		;(1 times)
    40 				;* --------END--------
    37 				;*
    38 				;* RMT ZeroPage addresses
    39 A4DA				org $20
    40 0020			p_tis
    41 0020			p_instrstable	org *+2
    42 0022			p_trackslbstable	org *+2
    43 0024			p_trackshbstable	org *+2
    44 0026			p_song			org *+2
    45 0028			ns				org *+2
    46 002A			nr				org *+2
    47 002C			nt				org *+2
    48 002E			reg1			org *+1
    49 002F			reg2			org *+1
    50 0030			reg3			org *+1
    51 0031			tmp				org *+1
    52 					IFT FEAT_COMMAND2
    53 				frqaddcmd2		org *+1
    54 					EIF
    55 					IFT TRACKS>4
    56 					org PLAYER-$400+$40
    57 					ELS
    58 0032				org PLAYER-$400+$e0
    59 					EIF
    60 ACE0			track_variables
    61 ACE0			trackn_db	org *+TRACKS
    62 ACE4			trackn_hb	org *+TRACKS
    63 ACE8			trackn_idx	org *+TRACKS
    64 ACEC			trackn_pause	org *+TRACKS
    65 ACF0			trackn_note	org *+TRACKS
    66 ACF4			trackn_volume	org *+TRACKS
    67 ACF8			trackn_distor 	org *+TRACKS
    68 ACFC			trackn_shiftfrq	org *+TRACKS
    69 					IFT FEAT_PORTAMENTO
    70 				trackn_portafrqc org *+TRACKS
    71 				trackn_portafrqa org *+TRACKS
    72 				trackn_portaspeed org *+TRACKS
    73 				trackn_portaspeeda org *+TRACKS
    74 				trackn_portadepth org *+TRACKS
    75 					EIF
    76 AD00			trackn_instrx2	org *+TRACKS
    77 AD04			trackn_instrdb	org *+TRACKS
    78 AD08			trackn_instrhb	org *+TRACKS
    79 AD0C			trackn_instridx	org *+TRACKS
    80 AD10			trackn_instrlen	org *+TRACKS
    81 AD14			trackn_instrlop	org *+TRACKS
    82 AD18			trackn_instrreachend	org *+TRACKS
    83 AD1C			trackn_volumeslidedepth org *+TRACKS
    84 AD20			trackn_volumeslidevalue org *+TRACKS
    85 					IFT FEAT_VOLUMEMIN
    86 AD24			trackn_volumemin		org *+TRACKS
    87 					EIF
    88 = 0001			FEAT_EFFECTS equ FEAT_EFFECTVIBRATO||FEAT_EFFECTFSHIFT
    89 					IFT FEAT_EFFECTS
    90 AD28			trackn_effdelay			org *+TRACKS
    91 					EIF
    92 					IFT FEAT_EFFECTVIBRATO
    93 AD2C			trackn_effvibratoa		org *+TRACKS
    94 					EIF
    95 					IFT FEAT_EFFECTFSHIFT
    96 AD30			trackn_effshift		org *+TRACKS
    97 					EIF
    98 AD34			trackn_tabletypespeed org *+TRACKS
    99 					IFT FEAT_TABLEMODE
   100 				trackn_tablemode	org *+TRACKS
   101 					EIF
   102 AD38			trackn_tablenote	org *+TRACKS
   103 AD3C			trackn_tablea		org *+TRACKS
   104 AD40			trackn_tableend		org *+TRACKS
   105 					IFT FEAT_TABLEGO
   106 AD44			trackn_tablelop		org *+TRACKS
   107 					EIF
   108 AD48			trackn_tablespeeda	org *+TRACKS
   109 					IFT FEAT_FILTER||FEAT_BASS16
   110 AD4C			trackn_command		org *+TRACKS
   111 					EIF
   112 					IFT FEAT_BASS16
   113 				trackn_outnote		org *+TRACKS
   114 					EIF
   115 					IFT FEAT_FILTER
   116 AD50			trackn_filter		org *+TRACKS
   117 					EIF
   118 AD54			trackn_audf	org *+TRACKS
   119 AD58			trackn_audc	org *+TRACKS
   120 					IFT FEAT_AUDCTLMANUALSET
   121 AD5C			trackn_audctl	org *+TRACKS
   122 					EIF
   123 AD60			v_aspeed		org *+1
   124 AD61			track_endvariables
   125 AD61					org PLAYER-$100-$140-$40+2
   126 = 000C			INSTRPAR	equ 12
   127 AD82			tabbeganddistor
   128 AD82-ADBF> 80 00		 dta frqtabpure-frqtab,$00
   129 AD84 80 20		 dta frqtabpure-frqtab,$20
   130 AD86 80 40		 dta frqtabpure-frqtab,$40
   131 AD88 00 C0		 dta frqtabbass1-frqtab,$c0
   132 AD8A 80 80		 dta frqtabpure-frqtab,$80
   133 AD8C 80 A0		 dta frqtabpure-frqtab,$a0
   134 AD8E 00 C0		 dta frqtabbass1-frqtab,$c0
   135 AD90 40 C0		 dta frqtabbass2-frqtab,$c0
   136 						IFT FEAT_EFFECTVIBRATO
   137 AD92 00 01 05 0B		vibtabbeg dta 0,vib1-vib0,vib2-vib0,vib3-vib0
   138 AD96 00			vib0	dta 0
   139 AD97 01 FF FF 01		vib1	dta 1,-1,-1,1
   140 AD9B 01 00 FF FF 00 01	vib2	dta 1,0,-1,-1,0,1
   141 ADA1 01 01 00 FF FF FF + vib3	dta 1,1,0,-1,-1,-1,-1,0,1,1
   142 ADAB			vibtabnext
   143 ADAB 00					dta vib0-vib0+0
   144 ADAC 02 03 04 01				dta vib1-vib0+1,vib1-vib0+2,vib1-vib0+3,vib1-vib0+0
   145 ADB0 06 07 08 09 0A 05			dta vib2-vib0+1,vib2-vib0+2,vib2-vib0+3,vib2-vib0+4,vib2-vib0+5,vib2-vib0+0
   146 ADB6 0C 0D 0E 0F 10 11 + 		dta vib3-vib0+1,vib3-vib0+2,vib3-vib0+3,vib3-vib0+4,vib3-vib0+5,vib3-vib0+6,vib3-vib0+7,vib3-vib0+8,vib3-vib0+9,vib3-vib0+0
   147 						EIF
   148 ADC0					org PLAYER-$100-$140
   149 					IFT FEAT_BASS16
   150 				frqtabbasslo
   151 					dta $F2,$33,$96,$E2,$38,$8C,$00,$6A,$E8,$6A,$EF,$80,$08,$AE,$46,$E6
   152 					dta $95,$41,$F6,$B0,$6E,$30,$F6,$BB,$84,$52,$22,$F4,$C8,$A0,$7A,$55
   153 					dta $34,$14,$F5,$D8,$BD,$A4,$8D,$77,$60,$4E,$38,$27,$15,$06,$F7,$E8
   154 					dta $DB,$CF,$C3,$B8,$AC,$A2,$9A,$90,$88,$7F,$78,$70,$6A,$64,$5E,$00
   155 					EIF
   156 ADC0					org PLAYER-$100-$100
   157 AE00			frqtab
   158 					ERT [<frqtab]!=0	;* frqtab must begin at the memory page bound! (i.e. $..00 address)
   159 AE00			frqtabbass1
   160 AE00-AEBF> BF B6 AA A1 + 	dta $BF,$B6,$AA,$A1,$98,$8F,$89,$80,$F2,$E6,$DA,$CE,$BF,$B6,$AA,$A1
   161 AE10 98 8F 89 80 7A 71 + 	dta $98,$8F,$89,$80,$7A,$71,$6B,$65,$5F,$5C,$56,$50,$4D,$47,$44,$3E
   162 AE20 3C 38 35 32 2F 2D + 	dta $3C,$38,$35,$32,$2F,$2D,$2A,$28,$25,$23,$21,$1F,$1D,$1C,$1A,$18
   163 AE30 17 16 14 13 12 11 + 	dta $17,$16,$14,$13,$12,$11,$10,$0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$07
   164 AE40			frqtabbass2
   165 AE40 FF F1 E4 D8 CA C0 + 	dta $FF,$F1,$E4,$D8,$CA,$C0,$B5,$AB,$A2,$99,$8E,$87,$7F,$79,$73,$70
   166 AE50 66 61 5A 55 52 4B + 	dta $66,$61,$5A,$55,$52,$4B,$48,$43,$3F,$3C,$39,$37,$33,$30,$2D,$2A
   167 AE60 28 25 24 21 1F 1E + 	dta $28,$25,$24,$21,$1F,$1E,$1C,$1B,$19,$17,$16,$15,$13,$12,$11,$10
   168 AE70 0F 0E 0D 0C 0B 0A + 	dta $0F,$0E,$0D,$0C,$0B,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00
   169 AE80			frqtabpure
   170 AE80 F3 E6 D9 CC C1 B5 + 	dta $F3,$E6,$D9,$CC,$C1,$B5,$AD,$A2,$99,$90,$88,$80,$79,$72,$6C,$66
   171 AE90 60 5B 55 51 4C 48 + 	dta $60,$5B,$55,$51,$4C,$48,$44,$40,$3C,$39,$35,$32,$2F,$2D,$2A,$28
   172 AEA0 25 23 21 1F 1D 1C + 	dta $25,$23,$21,$1F,$1D,$1C,$1A,$18,$17,$16,$14,$13,$12,$11,$10,$0F
   173 AEB0 0E 0D 0C 0B 0A 09 + 	dta $0E,$0D,$0C,$0B,$0A,$09,$08,$07,$06,$05,$04,$03,$02,$01,$00,$00
   174 					IFT FEAT_BASS16
   175 				frqtabbasshi
   176 					dta $0D,$0D,$0C,$0B,$0B,$0A,$0A,$09,$08,$08,$07,$07,$07,$06,$06,$05
   177 					dta $05,$05,$04,$04,$04,$04,$03,$03,$03,$03,$03,$02,$02,$02,$02,$02
   178 					dta $02,$02,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$00,$00
   179 					dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
   180 					EIF
   181 AEC0					org PLAYER-$0100
   182 AF00			volumetab
   183 AF00-B3D8> 00 00 00 00 + 	dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
   184 AF10 00 00 00 00 00 00 + 	dta $00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01
   185 AF20 00 00 00 00 01 01 + 	dta $00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$01,$02,$02,$02,$02
   186 AF30 00 00 00 01 01 01 + 	dta $00,$00,$00,$01,$01,$01,$01,$01,$02,$02,$02,$02,$02,$03,$03,$03
   187 AF40 00 00 01 01 01 01 + 	dta $00,$00,$01,$01,$01,$01,$02,$02,$02,$02,$03,$03,$03,$03,$04,$04
   188 AF50 00 00 01 01 01 02 + 	dta $00,$00,$01,$01,$01,$02,$02,$02,$03,$03,$03,$04,$04,$04,$05,$05
   189 AF60 00 00 01 01 02 02 + 	dta $00,$00,$01,$01,$02,$02,$02,$03,$03,$04,$04,$04,$05,$05,$06,$06
   190 AF70 00 00 01 01 02 02 + 	dta $00,$00,$01,$01,$02,$02,$03,$03,$04,$04,$05,$05,$06,$06,$07,$07
   191 AF80 00 01 01 02 02 03 + 	dta $00,$01,$01,$02,$02,$03,$03,$04,$04,$05,$05,$06,$06,$07,$07,$08
   192 AF90 00 01 01 02 02 03 + 	dta $00,$01,$01,$02,$02,$03,$04,$04,$05,$05,$06,$07,$07,$08,$08,$09
   193 AFA0 00 01 01 02 03 03 + 	dta $00,$01,$01,$02,$03,$03,$04,$05,$05,$06,$07,$07,$08,$09,$09,$0A
   194 AFB0 00 01 01 02 03 04 + 	dta $00,$01,$01,$02,$03,$04,$04,$05,$06,$07,$07,$08,$09,$0A,$0A,$0B
   195 AFC0 00 01 02 02 03 04 + 	dta $00,$01,$02,$02,$03,$04,$05,$06,$06,$07,$08,$09,$0A,$0A,$0B,$0C
   196 AFD0 00 01 02 03 03 04 + 	dta $00,$01,$02,$03,$03,$04,$05,$06,$07,$08,$09,$0A,$0A,$0B,$0C,$0D
   197 AFE0 00 01 02 03 04 05 + 	dta $00,$01,$02,$03,$04,$05,$06,$07,$07,$08,$09,$0A,$0B,$0C,$0D,$0E
   198 AFF0 00 01 02 03 04 05 + 	dta $00,$01,$02,$03,$04,$05,$06,$07,$08,$09,$0A,$0B,$0C,$0D,$0E,$0F
   199 B000				org PLAYER
   200 				;*
   201 				;* Set of RMT main vectors:
   202 				;*
   203 B000			RASTERMUSICTRACKER
   204 B000 4C 0F B0			jmp rmt_init
   205 B003 4C E5 B1			jmp rmt_play
   206 B006 4C FF B1			jmp rmt_p3
   207 B009 4C 4F B0			jmp rmt_silence
   208 B00C 4C 99 B3			jmp SetPokey
   209 					IFT FEAT_SFX
   210 					jmp rmt_sfx			;* A=note(0,..,60),X=channel(0,..,3 or 0,..,7),Y=instrument*2(0,2,4,..,126)
   211 					EIF
   212 B00F			rmt_init
   213 B00F 86 28			stx ns
   214 B011 84 29			sty ns+1
   215 					IFT FEAT_NOSTARTINGSONGLINE==0
   216 B013 48				pha
   217 					EIF
   218 					IFT track_endvariables-track_variables>255
   219 					ldy #0
   220 					tya
   221 				ri0	sta track_variables,y
   222 					sta track_endvariables-$100,y
   223 					iny
   224 					bne ri0
   225 					ELS
   226 B014 A0 81			ldy #track_endvariables-track_variables
   227 B016 A9 00			lda #0
   228 B018 99 DF AC		ri0	sta track_variables-1,y
   229 B01B 88				dey
   230 B01C D0 FA			bne ri0
   231 					EIF
   232 B01E A0 04			ldy #4
   233 B020 B1 28			lda (ns),y
   234 B022 8D F3 B1			sta v_maxtracklen
   235 B025 C8				iny
   236 					IFT FEAT_CONSTANTSPEED==0
   237 B026 B1 28			lda (ns),y
   238 B028 8D B5 B0			sta v_speed
   239 					EIF
   240 					IFT FEAT_INSTRSPEED==0
   241 					iny
   242 					lda (ns),y
   243 					sta v_instrspeed
   244 					sta v_ainstrspeed
   245 					ELI FEAT_INSTRSPEED>1
   246 					lda #FEAT_INSTRSPEED
   247 					sta v_ainstrspeed
   248 					EIF
   249 B02B A0 08			ldy #8
   250 B02D B1 28		ri1	lda (ns),y
   251 B02F 99 18 00			sta p_tis-8,y
   252 B032 C8				iny
   253 B033 C0 10			cpy #8+8
   254 B035 D0 F6			bne ri1
   255 					IFT FEAT_NOSTARTINGSONGLINE==0
   256 B037 68				pla
   257 B038 48				pha
   258 					IFT TRACKS>4
   259 					asl @
   260 					asl @
   261 					asl @
   262 					clc
   263 					adc p_song
   264 					sta p_song
   265 					pla
   266 					php
   267 					and #$e0
   268 					asl @
   269 					rol @
   270 					rol @
   271 					rol @
   272 					ELS
   273 B039 0A				asl @
   274 B03A 0A				asl @
   275 B03B 18				clc
   276 B03C 65 26			adc p_song
   277 B03E 85 26			sta p_song
   278 B040 68				pla
   279 B041 08				php
   280 B042 29 C0			and #$c0
   281 B044 0A				asl @
   282 B045 2A				rol @
   283 B046 2A				rol @
   284 					EIF
   285 B047 28				plp
   286 B048 65 27			adc p_song+1
   287 B04A 85 27			sta p_song+1
   288 					EIF
   289 B04C 20 64 B0			jsr GetSongLineTrackLineInitOfNewSetInstrumentsOnlyRmtp3
   290 B04F			rmt_silence
   291 					IFT STEREOMODE>0
   292 					lda #0
   293 					sta $d208
   294 					sta $d218
   295 					ldy #3
   296 					sty $d20f
   297 					sty $d21f
   298 					ldy #8
   299 				si1	sta $d200,y
   300 					sta $d210,y
   301 					dey
   302 					bpl si1
   303 					ELS
   304 B04F A9 00			lda #0
   305 B051 8D 08 D2			sta $d208
   306 B054 A0 03			ldy #3
   307 B056 8C 0F D2			sty $d20f
   308 B059 A0 08			ldy #8
   309 B05B 99 00 D2		si1	sta $d200,y
   310 B05E 88				dey
   311 B05F 10 FA			bpl si1
   312 					EIF
   313 					IFT FEAT_INSTRSPEED==0
   314 					lda v_instrspeed
   315 					ELS
   316 B061 A9 01			lda #FEAT_INSTRSPEED
   317 					EIF
   318 B063 60				rts
   319 B064			GetSongLineTrackLineInitOfNewSetInstrumentsOnlyRmtp3
   320 B064			GetSongLine
   321 B064 A2 00			ldx #0
   322 B066 8E F1 B1			stx v_abeat
   323 B069			nn0
   324 B069 8A			nn1	txa
   325 B06A A8				tay
   326 B06B B1 26			lda (p_song),y
   327 B06D C9 FE			cmp #$fe
   328 B06F B0 2D			bcs nn2
   329 B071 A8				tay
   330 B072 B1 22			lda (p_trackslbstable),y
   331 B074 9D E0 AC			sta trackn_db,x
   332 B077 B1 24			lda (p_trackshbstable),y
   333 B079 9D E4 AC		nn1a sta trackn_hb,x
   334 B07C A9 00			lda #0
   335 B07E 9D E8 AC			sta trackn_idx,x
   336 B081 A9 01			lda #1
   337 B083 9D EC AC		nn1a2 sta trackn_pause,x
   338 B086 A9 80			lda #$80
   339 B088 9D 00 AD			sta trackn_instrx2,x
   340 B08B E8				inx
   341 B08C E0 04		xtracks01	cpx #TRACKS
   342 B08E D0 D9			bne nn1
   343 B090 A5 26			lda p_song
   344 B092 18				clc
   345 B093 69 04		xtracks02	adc #TRACKS
   346 B095 85 26			sta p_song
   347 B097 90 1B			bcc GetTrackLine
   348 B099 E6 27			inc p_song+1
   349 B09B			nn1b
   350 B09B 4C B4 B0			jmp GetTrackLine
   351 B09E			nn2
   352 B09E F0 04			beq nn3
   353 B0A0			nn2a
   354 B0A0 A9 00			lda #0
   355 B0A2 F0 DF			beq nn1a2
   356 B0A4			nn3
   357 B0A4 A0 02			ldy #2
   358 B0A6 B1 26			lda (p_song),y
   359 B0A8 AA				tax
   360 B0A9 C8				iny
   361 B0AA B1 26			lda (p_song),y
   362 B0AC 85 27			sta p_song+1
   363 B0AE 86 26			stx p_song
   364 B0B0 A2 00			ldx #0
   365 B0B2 F0 B5			beq nn0
   366 B0B4			GetTrackLine
   367 B0B4			oo0
   368 B0B4			oo0a
   369 					IFT FEAT_CONSTANTSPEED==0
   370 B0B4 A9 FF			lda #$ff
   371 = B0B5			v_speed equ *-1
   372 B0B6 8D 0F B1			sta v_bspeed
   373 					EIF
   374 B0B9 A2 FF			ldx #-1
   375 B0BB			oo1
   376 B0BB E8				inx
   377 B0BC DE EC AC			dec trackn_pause,x
   378 B0BF D0 49			bne oo1x
   379 B0C1			oo1b
   380 B0C1 BD E0 AC			lda trackn_db,x
   381 B0C4 85 28			sta ns
   382 B0C6 BD E4 AC			lda trackn_hb,x
   383 B0C9 85 29			sta ns+1
   384 B0CB			oo1i
   385 B0CB BC E8 AC			ldy trackn_idx,x
   386 B0CE FE E8 AC			inc trackn_idx,x
   387 B0D1 B1 28			lda (ns),y
   388 B0D3 85 2E			sta reg1
   389 B0D5 29 3F			and #$3f
   390 B0D7 C9 3D			cmp #61
   391 B0D9 F0 0E			beq oo1a
   392 B0DB B0 3C			bcs oo2
   393 B0DD 9D F0 AC			sta trackn_note,x
   394 					IFT FEAT_BASS16
   395 					sta trackn_outnote,x
   396 					EIF
   397 B0E0 C8				iny
   398 B0E1 B1 28			lda (ns),y
   399 B0E3 4A				lsr @
   400 B0E4 29 7E			and #$3f*2
   401 B0E6 9D 00 AD			sta trackn_instrx2,x
   402 B0E9			oo1a
   403 B0E9 A9 01			lda #1
   404 B0EB 9D EC AC			sta trackn_pause,x
   405 B0EE BC E8 AC			ldy trackn_idx,x
   406 B0F1 FE E8 AC			inc trackn_idx,x
   407 B0F4 B1 28			lda (ns),y
   408 B0F6 4A				lsr @
   409 B0F7 66 2E			ror reg1
   410 B0F9 4A				lsr @
   411 B0FA 66 2E			ror reg1
   412 B0FC A5 2E			lda reg1
   413 					IFT FEAT_GLOBALVOLUMEFADE
   414 B0FE 38				sec
   415 B0FF E9 00			sbc #$00
   416 = B100			RMTGLOBALVOLUMEFADE equ *-1
   417 B101 B0 02			bcs voig
   418 B103 A9 00			lda #0
   419 B105			voig
   420 					EIF
   421 B105 29 F0			and #$f0
   422 B107 9D F4 AC			sta trackn_volume,x
   423 B10A			oo1x
   424 B10A E0 03		xtracks03sub1	cpx #TRACKS-1
   425 B10C D0 AD			bne oo1
   426 					IFT FEAT_CONSTANTSPEED==0
   427 B10E A9 FF			lda #$ff
   428 = B10F			v_bspeed equ *-1
   429 B110 8D B5 B0			sta v_speed
   430 					ELS	
   431 				music_speed	equ *+1	
   432 					lda #FEAT_CONSTANTSPEED
   433 					EIF
   434 B113 8D 60 AD			sta v_aspeed
   435 B116 4C 5E B1			jmp InitOfNewSetInstrumentsOnly
   436 B119			oo2
   437 B119 C9 3F			cmp #63
   438 B11B F0 1B			beq oo63
   439 B11D A5 2E			lda reg1
   440 B11F 29 C0			and #$c0
   441 B121 F0 09			beq oo62_b
   442 B123 0A				asl @
   443 B124 2A				rol @
   444 B125 2A				rol @
   445 B126 9D EC AC			sta trackn_pause,x
   446 B129 4C 0A B1			jmp oo1x
   447 B12C			oo62_b
   448 B12C C8				iny
   449 B12D B1 28			lda (ns),y
   450 B12F 9D EC AC			sta trackn_pause,x
   451 B132 FE E8 AC			inc trackn_idx,x
   452 B135 4C 0A B1			jmp oo1x
   453 B138			oo63
   454 B138 A5 2E			lda reg1
   455 					IFT FEAT_CONSTANTSPEED==0
   456 B13A 30 0C			bmi oo63_1X
   457 B13C C8				iny
   458 B13D B1 28			lda (ns),y
   459 B13F 8D 0F B1			sta v_bspeed
   460 B142 FE E8 AC			inc trackn_idx,x
   461 B145 4C CB B0			jmp oo1i
   462 B148			oo63_1X
   463 					EIF
   464 B148 C9 FF			cmp #255
   465 B14A F0 09			beq oo63_11
   466 B14C C8				iny
   467 B14D B1 28			lda (ns),y
   468 B14F 9D E8 AC			sta trackn_idx,x
   469 B152 4C CB B0			jmp oo1i
   470 B155			oo63_11
   471 B155 4C 64 B0			jmp GetSongLine
   472 B158 4C FF B1		p2xrmtp3	jmp rmt_p3
   473 B15B CA			p2x0 dex
   474 B15C 30 FA			 bmi p2xrmtp3
   475 B15E			InitOfNewSetInstrumentsOnly
   476 B15E BC 00 AD		p2x1 ldy trackn_instrx2,x
   477 B161 30 F8			bmi p2x0
   478 					IFT FEAT_SFX
   479 					jsr SetUpInstrumentY2
   480 					jmp p2x0
   481 				rmt_sfx
   482 					sta trackn_note,x
   483 					IFT FEAT_BASS16
   484 					sta trackn_outnote,x
   485 					EIF
   486 					lda #$f0				;* sfx note volume*16
   487 				RMTSFXVOLUME equ *-1		;* label for sfx note volume parameter overwriting
   488 					sta trackn_volume,x
   489 					EIF
   490 B163			SetUpInstrumentY2
   491 B163 B1 20			lda (p_instrstable),y
   492 B165 9D 04 AD			sta trackn_instrdb,x
   493 B168 85 2C			sta nt
   494 B16A C8				iny
   495 B16B B1 20			lda (p_instrstable),y
   496 B16D 9D 08 AD			sta trackn_instrhb,x
   497 B170 85 2D			sta nt+1
   498 					IFT FEAT_FILTER
   499 B172 A9 01			lda #1
   500 B174 9D 50 AD			sta trackn_filter,x
   501 					EIF
   502 					IFT FEAT_TABLEGO
   503 					IFT FEAT_FILTER
   504 B177 A8				tay
   505 					ELS
   506 					ldy #1
   507 					EIF
   508 B178 B1 2C			lda (nt),y
   509 B17A 9D 44 AD			sta trackn_tablelop,x
   510 B17D C8				iny
   511 					ELS
   512 					ldy #2
   513 					EIF
   514 B17E B1 2C			lda (nt),y
   515 B180 9D 10 AD			sta trackn_instrlen,x
   516 B183 C8				iny
   517 B184 B1 2C			lda (nt),y
   518 B186 9D 14 AD			sta trackn_instrlop,x
   519 B189 C8				iny
   520 B18A B1 2C			lda (nt),y
   521 B18C 9D 34 AD			sta trackn_tabletypespeed,x
   522 					IFT FEAT_TABLETYPE||FEAT_TABLEMODE
   523 B18F 29 3F			and #$3f
   524 					EIF
   525 B191 9D 48 AD			sta trackn_tablespeeda,x
   526 					IFT FEAT_TABLEMODE
   527 					lda (nt),y
   528 					and #$40
   529 					sta trackn_tablemode,x
   530 					EIF
   531 					IFT FEAT_AUDCTLMANUALSET
   532 B194 C8				iny
   533 B195 B1 2C			lda (nt),y
   534 B197 9D 5C AD			sta trackn_audctl,x
   535 B19A C8				iny
   536 					ELS
   537 					ldy #6
   538 					EIF
   539 B19B B1 2C			lda (nt),y
   540 B19D 9D 1C AD			sta trackn_volumeslidedepth,x
   541 					IFT FEAT_VOLUMEMIN
   542 B1A0 C8				iny
   543 B1A1 B1 2C			lda (nt),y
   544 B1A3 9D 24 AD			sta trackn_volumemin,x
   545 					IFT FEAT_EFFECTS
   546 B1A6 C8				iny
   547 					EIF
   548 					ELS
   549 					IFT FEAT_EFFECTS
   550 					ldy #8
   551 					EIF
   552 					EIF
   553 					IFT FEAT_EFFECTS
   554 B1A7 B1 2C			lda (nt),y
   555 B1A9 9D 28 AD			sta trackn_effdelay,x
   556 					IFT FEAT_EFFECTVIBRATO
   557 B1AC C8				iny
   558 B1AD B1 2C			lda (nt),y
   559 B1AF A8				tay
   560 B1B0 B9 92 AD			lda vibtabbeg,y
   561 B1B3 9D 2C AD			sta trackn_effvibratoa,x
   562 					EIF
   563 					IFT FEAT_EFFECTFSHIFT
   564 B1B6 A0 0A			ldy #10
   565 B1B8 B1 2C			lda (nt),y
   566 B1BA 9D 30 AD			sta trackn_effshift,x
   567 					EIF
   568 					EIF
   569 B1BD A9 80			lda #128
   570 B1BF 9D 20 AD			sta trackn_volumeslidevalue,x
   571 B1C2 9D 00 AD			sta trackn_instrx2,x
   572 B1C5 0A				asl @
   573 B1C6 9D 18 AD			sta trackn_instrreachend,x
   574 B1C9 9D FC AC			sta trackn_shiftfrq,x
   575 B1CC A8				tay
   576 B1CD B1 2C			lda (nt),y
   577 B1CF 9D 40 AD			sta trackn_tableend,x
   578 B1D2 69 00			adc #0
   579 B1D4 9D 0C AD			sta trackn_instridx,x
   580 B1D7 A9 0C			lda #INSTRPAR
   581 B1D9 9D 3C AD			sta trackn_tablea,x
   582 B1DC A8				tay
   583 B1DD B1 2C			lda (nt),y
   584 B1DF 9D 38 AD			sta trackn_tablenote,x
   585 B1E2			xata_rtshere
   586 					IFT FEAT_SFX
   587 					rts
   588 					ELS
   589 B1E2 4C 5B B1			jmp p2x0
   590 					EIF
   591 B1E5			rmt_play
   592 B1E5			rmt_p0
   593 B1E5 20 99 B3			jsr SetPokey
   594 B1E8			rmt_p1
   595 					IFT FEAT_INSTRSPEED==0||FEAT_INSTRSPEED>1
   596 					dec v_ainstrspeed
   597 					bne rmt_p3
   598 					EIF
   599 					IFT FEAT_INSTRSPEED==0
   600 					lda #$ff
   601 				v_instrspeed	equ *-1
   602 					sta v_ainstrspeed
   603 					ELI FEAT_INSTRSPEED>1
   604 					lda #FEAT_INSTRSPEED
   605 					sta v_ainstrspeed
   606 					EIF
   607 B1E8			rmt_p2
   608 B1E8 CE 60 AD			dec v_aspeed
   609 B1EB D0 12			bne rmt_p3
   610 B1ED EE F1 B1			inc v_abeat
   611 B1F0 A9 FF			lda #$ff
   612 = B1F1			v_abeat equ *-1
   613 B1F2 C9 FF			cmp #$ff
   614 = B1F3			v_maxtracklen equ *-1
   615 B1F4 F0 03			beq p2o3
   616 B1F6 4C B4 B0			jmp GetTrackLine
   617 B1F9			p2o3
   618 B1F9 4C 64 B0			jmp GetSongLineTrackLineInitOfNewSetInstrumentsOnlyRmtp3
   619 B1FC 4C 59 B3		go_ppnext	jmp ppnext
   620 B1FF			rmt_p3
   621 B1FF A9 AE			lda #>frqtab
   622 B201 85 2B			sta nr+1
   623 B203 A2 03		xtracks05sub1	ldx #TRACKS-1
   624 B205			pp1
   625 B205 BD 08 AD			lda trackn_instrhb,x
   626 B208 F0 F2			beq go_ppnext
   627 B20A 85 29			sta ns+1
   628 B20C BD 04 AD			lda trackn_instrdb,x
   629 B20F 85 28			sta ns
   630 B211 BC 0C AD			ldy trackn_instridx,x
   631 B214 B1 28			lda (ns),y
   632 B216 85 2E			sta reg1
   633 B218 C8				iny
   634 B219 B1 28			lda (ns),y
   635 B21B 85 2F			sta reg2
   636 B21D C8				iny
   637 B21E B1 28			lda (ns),y
   638 B220 85 30			sta reg3
   639 B222 C8				iny
   640 B223 98				tya
   641 B224 DD 10 AD			cmp trackn_instrlen,x
   642 B227 90 0A			bcc pp2
   643 B229 F0 08			beq pp2
   644 B22B A9 80			lda #$80
   645 B22D 9D 18 AD			sta trackn_instrreachend,x
   646 B230			pp1b
   647 B230 BD 14 AD			lda trackn_instrlop,x
   648 B233 9D 0C AD		pp2	sta trackn_instridx,x
   649 B236 A5 2E			lda reg1
   650 					IFT TRACKS>4
   651 					cpx #4
   652 					bcc pp2s
   653 					lsr @
   654 					lsr @
   655 					lsr @
   656 					lsr @
   657 				pp2s
   658 					EIF
   659 B238 29 0F			and #$0f
   660 B23A 1D F4 AC			ora trackn_volume,x
   661 B23D A8				tay
   662 B23E B9 00 AF			lda volumetab,y
   663 B241 85 31			sta tmp
   664 B243 A5 2F			lda reg2
   665 B245 29 0E			and #$0e
   666 B247 A8				tay
   667 B248 B9 82 AD			lda tabbeganddistor,y
   668 B24B 85 2A			sta nr
   669 B24D A5 31			lda tmp
   670 B24F 19 83 AD			ora tabbeganddistor+1,y
   671 B252 9D 58 AD			sta trackn_audc,x
   672 B255			InstrumentsEffects
   673 					IFT FEAT_EFFECTS
   674 B255 BD 28 AD			lda trackn_effdelay,x
   675 B258 F0 21			beq ei2
   676 B25A C9 01			cmp #1
   677 B25C D0 1A			bne ei1
   678 B25E BD FC AC			lda trackn_shiftfrq,x
   679 					IFT FEAT_EFFECTFSHIFT
   680 B261 18				clc
   681 B262 7D 30 AD			adc trackn_effshift,x
   682 					EIF
   683 					IFT FEAT_EFFECTVIBRATO
   684 B265 18				clc
   685 B266 BC 2C AD			ldy trackn_effvibratoa,x
   686 B269 79 96 AD			adc vib0,y
   687 					EIF
   688 B26C 9D FC AC			sta trackn_shiftfrq,x
   689 					IFT FEAT_EFFECTVIBRATO
   690 B26F B9 AB AD			lda vibtabnext,y
   691 B272 9D 2C AD			sta trackn_effvibratoa,x
   692 					EIF
   693 B275 4C 7B B2			jmp ei2
   694 B278			ei1
   695 B278 DE 28 AD			dec trackn_effdelay,x
   696 B27B			ei2
   697 					EIF
   698 B27B BC 40 AD			ldy trackn_tableend,x
   699 B27E C0 0D			cpy #INSTRPAR+1
   700 B280 90 33			bcc ei3
   701 B282 BD 48 AD			lda trackn_tablespeeda,x
   702 B285 10 28			bpl ei2f
   703 B287			ei2c
   704 B287 98				tya
   705 B288 DD 3C AD			cmp trackn_tablea,x
   706 B28B D0 08			bne ei2c2
   707 					IFT FEAT_TABLEGO
   708 B28D BD 44 AD			lda trackn_tablelop,x
   709 					ELS
   710 					lda #INSTRPAR
   711 					EIF
   712 B290 9D 3C AD			sta trackn_tablea,x
   713 B293 D0 03			bne ei2a
   714 B295			ei2c2
   715 B295 FE 3C AD			inc trackn_tablea,x
   716 B298			ei2a
   717 B298 BD 04 AD			lda trackn_instrdb,x
   718 B29B 85 2C			sta nt
   719 B29D BD 08 AD			lda trackn_instrhb,x
   720 B2A0 85 2D			sta nt+1
   721 B2A2 BC 3C AD			ldy trackn_tablea,x
   722 B2A5 B1 2C			lda (nt),y
   723 					IFT FEAT_TABLEMODE
   724 					ldy trackn_tablemode,x
   725 					beq ei2e
   726 					clc
   727 					adc trackn_tablenote,x
   728 				ei2e
   729 					EIF
   730 B2A7 9D 38 AD			sta trackn_tablenote,x
   731 B2AA BD 34 AD			lda trackn_tabletypespeed,x
   732 					IFT FEAT_TABLETYPE||FEAT_TABLEMODE
   733 B2AD 29 3F			and #$3f
   734 					EIF
   735 B2AF			ei2f
   736 B2AF 38				sec
   737 B2B0 E9 01			sbc #1
   738 B2B2 9D 48 AD			sta trackn_tablespeeda,x
   739 B2B5			ei3
   740 B2B5 BD 18 AD			lda trackn_instrreachend,x
   741 B2B8 10 1F			bpl ei4
   742 B2BA BD F4 AC			lda trackn_volume,x
   743 B2BD F0 1A			beq ei4
   744 					IFT FEAT_VOLUMEMIN
   745 B2BF DD 24 AD			cmp trackn_volumemin,x
   746 B2C2 F0 15			beq ei4
   747 B2C4 90 13			bcc ei4
   748 					EIF
   749 B2C6 A8				tay
   750 B2C7 BD 20 AD			lda trackn_volumeslidevalue,x
   751 B2CA 18				clc
   752 B2CB 7D 1C AD			adc trackn_volumeslidedepth,x
   753 B2CE 9D 20 AD			sta trackn_volumeslidevalue,x
   754 B2D1 90 06			bcc ei4
   755 B2D3 98				tya
   756 B2D4 E9 10			sbc #16
   757 B2D6 9D F4 AC			sta trackn_volume,x
   758 B2D9			ei4
   759 					IFT FEAT_COMMAND2
   760 					lda #0
   761 					sta frqaddcmd2
   762 					EIF
   763 					IFT FEAT_COMMAND1||FEAT_COMMAND2||FEAT_COMMAND3||FEAT_COMMAND4||FEAT_COMMAND5||FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   764 B2D9 A5 2F			lda reg2
   765 					IFT FEAT_FILTER||FEAT_BASS16
   766 B2DB 9D 4C AD			sta trackn_command,x
   767 					EIF
   768 B2DE 29 70			and #$70
   769 					IFT 1==[FEAT_COMMAND1+FEAT_COMMAND2+FEAT_COMMAND3+FEAT_COMMAND4+FEAT_COMMAND5+FEAT_COMMAND6+[FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY]]
   770 					beq cmd0
   771 					ELS
   772 B2E0 4A				lsr @
   773 B2E1 4A				lsr @
   774 B2E2 8D E6 B2			sta jmx+1
   775 B2E5 90 FE		jmx	bcc *
   776 B2E7 4C 1C B3			jmp cmd0
   777 B2EA EA				nop
   778 B2EB 4C 02 B3			jmp cmd1
   779 					IFT FEAT_COMMAND2||FEAT_COMMAND3||FEAT_COMMAND4||FEAT_COMMAND5||FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   780 B2EE EA				nop
   781 B2EF 4C 07 B3			jmp cmd2
   782 					EIF
   783 					IFT FEAT_COMMAND3||FEAT_COMMAND4||FEAT_COMMAND5||FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   784 B2F2 EA				nop
   785 B2F3 4C 07 B3			jmp cmd3
   786 					EIF
   787 					IFT FEAT_COMMAND4||FEAT_COMMAND5||FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   788 B2F6 EA				nop
   789 B2F7 4C 07 B3			jmp cmd4
   790 					EIF
   791 					IFT FEAT_COMMAND5||FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   792 B2FA EA				nop
   793 B2FB 4C 07 B3			jmp cmd5
   794 					EIF
   795 					IFT FEAT_COMMAND6||FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   796 B2FE EA				nop
   797 B2FF 4C 0D B3			jmp cmd6
   798 					EIF
   799 					IFT FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   800 					nop
   801 					jmp cmd7
   802 					EIF
   803 					EIF
   804 					ELS
   805 					IFT FEAT_FILTER||FEAT_BASS16
   806 					lda reg2
   807 					sta trackn_command,x
   808 					EIF
   809 					EIF
   810 B302			cmd1
   811 					IFT FEAT_COMMAND1
   812 B302 A5 30			lda reg3
   813 B304 4C 56 B3			jmp cmd0c
   814 					EIF
   815 B307			cmd2
   816 					IFT FEAT_COMMAND2
   817 					lda reg3
   818 					sta frqaddcmd2
   819 					lda trackn_note,x
   820 					jmp cmd0a
   821 					EIF
   822 B307			cmd3
   823 					IFT FEAT_COMMAND3
   824 					lda trackn_note,x
   825 					clc
   826 					adc reg3
   827 					sta trackn_note,x
   828 					jmp cmd0a
   829 					EIF
   830 B307			cmd4
   831 					IFT FEAT_COMMAND4
   832 					lda trackn_shiftfrq,x
   833 					clc
   834 					adc reg3
   835 					sta trackn_shiftfrq,x
   836 					lda trackn_note,x
   837 					jmp cmd0a
   838 					EIF
   839 B307			cmd5
   840 					IFT FEAT_COMMAND5&&FEAT_PORTAMENTO
   841 					IFT FEAT_TABLETYPE
   842 					lda trackn_tabletypespeed,x
   843 					bpl cmd5a1
   844 					ldy trackn_note,x
   845 					lda (nr),y
   846 					clc
   847 					adc trackn_tablenote,x
   848 					jmp cmd5ax
   849 					EIF
   850 				cmd5a1
   851 					lda trackn_note,x
   852 					clc
   853 					adc trackn_tablenote,x
   854 					cmp #61
   855 					bcc cmd5a2
   856 					lda #63
   857 				cmd5a2
   858 					tay
   859 					lda (nr),y
   860 				cmd5ax
   861 					sta trackn_portafrqc,x
   862 					ldy reg3
   863 					bne cmd5a
   864 					sta trackn_portafrqa,x
   865 				cmd5a
   866 					tya
   867 					lsr @
   868 					lsr @
   869 					lsr @
   870 					lsr @
   871 					sta trackn_portaspeed,x
   872 					sta trackn_portaspeeda,x
   873 					lda reg3
   874 					and #$0f
   875 					sta trackn_portadepth,x
   876 					lda trackn_note,x
   877 					jmp cmd0a
   878 					ELI FEAT_COMMAND5
   879 B307 BD F0 AC			lda trackn_note,x
   880 B30A 4C 22 B3			jmp cmd0a
   881 					EIF
   882 B30D			cmd6
   883 					IFT FEAT_COMMAND6&&FEAT_FILTER
   884 B30D A5 30			lda reg3
   885 B30F 18				clc
   886 B310 7D 50 AD			adc trackn_filter,x
   887 B313 9D 50 AD			sta trackn_filter,x
   888 B316 BD F0 AC			lda trackn_note,x
   889 B319 4C 22 B3			jmp cmd0a
   890 					ELI FEAT_COMMAND6
   891 					lda trackn_note,x
   892 					jmp cmd0a
   893 					EIF
   894 B31C			cmd7
   895 					IFT FEAT_COMMAND7SETNOTE||FEAT_COMMAND7VOLUMEONLY
   896 					IFT FEAT_COMMAND7SETNOTE
   897 					lda reg3
   898 					IFT FEAT_COMMAND7VOLUMEONLY
   899 					cmp #$80
   900 					beq cmd7a
   901 					EIF
   902 					sta trackn_note,x
   903 					jmp cmd0a
   904 					EIF
   905 					IFT FEAT_COMMAND7VOLUMEONLY
   906 				cmd7a
   907 					lda trackn_audc,x
   908 					ora #$f0
   909 					sta trackn_audc,x
   910 					lda trackn_note,x
   911 					jmp cmd0a
   912 					EIF
   913 					EIF
   914 B31C			cmd0
   915 B31C BD F0 AC			lda trackn_note,x
   916 B31F 18				clc
   917 B320 65 30			adc reg3
   918 B322			cmd0a
   919 					IFT FEAT_TABLETYPE
   920 B322 BC 34 AD			ldy trackn_tabletypespeed,x
   921 B325 30 19			bmi cmd0b
   922 					EIF
   923 B327 18				clc
   924 B328 7D 38 AD			adc trackn_tablenote,x
   925 B32B C9 3D			cmp #61
   926 B32D 90 07			bcc cmd0a1
   927 B32F A9 00			lda #0
   928 B331 9D 58 AD			sta trackn_audc,x
   929 B334 A9 3F			lda #63
   930 B336			cmd0a1
   931 					IFT FEAT_BASS16
   932 					sta trackn_outnote,x
   933 					EIF
   934 B336 A8				tay
   935 B337 B1 2A			lda (nr),y
   936 B339 18				clc
   937 B33A 7D FC AC			adc trackn_shiftfrq,x
   938 					IFT FEAT_COMMAND2
   939 					clc
   940 					adc frqaddcmd2
   941 					EIF
   942 					IFT FEAT_TABLETYPE
   943 B33D 4C 56 B3			jmp cmd0c
   944 B340			cmd0b
   945 B340 C9 3D			cmp #61
   946 B342 90 07			bcc cmd0b1
   947 B344 A9 00			lda #0
   948 B346 9D 58 AD			sta trackn_audc,x
   949 B349 A9 3F			lda #63
   950 B34B			cmd0b1
   951 B34B A8				tay
   952 B34C BD FC AC			lda trackn_shiftfrq,x
   953 B34F 18				clc
   954 B350 7D 38 AD			adc trackn_tablenote,x
   955 B353 18				clc
   956 B354 71 2A			adc (nr),y
   957 					IFT FEAT_COMMAND2
   958 					clc
   959 					adc frqaddcmd2
   960 					EIF
   961 					EIF
   962 B356			cmd0c
   963 B356 9D 54 AD			sta trackn_audf,x
   964 B359			pp9
   965 					IFT FEAT_PORTAMENTO
   966 					lda trackn_portaspeeda,x
   967 					beq pp10
   968 					dec trackn_portaspeeda,x
   969 					bne pp10
   970 					lda trackn_portaspeed,x
   971 					sta trackn_portaspeeda,x
   972 					lda trackn_portafrqa,x
   973 					cmp trackn_portafrqc,x
   974 					beq pp10
   975 					bcs pps1
   976 					adc trackn_portadepth,x
   977 					bcs pps8
   978 					cmp trackn_portafrqc,x
   979 					bcs pps8
   980 					jmp pps9
   981 				pps1
   982 					sbc trackn_portadepth,x
   983 					bcc pps8
   984 					cmp trackn_portafrqc,x
   985 					bcs pps9
   986 				pps8
   987 					lda trackn_portafrqc,x
   988 				pps9
   989 					sta trackn_portafrqa,x
   990 				pp10
   991 					lda reg2
   992 					and #$01
   993 					beq pp11
   994 					lda trackn_portafrqa,x
   995 					clc
   996 					adc trackn_shiftfrq,x
   997 					sta trackn_audf,x
   998 				pp11
   999 					EIF
  1000 B359			ppnext
  1001 B359 CA				dex
  1002 B35A 30 03			bmi rmt_p4
  1003 B35C 4C 05 B2			jmp pp1
  1004 B35F			rmt_p4
  1005 					IFT FEAT_AUDCTLMANUALSET
  1006 B35F AD 5C AD			lda trackn_audctl+0
  1007 B362 0D 5D AD			ora trackn_audctl+1
  1008 B365 0D 5E AD			ora trackn_audctl+2
  1009 B368 0D 5F AD			ora trackn_audctl+3
  1010 B36B AA				tax
  1011 					ELS
  1012 					ldx #0
  1013 					EIF
  1014 B36C			qq1
  1015 B36C 8E 9A B3			stx v_audctl
  1016 					IFT FEAT_FILTER
  1017 					IFT FEAT_FILTERG0L
  1018 B36F AD 4C AD			lda trackn_command+0
  1019 B372 10 1A			bpl qq2
  1020 B374 AD 58 AD			lda trackn_audc+0
  1021 B377 29 0F			and #$0f
  1022 B379 F0 13			beq qq2
  1023 B37B AD 54 AD			lda trackn_audf+0
  1024 B37E 18				clc
  1025 B37F 6D 50 AD			adc trackn_filter+0
  1026 B382 8D 56 AD			sta trackn_audf+2
  1027 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG2L
  1028 					lda trackn_audc+2
  1029 					and #$10
  1030 					bne qq1a
  1031 					EIF
  1032 B385 A9 00			lda #0
  1033 B387 8D 5A AD			sta trackn_audc+2
  1034 B38A			qq1a
  1035 B38A 8A				txa
  1036 B38B 09 04			ora #4
  1037 B38D AA				tax
  1038 					EIF
  1039 B38E			qq2
  1040 					IFT FEAT_FILTERG1L
  1041 					lda trackn_command+1
  1042 					bpl qq3
  1043 					lda trackn_audc+1
  1044 					and #$0f
  1045 					beq qq3
  1046 					lda trackn_audf+1
  1047 					clc
  1048 					adc trackn_filter+1
  1049 					sta trackn_audf+3
  1050 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG3L
  1051 					lda trackn_audc+3
  1052 					and #$10
  1053 					bne qq2a
  1054 					EIF
  1055 					lda #0
  1056 					sta trackn_audc+3
  1057 				qq2a
  1058 					txa
  1059 					ora #2
  1060 					tax
  1061 					EIF
  1062 B38E			qq3
  1063 					IFT FEAT_FILTERG0L||FEAT_FILTERG1L
  1064 B38E EC 9A B3			cpx v_audctl
  1065 B391 D0 00			bne qq5
  1066 					EIF
  1067 					EIF
  1068 					IFT FEAT_BASS16
  1069 					IFT FEAT_BASS16G1L
  1070 					lda trackn_command+1
  1071 					and #$0e
  1072 					cmp #6
  1073 					bne qq4
  1074 					lda trackn_audc+1
  1075 					and #$0f
  1076 					beq qq4
  1077 					ldy trackn_outnote+1
  1078 					lda frqtabbasslo,y
  1079 					sta trackn_audf+0
  1080 					lda frqtabbasshi,y
  1081 					sta trackn_audf+1
  1082 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG0L
  1083 					lda trackn_audc+0
  1084 					and #$10
  1085 					bne qq3a
  1086 					EIF
  1087 					lda #0
  1088 					sta trackn_audc+0
  1089 				qq3a
  1090 					txa
  1091 					ora #$50
  1092 					tax
  1093 					EIF
  1094 				qq4
  1095 					IFT FEAT_BASS16G3L
  1096 					lda trackn_command+3
  1097 					and #$0e
  1098 					cmp #6
  1099 					bne qq5
  1100 					lda trackn_audc+3
  1101 					and #$0f
  1102 					beq qq5
  1103 					ldy trackn_outnote+3
  1104 					lda frqtabbasslo,y
  1105 					sta trackn_audf+2
  1106 					lda frqtabbasshi,y
  1107 					sta trackn_audf+3
  1108 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG2L
  1109 					lda trackn_audc+2
  1110 					and #$10
  1111 					bne qq4a
  1112 					EIF
  1113 					lda #0
  1114 					sta trackn_audc+2
  1115 				qq4a
  1116 					txa
  1117 					ora #$28
  1118 					tax
  1119 					EIF
  1120 					EIF
  1121 B393			qq5
  1122 B393 8E 9A B3			stx v_audctl
  1123 					IFT TRACKS>4
  1124 					IFT FEAT_AUDCTLMANUALSET
  1125 					lda trackn_audctl+4
  1126 					ora trackn_audctl+5
  1127 					ora trackn_audctl+6
  1128 					ora trackn_audctl+7
  1129 					tax
  1130 					ELS
  1131 					ldx #0
  1132 					EIF
  1133 					stx v_audctl2
  1134 					IFT FEAT_FILTER
  1135 					IFT FEAT_FILTERG0R
  1136 					lda trackn_command+0+4
  1137 					bpl qs2
  1138 					lda trackn_audc+0+4
  1139 					and #$0f
  1140 					beq qs2
  1141 					lda trackn_audf+0+4
  1142 					clc
  1143 					adc trackn_filter+0+4
  1144 					sta trackn_audf+2+4
  1145 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG2R
  1146 					lda trackn_audc+2+4
  1147 					and #$10
  1148 					bne qs1a
  1149 					EIF
  1150 					lda #0
  1151 					sta trackn_audc+2+4
  1152 				qs1a
  1153 					txa
  1154 					ora #4
  1155 					tax
  1156 					EIF
  1157 				qs2
  1158 					IFT FEAT_FILTERG1R
  1159 					lda trackn_command+1+4
  1160 					bpl qs3
  1161 					lda trackn_audc+1+4
  1162 					and #$0f
  1163 					beq qs3
  1164 					lda trackn_audf+1+4
  1165 					clc
  1166 					adc trackn_filter+1+4
  1167 					sta trackn_audf+3+4
  1168 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG3R
  1169 					lda trackn_audc+3+4
  1170 					and #$10
  1171 					bne qs2a
  1172 					EIF
  1173 					lda #0
  1174 					sta trackn_audc+3+4
  1175 				qs2a
  1176 					txa
  1177 					ora #2
  1178 					tax
  1179 					EIF
  1180 				qs3
  1181 					IFT FEAT_FILTERG0R||FEAT_FILTERG1R
  1182 					cpx v_audctl2
  1183 					bne qs5
  1184 					EIF
  1185 					EIF
  1186 					IFT FEAT_BASS16
  1187 					IFT FEAT_BASS16G1R
  1188 					lda trackn_command+1+4
  1189 					and #$0e
  1190 					cmp #6
  1191 					bne qs4
  1192 					lda trackn_audc+1+4
  1193 					and #$0f
  1194 					beq qs4
  1195 					ldy trackn_outnote+1+4
  1196 					lda frqtabbasslo,y
  1197 					sta trackn_audf+0+4
  1198 					lda frqtabbasshi,y
  1199 					sta trackn_audf+1+4
  1200 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG0R
  1201 					lda trackn_audc+0+4
  1202 					and #$10
  1203 					bne qs3a
  1204 					EIF
  1205 					lda #0
  1206 					sta trackn_audc+0+4
  1207 				qs3a
  1208 					txa
  1209 					ora #$50
  1210 					tax
  1211 					EIF
  1212 				qs4
  1213 					IFT FEAT_BASS16G3R
  1214 					lda trackn_command+3+4
  1215 					and #$0e
  1216 					cmp #6
  1217 					bne qs5
  1218 					lda trackn_audc+3+4
  1219 					and #$0f
  1220 					beq qs5
  1221 					ldy trackn_outnote+3+4
  1222 					lda frqtabbasslo,y
  1223 					sta trackn_audf+2+4
  1224 					lda frqtabbasshi,y
  1225 					sta trackn_audf+3+4
  1226 					IFT FEAT_COMMAND7VOLUMEONLY&&FEAT_VOLUMEONLYG2R
  1227 					lda trackn_audc+2+4
  1228 					and #$10
  1229 					bne qs4a
  1230 					EIF
  1231 					lda #0
  1232 					sta trackn_audc+2+4
  1233 				qs4a
  1234 					txa
  1235 					ora #$28
  1236 					tax
  1237 					EIF
  1238 					EIF
  1239 				qs5
  1240 					stx v_audctl2
  1241 					EIF
  1242 B396			rmt_p5
  1243 					IFT FEAT_INSTRSPEED==0||FEAT_INSTRSPEED>1
  1244 					lda #$ff
  1245 				v_ainstrspeed equ *-1
  1246 					ELS
  1247 B396 A9 01			lda #1
  1248 					EIF
  1249 B398 60				rts
  1250 B399			SetPokey
  1251 					IFT STEREOMODE==1		;* L1 L2 L3 L4 R1 R2 R3 R4
  1252 					ldy #$ff
  1253 				v_audctl2 equ *-1
  1254 					lda trackn_audf+0+4
  1255 					ldx trackn_audf+0
  1256 				xstastx01	sta $d210
  1257 					stx $d200
  1258 					lda trackn_audc+0+4
  1259 					ldx trackn_audc+0
  1260 				xstastx02	sta $d211
  1261 					stx $d201
  1262 					lda trackn_audf+1+4
  1263 					ldx trackn_audf+1
  1264 				xstastx03	sta $d212
  1265 					stx $d202
  1266 					lda trackn_audc+1+4
  1267 					ldx trackn_audc+1
  1268 				xstastx04	sta $d213
  1269 					stx $d203
  1270 					lda trackn_audf+2+4
  1271 					ldx trackn_audf+2
  1272 				xstastx05	sta $d214
  1273 					stx $d204
  1274 					lda trackn_audc+2+4
  1275 					ldx trackn_audc+2
  1276 				xstastx06	sta $d215
  1277 					stx $d205
  1278 					lda trackn_audf+3+4
  1279 					ldx trackn_audf+3
  1280 				xstastx07	sta $d216
  1281 					stx $d206
  1282 					lda trackn_audc+3+4
  1283 					ldx trackn_audc+3
  1284 				xstastx08	sta $d217
  1285 					stx $d207
  1286 					lda #$ff
  1287 				v_audctl equ *-1
  1288 				xstysta01	sty $d218
  1289 					sta $d208
  1290 					ELI STEREOMODE==0		;* L1 L2 L3 L4
  1291 B399 A0 FF			ldy #$ff
  1292 = B39A			v_audctl equ *-1
  1293 B39B AD 54 AD			lda trackn_audf+0
  1294 B39E AE 58 AD			ldx trackn_audc+0
  1295 B3A1 8D 00 D2			sta $d200
  1296 B3A4 8E 01 D2			stx $d201
  1297 B3A7 AD 55 AD			lda trackn_audf+1
  1298 B3AA AE 59 AD			ldx trackn_audc+1
  1299 B3AD 8D 02 D2			sta $d200+2
  1300 B3B0 8E 03 D2			stx $d201+2
  1301 B3B3 AD 1B D8			lda kanal3
  1302 B3B6 D0 0C			bne omin1
  1303 B3B8 AD 56 AD			lda trackn_audf+2
  1304 B3BB AE 5A AD			ldx trackn_audc+2
  1305 B3BE 8D 04 D2			sta $d200+4
  1306 B3C1 8E 05 D2			stx $d201+4
  1307 B3C4			omin1	
  1308 B3C4 AD 1D D8			lda kanal4
  1309 B3C7 D0 0C			bne omin0
  1310 B3C9 AD 57 AD			lda trackn_audf+3
  1311 B3CC AE 5B AD			ldx trackn_audc+3
  1312 B3CF 8D 06 D2			sta $d200+6
  1313 B3D2 8E 07 D2			stx $d201+6
  1314 B3D5			omin0	
  1315 B3D5 8C 08 D2			sty $d208
  1316 					ELI STEREOMODE==2		;* L1 R2 R3 L4
  1317 					ldy #$ff
  1318 				v_audctl equ *-1
  1319 					lda trackn_audf+0
  1320 					ldx trackn_audc+0
  1321 					sta $d200
  1322 					stx $d201
  1323 					sta $d210
  1324 					lda trackn_audf+1
  1325 					ldx trackn_audc+1
  1326 					sta $d210+2
  1327 					stx $d211+2
  1328 					lda trackn_audf+2
  1329 					ldx trackn_audc+2
  1330 					sta $d210+4
  1331 					stx $d211+4
  1332 					sta $d200+4
  1333 					lda trackn_audf+3
  1334 					ldx trackn_audc+3
  1335 					sta $d200+6
  1336 					stx $d201+6
  1337 					sta $d210+6
  1338 					sty $d218
  1339 					sty $d208
  1340 					ELI STEREOMODE==3		;* L1 L2 R3 R4
  1341 					ldy #$ff
  1342 				v_audctl equ *-1
  1343 					lda trackn_audf+0
  1344 					ldx trackn_audc+0
  1345 					sta $d200
  1346 					stx $d201
  1347 					lda trackn_audf+1
  1348 					ldx trackn_audc+1
  1349 					sta $d200+2
  1350 					stx $d201+2
  1351 					lda trackn_audf+2
  1352 					ldx trackn_audc+2
  1353 					sta $d210+4
  1354 					stx $d211+4
  1355 					sta $d200+4
  1356 					lda trackn_audf+3
  1357 					ldx trackn_audc+3
  1358 					sta $d210+6
  1359 					stx $d211+6
  1360 					sta $d200+6
  1361 					sty $d218
  1362 					sty $d208
  1363 					EIF
  1364 B3D8 60				rts
  1365 B3D9			RMTPLAYEREND
  1277 							
  1278 							;org $b600
  1279 = 4000			muzyka=$4000			
  1280 							;ins 'ingame.rmt'
  1281 							
  1282 							
  1283 							
  1284 							
  1285 							
  1286 						
  1287 						
  1288 02E0-02E1> B8 58					run run
  1289 							
